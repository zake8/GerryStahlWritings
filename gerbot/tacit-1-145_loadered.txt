Specifically PDF pages 1 to 145 
 
 
Gerry Stahl’s assembled texts volume  #2 
 
Tacit & Explicit  
  Understanding  
  in Computer   
 Support    
 
 
Gerry Stahl  
 
 

      Tacit and Explicit U nderstanding in Computer Support                                       2  
   
Gerry Stahl's Assembled Texts  
 
1. Marx and Heidegger  
2. Tacit and Explicit Understanding in Computer Support  
3. Group Cognition:  Computer Support for Building Collaborative Knowledge  
4. Studying Virtual Math Teams  
5. Translating Euclid: Designing a Human -Centered Mathematics.  
6. Constructing Dynamic Triangles Together: The Development of Mathematical Group 
Cognition  
7. Essays in Soci al Philosophy  
8. Essays in Personalizable Software  
9. Essays in Computer -Supported Collaborative Learning  
10. Essays in Group -Cognitive Science  
11. Essays in Philosophy of Group Cognition  
12. Essays in Online Mathematics Interaction  
13. Essays in Collaborative Dynamic Geometry  
14. Adventures in Dynamic Geometry  
15. Global Introduction to CSCL  
16. Editorial Introductions to ijCSCL  
17. Proposals for Research  
18. Overview and Autobiographical Essays  
19. Theoretical Investigations  
20. Works of 3 -D Form  
21. Dynamic Geometry Game for Pods  
  
      Tacit and Explicit U nderstanding in Computer Support                                       3  
   
assembled texts volume #1  
 
Tacit & Explicit 
Understanding in 
Computer Support  
 
 
 
Gerry Stahl  
  
      Tacit and Explicit U nderstanding in Computer Support                                       4  
   
 
Gerry Stahl  
Gerry@GerryStahl.net  
www.GerryStahl.net  
 
 
Copyright © 1993, 2017, 2022 by Gerry Stahl  
Published by Gerry Stahl at Lulu.com  
Printed in the USA  
ISBN 978-1-329-85858-9 (ebook) 
ISBN 978 -0-557-69380-1 (paperback)  
      Tacit and Explicit U nderstanding in Computer Support                                       5  
   Note  
This volume contains the doctoral dissertation of Gerry Stahl in Computer Science 
at the University of Colorado at Boulder. It was entitled: “ Interpretation in Design: 
The Problem of Tacit  and Explicit Understanding in Computer Support of 
Cooperative Design ” and was defended on August 5, 1993 .  
The dissertation explored the implications of the theory of tacit knowledge for the 
problem of computer capture of design rationale. It discussed a software system 
for design by teams of NASA designers. The computer environment captured 
design ideas in a flexible system of professional perspectives. This research led to 
explorations after graduation in prototyping collaboration software in corporating 
mechanisms to support perspectives and negotiation.  
 
 
 
 
 
 
INTERPRETATION IN DESIGN:   
THE PROBLEM OF  
TACIT AND EXPLICIT UNDERSTANDING  
IN COMPUTER SUPPORT OF COOPERATIVE DESIGN  
 
by 
GERRY STAHL  
 
B.S., Massachusetts Institute of Technology, 1967  
University of Heidelberg, Germany, 1968  
M.A., Northwestern University, 1971  
University of Frankfurt, Germany, 1973  
Ph.D., Northwestern University, 1975  
M.S., University of Colorado, 1990  
 
 
 
 
A thesis submitted to the  
Faculty of the Graduate School of the  
University of Colorado in partial fulfillment  
of the requirement for the degree of  
Doctor of Philosophy  
Department of Computer Science  
1993  
 
 
 
 
This dissertation for the Doctor of Philosophy degree by  
Gerry Stahl  
has been approved for the  
Department of  
Computer Science  
by 
______________________________  
Gerhard Fischer  
______________________________  
Raymond J. McCall, Jr.  
 
Date: August 5, 1993  
 
Dissertation Committee:  
Gerhard Fischer,   Computer Science  (co-chair) 
Raymond McCall,   Environmental Design  (co-chair) 
Clayton Lewis   Computer Science  
Mark Gross    Environmental Design  
Michael Eisenberg   Computer Science  
Wayne Citrin    Electrical and Computer Engineering  
 
Stahl, Gerry (Ph.D., Computer Science)  
 
INTERPRETATION IN DESIGN:  
THE PROBLEM OF TACIT AND EXPLICIT UNDERSTANDING  
IN COMPUTER SUPPORT OF COOPERATIVE DESIGN  
 
Thesis directed by Professors Gerhard Fischer and Raymond McCall  
 
 
Abstract 
his work analyzes the central role of interpretation in non -routine design. 
Based on t his analysis, a theory of computer support for interpretation in 
cooperative design is constructed. The theory is grounded in studies of 
design and interpretation. It is illustrated by mechanisms provided by a software 
substrate for computer -based design e nvironments, applied to a sample task of 
lunar habitat design.  
Computer support of innovative design must overcome the problem that designers 
necessarily make extensive use of situated tacit understanding while computers 
can only store and display explicit  representations of information. The automation 
techniques used for routine design are not applicable: techniques are needed to 
support creative, tacit human understanding with explicit computer 
representations.  
The process by which designers transform the ir tacit preunderstanding into explicit 
knowledge is termed “interpretation .” Interpretation is necessary for solving 
design problems and collaborating with other designers. Considerable explicit 
knowledge is thereby generated in the natural course of desi gning. Often this 
knowledge includes the most valuable information that can be presented to 
designers who revisit these design projects or undertake similar projects in the 
future. If representations of this knowledge have been defined using computer -
based design support systems, then the representations can be captured by these 
systems for the support of subsequent design work.  
A theory of computer support for interpretation in design is presented in three 
stages. First, the role of interpretation in desig n is explored by reviewing 
descriptions of design by Alexander, Rittel, and Schön; by conducting a protocol 
analysis of lunar habitat design; and by applying Heidegger’s philosophy of 
situated interpretation. Second, this analysis of interpretation is exte nded to define T 
      Tacit and Explicit U nderstanding in Computer Support                                       9  
  a theory of computer support. The features of this theory —support for the situated, 
perspectival, and linguistic characteristics of interpretation —are used to evaluate 
previous work on software design rationale systems. Third, design princip les are 
discussed for HERMES, a prototype hypermedia substrate for building computer -
based design environments to support interpretation in tasks like lunar habitat 
design. The hypermedia integrates a perspectives mechanism and an end -user 
language to capt ure and modify representations of the design situation, alternative 
perspectives on design tasks, and terminology for conceptualizing design issues.  
 
Acknowledgements  
The perspective on design methodology and the approach to computer su pport for 
design presented here grew out of the research of Raymond McCall of the School 
of Environmental Design, Gerhard Fischer of the Department of Computer 
Science, and other members of the Human -Computer Communication (HCC) 
group at the University of Colorado at Boulder. I have been privileged to work 
closely with Ray for three years as his graduate research assistant. My H ERMES 
prototype began as a rewrite of his P HIDIAS project, and incorporated much of its 
approach. Even where my ideas have gone off  in new directions, they have been 
helped along by Ray's unbounded interest and unstinting assistance. For the same 
three years I have participated in the HCC research group led by Gerhard, 
particularly the weekly seminars on computers and design. Gerhard guided me 
from vague interests in theoretical issues to a coherent view and a concrete 
dissertation project, using his characteristic style that provides a model of non -
directive critiquing at its most effective.  
Clayton Lewis' courses on AI and interface design raised many of the concerns I 
have tried to address in my dissertation. The HERMES language benefited not only 
from Clayton's programming language evaluation methodology, but more from his 
personal perceptive analysis. Michael Eisenberg also contrib uted to my 
understanding of the language, bringing his understanding of (and support for) the 
role of languages in programmable applications. Each member of my committee 
contributed his own strong perspective to my work. However, I was able to rely on 
Mark Gross for balanced reality checks. Mark placed each draft I gave him in the 
broader view of AI and design practice, and wondered in a friendly but insistent 
way what these esoteric notions really had to do with making better habitats. 
Although I have trie d to address many concerns of my professors and fellow 
graduate students, I have used Mark to represent my target audience: skeptical but 
informed and interested. Wayne Citrin played a similar role as reader of this 
dissertation.  
While individual professor s had specific effects on my work, the most pervasive 
influence was that of the HCC research group as a whole, which included about 
twenty graduate students during my stay. They built the systems, gave the 
      Tacit and Explicit U nderstanding in Computer Support                                       11  
  presentations, and made fun of my ideas. A series of student reading groups on 
situated cognition was particularly important in helping me start to grapple with 
the ideas of Schön, Suchman, Winograd, Ehn, and Dreyfus. Research groups like 
this where people's very different perspectives are brought togethe r under the 
constraints of shared work and common vocabularies exert pervasive influences 
that are impossible to acknowledge in detail. Nevertheless, I must single out my 
beta-testers, Tamara Sumner, Jonathan Ostwald, and Kumiyo Nakakoji, who 
relentlessly critiqued drafts of every chapter. Many of the ideas and formulations 
in the dissertation arose during reviews of those drafts with them and with Ray 
McCall. Special note should also be made of the dissertation work of Brent Reeves, 
Kumiyo Nakakoji, and Fr ank Shipman, which is closely related to the themes of 
this dissertation.  
Implicit in this dissertation is the question about the relationship of AI to 
philosophy, which has intrigued me since my undergraduate days at MIT. In 1966 
I attended a debate betwe en my teachers, Marvin Minsky and Herbert Dreyfus. 
Convinced by Dreyfus' arguments that the approaches of AI were fundamentally 
flawed, I wondered what an AI based on Heidegger's philosophy would be like. 
What I am proposing now is a partial answer to that  question, although one quite 
different from anything I could have imagined 25 years ago. For my understanding 
of Heidegger and hermeneutics I am indebted to Sam Todes, Ted Kiesel, Hans -
Georg Gadamer, and members of the Frankfurt School of critical social theory. 
Writing a dissertation is part of living a life. Accordingly, this dissertation owes its 
existence to Carol Bliss, my wife, without whom I would never have moved West 
to pursue this study. She both tolerated my long hours at the computer and enrich ed 
the remaining times.  
Johnson Engineering (JE) of Boulder contributed generously the time and 
expertise of Designer Mike Pogue and Vice President John Ciciora. They provided 
the primary source of information about lunar habitat design, its needs, and its  
methods. 
The research in providing computer support for the task of lunar habitat design was 
supported in part by grants to Ray McCall from the Colorado Advanced Software 
Institute (CASI) for 1990 -91, 1991-92, and 1992 -93 in collaboration with IBM and 
JE. CASI is sponsored in part by the Colorado Advanced Technology Institute 
(CATI), an agency of the State of Colorado. CATI promotes advanced technology 
education and research at universities in Colorado for the purpose of economic 
development.  
Material from the following chapters has been previously published in different 
formats: Chapter 1 (Stahl, 1993a), Chapter 8 (Stahl, 1993b), Chapter 9 (Fischer, et 
al., 1993a, 1993b), C hapter 10 (Stahl, et al., 199 2) 
 
Contents  
 
NOTE ................................ ................................ ................................ .............5 
ACKNOWLEDGEMENTS  ................................ ................................ .......10 
CONTENTS ................................ ................................ ................................ 12 
INTRODUCTION  ................................ ................................ ........ 15 
CHAPTER 1. OVERVIEW  ................................ ................................ .......21 
1.1. UNDERSTANDING INTERPRETATION  ................................ ..21 
1.2. THE METHODOLOGY OF DESIGN  ................................ .........29 
1.3. THE EXAMPLE OF LUNAR HABITAT DESIGN  .................... 31 
1.4. THE ANALYSIS OF SITUATED INTERPRETATION  .............33 
1.5. TACIT AND EXPLICIT KNOWLEDGE IN DESIGN  ............... 38 
1.6. CONSEQUENCES FOR A THEORY OF COMPUTER SUPPORT
 ................................ ................................ ................................ ....41 
1.7. PREVIOUS SOFTWARE SYSTEMS FOR DESIGN  ................. 46 
1.8. HYPERMEDIA IN THE H ERMES SYSTEM  ............................. 48 
1.9. PERSPECTIVES IN HERMES  ................................ .................... 51 
1.10.  THE HERMES LANGUAGE  ................................ ..................... 52 
1.11.  CONCLUSIO N ................................ ................................ ...........56 
PART I. INTERPRETATION IN DESIGN  ............................... 57 
CHAPTER 2. THREE METHODOLOGIES OF DESIGN  ................... 59 
2.1. ALEXANDER: THE STRUCTURE OF A DESIGN SITUATION 60 
2.2. RITTEL: DELIBERATING FROM PERSPECTIVES  ................ 65 
2.3. SCHÖN: TACIT KNOWING AND EXPLICIT LANGUAGE  ...70 
CHAPTER 3. INTERPRETATION IN LUNAR HABITAT DESI GN .82 
3.1. SITUATIONS OF PRIVACY AND THE PROBLEM OF 
REPRESENTATION  ................................ ................................ .83 
      Tacit and Explicit U nderstanding in Computer Support                                       13  
  3.2. PERSPECTIVES ON PRIVACY  ................................ ................. 91 
3.3. CAPTURING THE LANGUAGE OF PRIVACY  ..................... 103 
CHAPTER 4. HEIDEGGER’S PHILOSOPHY OF INTERPRETATION
 ................................ ................................ ................................ .................... 112 
4.1. DEFINITION OF THE SITUATION AS BASIS FOR TACIT 
UNDERSTANDING  ................................ ................................ 117 
4.2. THE ROLE OF SHARED TRADITIONS AND PERSONAL 
PERSPECTIVES  ................................ ................................ ......126 
4.3. INTERPRETATION AS EXPLICATION IN LANGUAGE  .....133 
PART II. THE PROBLEM OF TACIT AND EXPLICIT 
UNDE RSTANDING  ................................ ................................ ..145 
CHAPTER 5. GROUNDING EXPLICIT DESIGN KNOWLEDGE  ..146 
5.1. APPLYING HEIDEGGER’S PHILOSOPHY TO DESIGN  ......147 
5.2. THE SOCIAL AND HUMAN GROUNDING OF 
INTERPRE TATION  ................................ ................................ 155 
5.3. TRANSFORMATIONS OF TACIT TO EXPLICIT 
UNDERSTANDING  ................................ ................................ 163 
CHAPTER 6. A THEORY OF COMPUTER SUPPORT  .................... 169 
6.1. A PEOPLE -CENTERED APPROACH  ................................ ......170 
6.2. SUPPORTING SITUATED, PERSPECTIVAL, LINGUISTIC 
INTERPRETA TION ................................ ................................ 172 
6.3. A MODEL OF COMPUTER SUPPORT  ................................ ...178 
CHAPTER 7. RELATED COMPUTER SYSTEMS FOR DESIGN  ...183 
7.1. EXTERNAL MEDIA FOR DESIGN  ................................ .........186 
7.2. PERSPECTIVES FOR DELIBERATION  ................................ .195 
7.3. LANGUAGES FOR HUMAN PROBLEM -DOMAIN 
COMMUNICATION  ................................ ............................... 202 
PART III. COMPUTER SUPPORT OF COOPERATIVE DESIGN
 ................................ ................................ ................................ .....215 
CHAPTER 8. REPRESENTING THE DESIGN SITUATION  ...........217 
8.1. A COMPUTATIONALLY ACTIVE MEDIUM FOR DESIGNERS
 ................................ ................................ ................................ ..218 
8.2. KNOWLEDGE REPRESENTATION IN THE HERMES 
SUBSTRATE  ................................ ................................ ...........224 
8.3. LUNAR HABITAT DESIGN ENVIRONMENTS  .................... 228 
      Tacit and Explicit U nderstanding in Computer Support                                       14  
  CHAPTER 9. INTERPRETIVE PERSPECTIVES FOR 
COLLABORATION  ................................ ................................ ................ 235 
9.1. A SCENARIO OF COOPERATION  ................................ ..........237 
9.2. A HYPERMEDIA IMPLEMENTATION OF PERSPECTIVES 248 
9.3. EVOLVING PERSPECTIVES  ................................ ................... 255 
CHAPTER 10. A LANGUAGE FOR SUPPORTING INTERPRETATION
 ................................ ................................ ................................ .................... 264 
10.1.  AN APPROACH TO LANGUAGE DESIGN  ......................... 267 
10.2 ENCAPSULATING EXPLICIT MECHANISMS IN TACIT FORMS
 ................................ ................................ ................................ ..284 
10.3 DEFINING INTERPRETIVE CRITICS  ................................ ...290 
CONCLUSION  ................................ ................................ ........... 301 
CHAPTER 11. CONTRIBUTIONS  ................................ ........................ 302 
11.1 CONTRIBUTIONS TO A PHILOSOPHY OF INTERPRETATION
 ................................ ................................ ................................ ..304 
11.2 CONTRIBUTIONS TO A THEORY OF COMPUTER SUPPORT
 ................................ ................................ ................................ ..305 
11.3 CONTRIBUTIONS TO A SYSTEM FOR INNOVATIVE DESIGN
 ................................ ................................ ................................ ..306 
BIBLIOGRAPHY  ................................ ................................ ..................... 309 
APPENDIX  ................................ ................................ ................................ 320 
A. PROGRAMMING WALKTHROUGH OF THE HERMES 
LANGUAGE  ................................ ................................ ............321 
B. TACIT USAGE OF THE HERMES LANGUAGE  ...................... 336 
C. EXPLICIT STRUCTURE OF THE HERMES  LANGUAGE  ......351 
 
 
 
 
Introduction  
 
 
 
 
 
   “Not angels, not humans,  
   and already the knowing animals are aware  
   that we are not really at home in  
   our interpreted world.”  
     Rainer Maria Rilke  
     Duino Elegies 
     (1912, p.10)  
 
      Tacit and Explicit U nderstanding in Computer Support                                       16  
  A few words from the author’s perspective may help to orient the reader 
for the task of interpreting the discussions that follow.  
 
The focus of this dissertation is interpretation in design . This theme is motivated 
by the desire  to provide computer support for the work of designers. The initial 
impetus for thinking about the support of design as the support of an interpretive 
process came from two sources (one theoretical and one empirical):  
(i) I felt that a new theoretical pers pective was needed on computer support of 
professional work, or more broadly human -computer interaction and computer 
supported cooperative work. The old view that thought was a form of 
computation —or that mind was functionally equivalent to software —has 
outlived its usefulness as a theoretical foundation for the design of software. I 
suspected that ideas from Heidegger’s philosophy could help here. Readings 
of situated cognition theorists reinforced this suspicion.  
(ii) After videotaping an initial session of lunar habitat designers at work, I was 
struck by how involved they were in processes of interpretation. In particular, 
issues of privacy in the habitat dominated their thinking and they concentrated 
on working out an interpretation of what privacy meant  under lunar mission 
conditions and what implications that interpretation had for the habitat layout.  
These ideas were only tacitly understood by me as I worked on the programming 
of the HERMES system, a software substrate for design environments to suppor t the 
work of lunar habitat designers. I would have been hard pressed to state why I 
thought Heidegger was relevant or how design was a matter of interpretation. 
Above all, I could not articulate what implications this all had for the HERMES 
software. When  my programming was done, I proceeded to try to put my implicit 
commitments into words and provide supporting evidence for them. I did this by 
writing the chapters of this dissertation, basically in their current order:  
Chapter 1 . Because HERMES was actual ly programmed before the issues about 
supporting interpretation were explicitly clear to me, the writing of the dissertation 
as a process of articulating my formerly tacit understandings in language has been 
a journey of gradual discovery. The HERMES system has served in this journey as 
an artifact to stimulate interpretation. The resultant dissertation is, to a large extent, 
a research document, sharing with the reader a contact with the raw phenomena 
that make its claims understandable. To some extent, I have attempted 
retrospectively to impose an argumentative structure on the text. So, for instance, 
      Tacit and Explicit U nderstanding in Computer Support                                       17  
  Chapter 1 provides a road map through the other chapters, so the reader has a 
clearer sense of where the journey is going than the author originally did. 
Undoubtedly, I have failed to provide sufficient direction to make the long journey 
comfortable. I rationalize this by reminding myself that in order to accept new 
ideas each reader must have some contact with the phenomena themselves (hence 
the level of deta il and proliferation of quotations), and that each reader will 
construct his or her own conclusions from the material I have offered (hence the 
lack of parsimony with respect to related thoughts and side paths).  
Chapter 2 . I turned first to three writers w ho I felt shed the most insight into the 
nature of the design process . As I tried to pinpoint their central ideas I was struck 
by the correspondence between these ideas and the three features of 
preunderstanding in Heidegger’s theory. While Alexander, Ritt el, and Schön 
discussed these three features in very different ways, they each paid special 
attention to one of them, and discussed the other two secondarily. I decided that 
these three writers could be taken as spokespeople for the three features of 
preunderstanding: its (a) situated, (b) perspectival , and (c) linguistic 
characteristics.  
Chapter 3 . In turning to the videotapes of the lunar habitat designers , I focused 
on a pivotal passage in which the direction of the rest of the designing was 
determined. Here the three features of interpretation could be seen at work: The 
designers were trying to design a situation for astronauts to live in where there 
would be a comfortable balance of private and public space. The emphasis on 
privacy defined a forceful perspective  that determined their design work. Lengthy 
discussions among the designers articulated in language their tacit understandings 
of privacy and rais ed the question of how such understandings could be 
represented in design guidelines, including NASA’s design standards.  
Chapter 4 . Heidegger’s philosophy provided an analysis of interpretation  that 
clarified many of the issues raised by the design methodo logists and the video 
protocol analysis. It also offered a basis for a theory of computer support. For 
Heidegger, interpretation is the process of transforming tacit preunderstanding 
into progressively more explicit forms . In this process, the understandin g is 
significantly altered; for instance, surprise discoveries may be made and the 
interpretive framework may require revision. The three features that are already 
present in tacit preunderstanding are each carried along and transformed in the 
more explici t forms of understanding: The situation is the tacitly preunderstood 
network of interrelationships, which may need to be revised as interpretation 
proceeds and discoveries are made that do not fit in. Interpretation always focuses 
on something as viewed fr om a particular perspective . As understanding becomes 
increasingly explicit, it can be communicated in language. 
      Tacit and Explicit U nderstanding in Computer Support                                       18  
  Chapter 5 . Applying Heidegger’s analysis  of being -in-the-world to the 
imaginative realm of design clarified the structure of the successive 
transformations of understanding that Heidegger eludes to. Like a designed 
artifact, reality is socially constructed. Human intentionality grounds the 
interpretive construction of reality in tacit preunderstanding. Transformations  of 
initially tacit preunders tandings can eventually be explicated and formalized so 
that knowledge can be reflected upon, communicated, documented, and stored in 
computer representations.  
Chapter 6 . Building on this analysis of interpretation in design, I sketched my 
theory of compu ter support . I argued that Heidegger provides theoretical grounds 
for requiring that computer systems for innovative tasks (like lunar habitat design) 
be subservient supports for the people who use them and who must make the 
critical decisions and judgment s based on intentionality and understanding that 
computers cannot have. Such systems to support interpretation should support the 
three features of understanding discussed above: representing the situation, 
offering choices of perspectives, and providing l inguistic expressions. Of course, 
software design environments could provide many other features, but these are the 
ones I focused on as illustrative of a people-centered approach  to supporting 
interpretation in design . I extended the model of successive t ransformations of 
understanding to include a model of computer support  for this process of 
interpretation.  
Chapter 7 . Previous software systems have suggested how to support particular 
points along the continuum between tacit and explicit understanding. At  the other 
extreme, domain -oriented design environments provide direct manipulation 
representations of the tacit situation. Domain -independent design rationale 
systems propose explicit systems of perspectives, query languages, or explicit 
programming langu ages. Each of these ideas from related work  have had their 
influence on the HERMES system. But none of them have tried to support 
interpretation  in design in a theoretically motivated way. I explored a number of 
suggestions in the literature for providing external media for designers  to work in, 
several mechanisms for perspectives  to organize viewpoints, and some end-user 
language approaches. These led to ideas for ways HERMES could provide a proper 
mix of support for tacit and explicit understanding, and f or the transformation of 
one into the other.  
Chapter 8 . Three key features of HERMES are discussed in the dissertation. They 
correspond to the features of human interpretation, which they are intended to 
support. (a) The hypermedia structure provides an integrated knowledge 
representation  structure that incorporates (b) a perspectives mechanism and (c) 
expressions in an end -user language. It is intended to support tacit understanding 
of a design situation by representing that situation with multimedia eleme nts that 
      Tacit and Explicit U nderstanding in Computer Support                                       19  
  can be tacitly reused and modified. To the extent necessary, a designer using the 
system can make the representation structure more explicit in order to modify it to 
meet the needs of innovation. The hypermedia substrate provides functionality for  
a computationally active medium , on which design environments can be built  for 
tasks like lunar habitat design.  
Chapter 9 . Design is generally a cooperative endeavor, involving the deliberation 
of multiple individual design perspectives and the constructi on of a shared 
perspective. HERMES supports this by organizing all knowledge in the system with 
a hierarchy of perspectives . While a designer is working, all knowledge retrieval 
and display by the system is done within a selected perspective, without the 
designer needing to be aware of this filtering of knowledge. However, designers 
can also use the perspective mechanism explicitly in order to incorporate 
knowledge from other perspectives or to create new perspectives that inherit 
information from existing ones. I described a scenario of how designers using 
HERMES could capture the knowledge that arose in the videotaped design session. 
The scenario included creation and merging of perspectives to support the 
evolution of knowledge. A discussion of the scenario presents the details of the 
hypermedia implementation of perspectives . 
Chapter 10 . The HERMES language supports tacit expression by providing a 
vocabulary of domain -oriented terminology that can be reused without  concern for 
the (potentially quite complex) underlying definitions. At the same time, the 
interface to the language allows a designer to explore the definitions of particular 
terms and modify them in accordance with innovative needs, personal 
perspectives , or collaborative agreements. While the HERMES language serves as 
a programming language for communicating algorithmic definitions to the 
computer, many of the concerns that programmers must keep explicitly in mind 
when using conventional general -purpose programming languages are 
encapsulated in tacit forms  and implicitly taken care of by the HERMES language. 
To test the power of the language, I worked out the definition of complex 
interpretive critics for privacy issues  in detail. 
Chapter 11 . What has bee n accomplished here? I set out to define a new 
theoretical perspective for the computer support of professional work, taking lunar 
habitat design as my concrete example. I proceeded by trying to rethink recent 
attempts that were around me, notably the PHIDIAS and JANUS design 
environments developed at the University of Colorado. First, I programmed my 
own design environment substrate in order to work out implementation details for 
myself. Then I studied the design methodologists and situated cognitionists w ho 
had influenced the development of these systems. I also took time to familiarize 
myself with a particular design domain, that of lunar habitat design. Guided by 
Heidegger’s analysis of interpretation, I tried to question as radically as I could the 
      Tacit and Explicit U nderstanding in Computer Support                                       20  
  rationale given for the approach of PHIDIAS and JANUS. The theory of computer 
support I arrived at is, however, not so different. I concluded that the general 
approach of those systems was consistent with my theory.  
What I feel I have achieved is not a recipe  for a new kind of software, but a more 
carefully articulated way of thinking about the design of software for innovative, 
collaborative design as epitomized by lunar habitat design. Previous rationale for 
design environments did not explicitly recognize t he centrality of interpretation in 
human-computer interaction or analyze the transformations from tacit human 
understanding to explicit computer representations. Not only does this dissertation 
work out these themes and their related issues in considerable  detail, but it also 
provides technical descriptions of software mechanisms that extend previous 
design environment techniques in order to support interpretation in design.  
 
 
CHAPTER  . OVERVIEW  
he following chapters present a theory of computer support for innovative 
(non-routine), cooperative design  based on an analysis of interpretation in 
design. They will argue that the central impediment to computer support of 
innovative design is that desig ners make extensive use of situated tacit 
understanding  while computers can only store and display explicit representations 
of information .  
The process by which designers transform their tacit preunderstanding into explicit 
knowledge is termed interpretat ion. (See Part I for an analysis of interpretation in 
design.) Interpretation is central to the process of solving design problems and is 
part of the process of collaborating with other designers; the explicit knowledge 
that is generated by this interpreta tion is therefore a natural by -product of 
innovative, cooperative design. (See Part II for a theory of computer support based 
on this generated knowledge.) Representations of this knowledge defined using 
computer -based design support systems can be capture d by these systems for the 
support of subsequent design work, including the maintenance and modification 
of the designed artifacts. (See Part III for details of a computer system for 
supporting interpretation in design.)  
Chapter 1 provides a chapter -by-chapter overview of the dissertation. It discusses 
the claims, arguments, and themes that arise in each of the subsequent chapters, 
without going into the detail necessary to defend the claims, support the arguments, 
or work out the themes. Its purpose is to provide a readers’ guide to the flow of the 
dissertation, motivating how one discussion leads into or provides the background 
for another. Section 1.1 offers a preliminary presentation of the central concept of 
interpretation, anticipating the analysis of this concept from various approaches in 
the dissertation. Each of the other sections provides an overview of a specific 
chapter. 
1.1. Understanding Interpretation  
To say that interpretation is central to innovative design is to stress that in order to 
design the designer must to some degree understand and be able to articulate the 
significance of the artifact being designed. This may include, for instance, 
understanding what is desired in a task specification, how possible composite parts 
of the artifact wi ll function and interact, or how people can use the designed T 
      Tacit and Explicit U nderstanding in Computer Support                                       22  
  artifact. According to the analysis presented below, such understanding is possible 
for people but not for computers. People understand things because they are 
actively involved with them in the world. The significance of artifacts for a person 
is determined by the artifacts’ relationships to other artifacts, activities, and people 
whose significance is already understood as part of the person’s situation. 
Understanding combines personal and socia lly shared perspectives on the world. 
All of this takes place primarily in tacit ways, i.e., unverbalized. However, one’s 
tacit understanding of something can be partially articulated or expressed explicitly 
in spoken, written, or graphical language —either to deepen one’s own 
understanding or to communicate with others.  
Two aspects of the process of interpretation can be distinguished.  
(1) There is a tacit preunderstanding  based on previous background knowledge; 
items from this preunderstanding can be arti culated explicitly.  
(2) There is the possibility of revising that preunderstanding based on discoveries  
that are opened up by it.  
That is, one can interpret something as something that one already knows about, 
or as a variation that differs from that in ways that are discovered as a result of the 
breaking of one’s tacit expectations. Accordingly, interpretation in innovative 
design involves both human understanding of extensive background and a creative 
ability to revise one’s understandings iteratively.  
The analysis of interpretation developed below distinguishes three characteristics 
of interpretation: being situated, having a perspective, and using language.1  
(a) Being situated  means that what is to be interpreted is tacitly understood by 
virtue of its associations within an open -ended network of related artifacts, 
people, human purposes, and other concerns. All of these associations are 
themselves understood as part of one’s ba ckground understanding of one’s 
involvements.  
 
1 Note that the numbering scheme of 1, 2 and a, b, c is used consistently in this 
chapter as an organizing structure for the dissertation. It indicates 
correspondences among items listed; in particular, it indexes the way in which 
computer support  features correspond to the characteristics of interpretation. 
Subsequent chapters are also organized around discussions of these 
characteristics and features, as emphasized in this Overview. Frequently, the 
numbering system is dropped and key terms are italicized as reminders that the 
discussion is focusing on (1) preunderstanding and (2) discovery, or on the (a) 
situated, (b) perspectival, and (c) linguistic character of understanding.  
      Tacit and Explicit U nderstanding in Computer Support                                       23  
  (b) Having a perspective  means that there is a focus on a certain aspect or that a 
specific approach is taken in interpreting something.  
(c) Using language  means that a particular vocabulary is available as p art of a 
tradition that provides a conceptual framework for the interpretive task.  
Each of these characteristics of interpretation is grounded in a form of 
preunderstanding that can be transformed through a corresponding phase of 
discovery. This two -dimensional structure is presented in Table 1 -1. 
Table 1-1. The structure of human interpretation.  
 
In articulating tacit understanding, interpretation both discloses inherent 
implications and discovers unanticipated consequences in the situation. Through 
interpretation, designers might (a) try to externalize their expectations about a 
design situation by drawing a sketch and then discover surprises when they explore 
the sketch. Similarly, they might need to revise their understanding as a result of 
(b) shifting their focus on a problem and deliberating from alternative perspectives 
or (c) changing the way they conceptualize an issue and refining the definitions of 
terms in their language.  
The structure of human interpretation carries over to design. The design process is 
a cycle or spiral of interpretation: (1) some item of the initial p reunderstanding —
the grasp of the design situation, the perspective for viewing, the language for 
conceptualizing —is made explicit, reflected upon, and further articulated in new 
design decisions. (2) This leads to the discovery of unanticipated consequence s or 
contingencies and a new understanding that requires revisions to the understanding 
of the design problem, its viewpoint, or terminology. (1´) The new understanding 
then becomes re -submerged into a modified tacit understanding that forms the 
starting-point for the next iteration of interpretation and design.  
The analysis of interpretation in design motivates a theory of computer support. 
According to this theory, computer support for interpretation in innovative design 
differs from autonomous software s ystems for routine design by focusing on 
supporting or augmenting human activities rather than automating them, because 
only people have the understanding and creativity required for interpretation. This  (a) situated  (b) perspectival  (c) linguistic  
(1)pre-
understanding  expectations  focus conceptualization  
(2) discovery  surprises deliberations  refinements  
      Tacit and Explicit U nderstanding in Computer Support                                       24  
  computer support takes two general forms in order to  support the two phases of 
interpretation:  
1. It provides access to a wealth of information that might be useful as a basis for 
interpreting new design tasks. This information for reuse is culled primarily 
from previous design experience, and includes (a) partial representations2 of 
design situations, (b) alternative ways of considering tasks, and (c) 
terminology helpful for conceptualizing problems.  
2. It facilitates the revision of stored information so designers can tailor existing 
representations to no vel problems and can capture innovative designs to extend 
the computerized knowledge -base and to communicate ideas to collaborators. 
This plasticity of representation —the ability to mold, form, adapt, alter, or 
modify the representations —applies to all des ign knowledge, including (a), 
(b), and (c) of point (1).  
The proposed theory of computer support suggests an approach to building 
software systems that has been prototyped in a system named H ERMES. HERMES 
is a substrate for building design environments to support interpretation in 
innovative design. Motivated by the analysis of interpretation, H ERMES provides 
the following features to support reuse and plasticity of representations of each of 
the three characteristics of interpretation, being situated, havi ng perspectives, and 
using language (see Table 1 -2): 
a-1. A persistent hypermedia network for storing partial representations of design 
situations and for browsing among them.  
a-2. Efficient mechanisms for revising the representations (multimedia nodes) an d 
modifying their associations (links).  
b-1. A perspectives mechanism that organizes specialized or personal ways of 
filtering out information of interest  
b-2. Procedures for switching perspectives or for creating new ones by merging 
existing perspectives and modifying their inherited contents in the new one.  
 
2 Note that the computer manipulates symbolic representations  of things in the 
situation, whereas the designer has a situated understanding  of the things. 
According to Heidegger’s philosophy, representations are explicit forms of 
information that only arise under certain conditions and on the basis of people’s 
normally tacit  understanding of things within the context of meaningful 
involvements. In Chapter 4, the situation is defined as this context of meaningful 
involvements, which provides a precondition for meaningful representations.  
      Tacit and Explicit U nderstanding in Computer Support                                       25  
  c-1. An end -user language that provides useful domain terms, rules for critiquing 
designs, and queries for displaying stored information.  
c-2. The ability to modify or generate new terms, critic rules,  and queries or to use 
the language for defining computations.  
Table 1-2. Computer -based mechanisms to support interpreta tion in design.  
 (a) situated  (b) perspectival  (c) linguistic  
(1) reuse hypermedia 
network perspectives 
mechanism  end-user language  
(2) plasticity  revising 
representations  merging multiple 
perspectives  defining new expressions  
 
Although computers cannot understand things the way people do, they can serve 
as a computational medium to support people’s interpretive processes. The 
computer support mechanisms listed in Table 1 -2 can augment cooperative design 
in a number of ways, including:  
a-1 As a long -term memory or repository for information that was created in past 
designing and is no w available to be shared by designers using the repository.  
a-2 As an external memory for representing and revising designs to see how 
alternative variations appear.  
b-1 As a retrieval mechanism for organizing and managing design knowledge and 
filtering th rough just what is relevant.  
b-2 As a display mechanism to define new personal and shared views of designs.  
c-1 As a linguistic medium for expressing knowledge in a canonical form that can 
be used for computations by the software.  
c-2 As a communication me dium to generate new knowledge to be shared with 
others. 
A comparison of Table 1 -1 and Table 1 -2 shows that the mechanisms of computer 
support are based on the structure of unaided human interpretation . The computer 
support is intended to extend the power of designers to operate under conditions 
of “information overload,” in which it is becoming increasingly difficult to work 
effectively without the use of computers.  
Computer support will inevitably change the practices of collaborative design. This 
need not be considered harmful —particularly in cases where traditional 
procedures have become inadequate —if important factors like the characteristics 
      Tacit and Explicit U nderstanding in Computer Support                                       26  
  of interpretation are preserved and adequately supported. Computational media 
have the potential for changing t he activities of professionals even more than the 
media of written language did in the past, because of significant opportunities for 
the computer to play a computationally active role in organizing, analyzing, 
displaying, and communicating the information . The ways in which design tasks 
are accomplished will change dramatically as the computer augments and supports 
designers to do many of the same tasks they have done unaided in the past, like 
designing and modifying artifacts.  
The proposed theory of compu ter support for interpretation in design goes to the 
root of the problem of tacit and explicit understanding. Designers approach their 
task with a background of skills, know -how, and experience that they are generally 
not aware of as they design but that i s a necessary precondition of their work as 
trained professionals. For instance, architects have the ability to understand the 
situations people might face in the buildings they design, they know how to sketch 
and visualize relationships from the perspecti ves of different concerns, and they 
move freely between various frameworks or traditions that provide meaningful 
languages or metaphors for expressing their insights. Computers have no such tacit 
preunderstanding; they can only retrieve and manipulate what  people have already 
formulated in explicit propositions or drawings. People and computers are not 
analogous processors of information. If computers are to support human cognition 
effectively, then these differences must be understood and taken into accoun t. 
By describing the transformation of tacit to explicit human understanding, the 
analysis of interpretation  not only clarifies how human cognition differs from 
computer information processing, but also suggests how computers can support 
the way people thi nk. Philosophically, the analysis of interpretation provides the 
key to a theory of people -centered computer support. Technically, the analysis 
enumerates the functionality needed for computer support of interpretation in 
design. Practically, it points out  that the process of innovative design and the 
requirements of collaboration generate both the need for computer support and the 
sources of explicit knowledge that make it possible. For instance, large, multi -
person design projects often confront the probl em of information overload, where 
computers are required to manage volumes of technical knowledge. At the same 
time, these cooperative design processes naturally articulate much explicit 
knowledge that could prove useful in subsequent computer -supported de sign work.  
The theory of computer support for interpretation in design is presented in three 
Parts: in Part I, Chapters 2, 3, and 4 develop the analysis of interpretation in design. 
In Part II, Chapters 5, 6, and 7 draw the consequences of the problem of tacit and 
explicit understanding for computer support. In Part III, Chapters 8, 9, and 10 
describe how the technical features of the H ERMES substrate support interpretation 
in collaborative design.  
      Tacit and Explicit U nderstanding in Computer Support                                       27  
  The analysis of interpretation is developed by reviewing i nsightful descriptions of 
design by design methodologists Alexander, Rittel, and Schön (Chapter 2). 
Characteristics of design enumerated in that review are then used to guide a study 
of transcripts of a design session involving a task of lunar habitat desi gn (Chapter 
3). The design process —as characterized by design methodology and as illustrated 
with lunar habitat design —is then conceptualized as a process of interpretation by 
using Heidegger’s philosophy of interpretation (Chapter 4).  
The consequences for  computer -based design systems are drawn by further 
developing the analysis of tacit and explicit understanding in design (Chapter 5), 
and extending it to include a theory of the computer support of interpretation 
(Chapter 6). This theory is applied to eva luate traditions of software design 
environments and design rationale systems; useful techniques in these previous 
systems are explored and their limitations noted (Chapter 7).  
The technical description of computer support for cooperative design describes the 
central functionality of H ERMES. It has a  hypermedia knowledge -base to support 
(a) the representation of design situations (Chapter 8). A virtual copying 
mechanism provides (b) perspectives on design knowledge (Chapter 9). An end -
user language is used for (c) articulating formerly tacit understandings in explicit 
language (Chapter 10)  
The order of presentation in the dissertation corresponds to the process of 
interpretation. First, in the Introduction and Part I a preunderstanding  is sketched 
to provide a starting point for interpreting the problem of computer support for 
innovative des ign. A review of design methodology provides a perspective  from 
which to understand design, formed by merging the perspectives of the three 
design methodologists. A lunar habitat design project provides a concrete design 
situation for grounding the develop ing understanding of design. Heidegger’s 
philosophy provides a language and conceptual framework for talking about 
interpretation in design. Second, in Part II this preunderstanding is used to explore 
possibilities for computer support that are opened up b y the preunderstanding. This 
is accomplished partially by drawing out the theoretical consequences in order to 
extend the analysis of interpretation in design to include a theory of its computer 
support. It is further accomplished by discovering the  achievements and the 
limitations of previous software systems in providing the kind of support for design 
that is called for. Third, in Part III the arrived at understanding allows for a 
discussion of the H ERMES system as an explicit illustration of possible res ponses 
to the problem of supporting interpretation in design .  
Predecessor systems to H ERMES (principally JANUS and PHIDIAS) were already 
headed in the direction that H ERMES adopts. Discussions of these earlier design 
environments made frequent reference t o Alexander, Rittel, and Schön, for 
instance, and insisted on supporting rather than automating design. The theory of 
      Tacit and Explicit U nderstanding in Computer Support                                       28  
  computer support for interpretation in design presented in this dissertation extends 
this approach theoretically and practically. Its focu s on interpretation situates its 
people-centered approach unambiguously in an analysis of human understanding. 
By providing a coherent perspective  for viewing systems to support design, the 
theory suggests principled extensions to the functionality of desi gn environments, 
such as those incorporated in the H ERMES substrate. It provides an explicit 
language as a basis for a coherent conceptual framework.  
Table 1-3. Correspondences among the chapters.  
Note that the three mechanisms of HERMES in Chapters 8, 9, and 10 correspond 
to the three characteristics of interpretation that permeate and structure the 
dissertation.  
 
Each section in the remainder of Chapter 1 provides an overview of a chapter of 
the dissertation. The first three sections ea ch provide an argument for interpreting 
design as a process of interpretation. The other sections draw the implications of 
this argument for the computer support of design. The three characteristics of 
interpretation run through all the chapters. Table 1 -3 shows the correspondences 
between the central themes in the different chapters. These correspondences link 
the theoretical analysis of interpretation to the operational mechanisms that 
provide computer support for these characteristics . For the sake of si mplicity, the 
table does not indicate that each of the entries involves both reuse of past 
information and creative modification, however this is true both for the three Chapter Theme (a) (b) (c) 
1 interpretation  situated perspectival  linguistic 
2 methodology  Alexander  Rittel Schön 
3 lunar habitat  privacy conflict  privacy 
concern privacy gradient  
4 preunderstand
ing prepossession  preview preconception  
5, 6 computer 
support represent 
situation have 
perspectives  make use of 
language 
7 previous 
systems JANUS PIE PHIDIAS 
8, 9, 10 HERMES 
software 
substrate hypermedia 
network perspectives 
mechanism  end-user language  
      Tacit and Explicit U nderstanding in Computer Support                                       29  
  characteristics of interpretation and for their corresponding software mechanisms, 
as already shown in Tables 1 -1 and 1-2. 
1.2. The Methodology of Design  
A central claim of this dissertation is that design can be viewed as fundamentally 
a process of interpretation. In this interpretive process, elements of the designer’s 
tacit background pr eunderstanding are made explicit. The first evidence in support 
of this claim is a review of the writings of three influential design methodologists. 
It is argued that their diverse but complementary descriptions of the design process 
highlight characteris tics of what is here called interpretation. They recognize the 
importance of both tacit understanding and explicit representations, as well as the 
iterative movement between them. Among the three writers, the dimensions of (a) 
the situation, (b) perspectiv es, and (c) language are all stressed. Furthermore, each 
of these dimensions is recognized to entail both (1) traditions of past knowledge to 
start from and (2) an ability to revise that knowledge to promote and grasp 
innovation.  
Alexander (1964) pioneered  the use of computers for designing. He used them to 
compute diagrams or patterns that decomposed the structural dependencies of a 
given problem into relatively independent substructures. In this way, he developed 
understandings  of the design  situation for solving a task based on an analysis of 
the unique design situation.  
Later, Alexander (1977) assembled 253 patterns that he considered useful for 
architectural design, based on an extensive study of successful past designs. These 
patterns were to be reused and modified to form personal pattern languages for 
expressing the individual perspectives of different designers. They were schematic 
enough to be adapted to a broad range of specific design situations.  
Alexander felt that the design profession necessar ily made explicit the 
understanding that was “unselfconscious” in traditional cultures in which everyone 
designed their own artifacts. His structures and patterns were meant to be tools for 
explicitly representing design situations for “self -conscious” des ign. However, he 
always also recognized the need for tacit or intuitive understanding as a basis for 
good design.  
For Rittel (1973), the heart of design was the deliberation of issues from multiple 
perspectives . In a collaborative effort, each participant may bring different 
personal interests, value systems, and political commitments to the task. Also, 
people with different technical specialties or professional skills may contribute to 
      Tacit and Explicit U nderstanding in Computer Support                                       30  
  a design. These are actually different kinds of “perspectives.” The the ory of 
computer support in Chapter 6 distinguishes three classes of perspectives that need 
to be supported:  
* personal or group perspectives  
* technical specialties (e.g., plumbing)  
* domain traditions (e.g., residential kitchens)  
However, they all provide  the same function of determining what issues will be 
addressed, what alternatives will be considered, and what criteria will be applied. 
Because they all determine the organization or relevance of information in a 
similar way, they can be discussed as one  kind of determinant of interpretation and 
can be operationalized and supported with one software mechanism (a perspectives 
mechanism).  
The important thing for Rittel was not the subjective character of interpretation 
deriving from its basis in personal perspectives, but the way in which deliberation 
among perspectives can lead to innovative solutions that would not have arisen 
without such interaction. Deliberation is an interpretive process in which 
understanding of the problem situation and of  the design solution emerges 
gradually as a product of iterative revisions subject to critical argument from the 
various perspectives. This can take place for an individual designer as well if the 
designer consecutively adopts different perspectives on the  issues. Rittel foresaw 
computer support for this. His idea of using computers to keep track of the various 
issues at stake and alternative positions on those issues led to the creation of issue -
based information systems.  
Schön (1983) argued that designers  constantly shift perspectives on a problem by 
bringing various professionally trained tacit skills to bear, such as visual 
perception, graphical sketching, and vicarious simulation. The designer’s intuitive 
appreciations shape the problem by forming a sub sidiary background awareness of 
the design task’s patterns, materials, and relationships. By then experimenting with 
tentative design moves within this tacitly understood situation, the designer 
discovers consequences and makes aspects of the problem expli cit. As this is done, 
certain features of the situation come into focus and can be named or characterized 
in a language. When focus subsequently shifts, what has been made explicit may 
slip back into an understanding that is again tacit, but is now more de veloped. 
Schön (1992) provided empirical evidence for the roles of the situation, 
perspectives for viewing, and conceptual frameworks in the iterative process of 
interpretation in design. His experiments showed how the designer uses tacit skills 
and preund erstandings to uncover unanticipated discoveries, to reflect upon them, 
      Tacit and Explicit U nderstanding in Computer Support                                       31  
  and to develop new understandings, new perspectives, and new articulations of the 
evolving design situation.  
1.3. The Example of Lunar Habitat Design  
A second argument for understandi ng design as a process of interpretation is 
presented in Chapter 3. Here, a protocol analysis of designers collaborating shows 
that most of what went on was interpretation.  
As part of the research for this dissertation, a study was undertaken of lunar hab itat 
design. Lunar habitat design is a task that is not well understood compared to many 
other, more mundane design tasks. It is not a routine matter that can be done 
according to well -formulated rules or by applying available template solutions. 
Furthermo re, it is representative of a broad range of high -tech design tasks. Such 
tasks typically involve extensive technical knowledge. They seem to call for 
computer support.  
The volume of information available to people is increasing rapidly. For many 
professionals this “information overload” means that the execution of their jobs 
requires taking into account far more information than they can possibly keep in 
mind. The lunar habitat designers here provide a prime illustration of such 
professionals. In working on their high -tech design tasks, they must take into 
account architectural knowledge, ergonomics, space science, NASA regulations, 
and lessons learned in past lunar missions. These designers turn to computers for 
help with their complex, technical problems . That is why a group of lunar habitat 
designers initiated the software development effort that led to this dissertation.  
Providing the computer support needed by lunar habitat designers is not straight -
forward. Designers need to be able to consider wide v arieties of experience, 
professional know -how, technical concerns, and previous solutions that are 
relevant to their current tasks. However, the problem is not so much one of storing 
large amounts of information as one of deciding what information to retai n that 
might be relevant to novel future tasks and how to present it to designers in formats 
that support their mode of work. It is a problem of how to manage the information 
and present it so that it can usefully serve the design process. The necessary 
decisions must be made by the designers who are involved with these tasks. 
Computer techniques for capture and display of information must be under the 
control of people engaged in the interpretation of the information.  
As part of the effort at developing co mputer support for lunar habitat designers, 
thirty hours of design sessions were videotaped and analyzed. The designers were 
      Tacit and Explicit U nderstanding in Computer Support                                       32  
  asked to design a 23 foot long by 14 foot wide cylindrical habitat to accommodate 
four astronauts for 45 days on the moon. A protoc ol analysis of segments of the 
video recording was conducted.  
The analysis of the videotape of the designers’ activities shows that design time is 
dominated by processes of interpretation, i.e., the explication of previously tacit 
knowledge in response to discoveries  of surprises. As part of the interpreting by 
the designers, graphical representations were developed for describing pivotal 
features of the design situation that had not been included in the original 
specification; perspectives  were created for  looking at the task in different ways; 
and language terminology was defined for explicitly naming, describing, and 
communicating formerly tacit understandings. The definitions of the situated 
understanding, perspectives, and language continually evolved a s part of the 
design process in an effort to achieve an adequate understanding of the design task 
and the evolving artifact . 
The nature of interpretation and the three dimensions of preunderstanding are 
illustrated in Chapter 3 with an example from the lun ar habitat design sessions. 
This designing primarily consisted of sketching and discussion that explicated 
visual and conceptual expressions used for understanding, explaining, and guiding 
the emerging design. The example analyzed has to do with the tacit notion of 
privacy and a default perspective on bathroom design related to this notion. The 
following paragraph briefly summarizes the example.  
The designers felt that a careful balance of public and private space would be 
essential given the long -term isolation in the habitat. This is an important concern 
that receives limited treatment in official NASA design guidelines. An early design 
decision proposed that there be private crew compartments for each astronaut. An 
initial sketch revealed problems with ad jacencies of public and private areas, 
leading to an interpretation of privacy as determining a “gradient” along the habitat 
from quiet sleep quarters to a public activity area. In the process, the conventional 
American idea of a bathroom was subjected to critical reflection when it was 
realized that the placement of the toilet and that of the shower were subject to 
different sets of constraints based on life in the habitat. The tacit American 
assumption of the location of the toilet and shower together was  made explicit by 
comparing it to alternative European perspectives. The revised conception 
permitting a separation of the toilet from the shower facilitated a major design 
reorganization.  
In this way, a traditional conception of “private space” as a plac e for one person to 
get away was made explicit and explored within graphical representations of the 
design situation. As part of the designing process, this concept was revised into a 
notion of “degrees of privacy ,” which facilitated the design process. The failure of 
the NASA guidelines to provide significant guidance despite a clear recognition 
      Tacit and Explicit U nderstanding in Computer Support                                       33  
  by NASA of the importance of habitability and privacy considerations raises the 
problem of how to effectively represent  notions like privacy that are ordinarily 
tacit. This problem provides the central test case for this dissertation. In Chapter 9, 
a scenario shows how designers using HERMES can define interpretive critics to 
evaluate the distribution of public and private sp aces in a lunar habitat. A detailed 
analysis of how these critics are defined in the HERMES language is then presented 
in Chapter 10.  
In this and other examples, the designers needed to revise their representations to 
enhance their understanding of the pro blem situation. They went from looking at 
privacy as a matter of individual space to reconceptualizing the whole interior 
space as a continuum of private to public areas. The conventional American notion 
of a bathroom was compared with other cultural model s and broken down into 
separable functions that related differently to habitat usage patterns. The new 
views resulted from argumentative discussions motivated by design constraints —
primarily spatial limitations and psychological factors of confinement. In these 
discussions, various perspectives were applied to the problem, suggesting new 
possibilities and considerations. Through discussion, the individual perspectives 
merged and novel solutions emerged. In the process, previously tacit features of 
the design became explicit by being named and described in the language that 
developed. For instance, the fact that quiet activities were being grouped toward 
one end of the habitat design and interactive ones at the other became a topic of 
conversation at one poin t and the terminology of a “privacy gradient” was 
proposed to clarify this emergent pattern.  
1.4. The Analysis of Situated Interpretation  
Chapter 4 presents a third argument for focusing on interpretation in design: 
computer support of innovative design sh ould be based primarily on an analysis of 
human understanding. As Norman (1993) puts it, “Without someone to interpret 
them, cognitive artifacts [like computer support systems] have no function. That 
means that if they are to work properly, they must be de signed with consideration 
of the workings of human cognition.” The philosophy of interpretation provides 
just such a consideration.  
This contrasts with many previous approaches to computerization of design and to 
artificial intelligence, which lean toward  theories on the natural science model 
(e.g., mathematical physics), like information theory and predicate logic 
formalisms. Human sciences (e.g., cultural anthropology or non -behaviorist 
psychology), however, necessarily center on human interpretation bec ause their 
      Tacit and Explicit U nderstanding in Computer Support                                       34  
  subject matter is defined by  what people consider to be important and by how 
people construe things. As one moves from routine design to highly innovative 
tasks, the distribution of roles in the human -computer relationship shifts more onto 
the people involved, and it becomes increasingly important to take into account 
their cognitive functioning.  
An initial framework for clarifying the respective roles for computers and people 
in tasks like lunar habitat design is suggested by theories of situated cognition . 
Several influential recent books3 argue that human cognition is very different from 
computer manipulations of formal symbol systems. The differences imply that 
people need to retain control of the processes of non -routine design because these  
processes rely heavily upon what might be called situated interpretation. 
Computers can provide valuable computational, visualization, and external 
memory aids for the designers by supporting such interpretation in design.  
Situated interpretation , as used here, refers to a view of human understanding as 
taking place within tacit contexts of background skills, human concerns, and 
linguistic traditions that provide its grounding. Interpretation is not just a function 
of a disinterested rational mind, but re lies on the interpreting person or people 
being actively involved with the situation, which includes the artifact being 
interpreted and supplies the basis for that artifact’s significance. (See Heidegger’s 
fuller definition of situation below and in Chapte r 4.)  
Situated cognition theory disputes the prevalent view based on the natural sciences 
model that all human cognition is based on explicit mental representations such as 
goals and plans. Winograd and Flores (1986) hold that “experts do not need to have  
formalized representations in order to act” (p.99). Although manipulation of such 
representations is often useful, there is a background of preunderstanding that 
cannot be fully formalized as explicit symbolic representations subject to rule -
governed mani pulation. This tacit preunderstanding even underlies people’s ability 
to understand representations when they do make use of them. Suchman (1987) 
concurs that goals and plans are secondary phenomena in human behavior, usually 
arising only after action has been initiated: “When situated action becomes in some 
way problematic, rules and procedures are explicated for purposes of deliberation 
and the action, which is otherwise neither rule -based nor procedural, is then made 
accountable to them” (p.54).  
 
3 A series of publications in the last decade has, in effect, defined an approach to 
cognitive science and to the theory of computer supp ort for design that goes by 
the name “situated cognition.” These include Schön (1983), Winograd & Flores 
(1986), Suchman (1987), Ehn (1988), and Dreyfus (1991).  
      Tacit and Explicit U nderstanding in Computer Support                                       35  
  This is not to denigrate conceptual reasoning and rational planning. Rather, it is to 
point out that the manipulation of formal representations alone cannot provide a 
complete model of human understanding. Rational thought is an advanced form of 
cognition that di stinguishes humans from other life forms. Accordingly, an 
evolutionary theorist of consciousness like Donald (1991) traces the development 
of symbolic thought from earlier developmental stages of tacit knowing (e.g., 
episodic and mimetic memory -based cogni tion). He shows how these earlier levels 
persist in rational human thought as the necessary foundation for advanced 
developments, including language, writing, and computer usage.  
Philosophers like Wittgenstein (1953), Polanyi (1962), Searle (1980), and Dr eyfus 
(1991) suggest a variety of reasons why tacit preunderstanding cannot be fully 
formalized as data for computation. It is too vast: background knowledge includes 
bodily skills and social practices that result from immense histories of life 
experience.  We are unaware of much of it: these skills and practices are generally 
transparent to us . It must be tacit to function: the examples of biking, swimming or 
playing a musical instrument suggest that procedural knowledge at least gets in the 
way of skilled action if it is explicit. More generally, tacit knowledge is a 
precondition for explicit knowing: we cannot formulate, understand, or use explicit 
knowledge except on the basis of necessarily tacit preunderstandings.  
The philosophical foundations of situa ted cognition theory were laid out by 
Heidegger (1927), the first to point out the role of tacit preunderstanding and to 
elaborate its implications. For Heidegger, we are always knowledgeably embedded 
in our world; things of concern in our situations are a lready meaningful before we 
engage in explicit cognitive activity. We know how to behave without having to 
think about it. For instance, an architect designing a lunar habitat knows how to 
lift a pencil and sketch a line or how to look at a drawing and see  the rough 
relationships of various spaces pictured there. The architect understands what it is 
to be a designer, to critique a drawing, to imagine being a person walking through 
the spaces of a floor plan. Such tacit, background skills or preunderstanding s of 
the design situation are necessary prerequisites for being able to design an artifact.  
Heidegger defines the situation as a person’s interpretive context —including the 
physical surround ings, the available tools, the circumstances surrounding the task  
at hand, the person’s own personal or professional aims, and social or cultural 
relations. The situation constitutes a network of signifi cance in terms of which 
each part of the situation is already meaningful. That is, the person has tacit 
knowledge of the situation as a whole; if something becomes a focus, it is 
perceived as already understood and its meaning is defined by its relations within 
the situation. Everything is tacitly understood in its relations to other things and to 
the whole.  
      Tacit and Explicit U nderstanding in Computer Support                                       36  
  According to  situated cognition in contrast to rationalist views, to an architect a 
rectangular arrangement of lines on a piece of paper is not first perceived as 
meaningless lines that need defining attributes (to be determined by subsequent 
rational thought). Rather , given the design situation, it is already understood as 
(say) a sleep compartment for astronauts. The sleep compartment is implicitly 
defined as such by the design task, the shared intentions of the design team, the 
other elements of the design, the avai lability of tools for revising the drawing, the 
sense of space conveyed by the design, the prevailing NASA terminology. This 
network of significance is background knowledge that allows the architect to think 
about features of the design, to make plans for changes, and to discover problems 
or opportunities in the evolving design. At any given moment, the background is 
already tacitly understood and does not need to be an object of rational thought 
manipulating symbolic representations.  
At some point the arch itect might realize that the sleep compartment is too close 
to some source of potential noise, like the flushing of the toilet. This physical 
adjacency would come into focus as an explicit concern against the background of 
relationships of the preunderstoo d situation. Whereas a common sense view might 
claim that the sleep compartment and toilet were already immediately and 
objectively present, and that therefore their adjacency was always there by logical 
implication, Heidegger proposes a more complex reali ty in which things are 
ordinarily hidden from explicit concern. In various ways, they can become 
uncovered and discovered, only to re -submerge soon into the background as our 
focus moves on.  
In this way, our knowledge of the world primarily consists neith er in mental 
models that represent reality nor in an unmediated and objective access to objects. 
Rather, our understanding of things presupposes a tacit preunderstanding of our 
situation. This is analogous to the view of Kuhn (1962), who argues that scient ists’ 
experimental observations presuppose their tacit ability to use their experimental 
equipment and to apply their frameworks of hypotheses and theory. Only by being 
already situated in our world can we discover things and construct meaningful 
representations of them by building upon, explicating, and exploring our tacit 
preunderstanding. Situated cognition is not a simplistic theory that claims our 
knowledge lies in our physical environment like words on a sign post: it is a 
sophisticated philosophy of interpretation.  
According to the philosophy of situated interpretation, human understanding 
develops through interpretive explication involving both (1) preunderstanding and 
(2) explorative discovery of the situation. In Heidegger’s analysis, interpretatio n 
provides the path from tacit, uncritical preunderstandings to reflection, refinement, 
and creativity. The structure of this process of interpretation reflects the 
inextricable coupling of the interpreter with the situation, i.e., of people with their 
      Tacit and Explicit U nderstanding in Computer Support                                       37  
  worlds. One’s situation is not reducible to one’s preunderstanding of it; it offers 
untold surprises, which may call for reflection, but which can only be discovered 
and comprehended thanks to one’s preunderstanding. Often, these surprise 
occasions signal breakdowns in a person’s skillful, transparent behavior, although 
one can also make unexpected discoveries in the situation through conversation, 
exploration, or external events.  
A discovery breaks out of the preunderstood  situation because it violates or goes 
beyond the network of tacit meanings that make up the preunderstanding of the 
situation. To understand what one has discovered, one must explicitly interpret it 
as something, as having a certain significance, as someh ow fitting into an 
understood background. Then it can merge into one’s comprehension of the 
meaningful situation and become part of the new background. Interpretation of 
“something as something” requires a reinterpretation of the situated context if the 
discovery does not fit into the previously understood situation.  
For instance, the lunar habitat designers discovered problems in their early 
sketches (their representations of the design situation) that they interpreted as 
issues of privacy. Although they h ad created the sketches themselves, they were 
completely surprised to discover certain conflicts among the functions of adjacent 
components, like the sleep compartments and the toilet. The discoveries could only 
occur because of their situated understandin g represented in the drawings. The 
designers paused in their sketching to discuss the new issues. First they debated 
the matter from various perspectives : experiences of previous space missions, 
cultural variations in bathroom designs, technical acoustical  considerations. Then 
they considered alternative conceptions of privacy, gradually developing a shared 
vocabulary  that guided their revisions and became part of their interpretation of 
their task. They reinterpreted their understanding of privacy and arti culated their 
new view using the terminology of a privacy gradient.  
These themes of being situated, having perspectives, and using explicit language 
correspond to the three -fold structure of preunderstanding in Heidegger’s 
philosophy. He articulates the pr e-conditions of interpretation as: (a) pre-
possession  of the situation as a network of preunderstood significance; (b) pre-
view or expectations that things in the world are structured in certain ways; and (c) 
pre-conception , a preliminary language for expr essing and communicating. In 
other words, interpretation never starts from scratch or from an arbitrary 
assignment of representations, but is an evolving of tentative prejudices and 
anticipations. (1) One necessarily starts with a preunderstanding that has  been 
handed down from one’s past experiences and inherited traditions. (2) The 
interpretive process allows one to reflect upon this preunderstanding methodically 
and to refine new meanings, viewpoints, and terminologies for understanding 
things more appro priately. 
      Tacit and Explicit U nderstanding in Computer Support                                       38  
  The analysis of interpretation based on Heidegger’s philosophy stresses the role of 
tacit preunderstanding as the basis for all understanding. Preunderstanding consists 
primarily of the characteristics of prepossession, preview, and preconception . It 
also implicitly incorporates the structure of “something as something.” Through 
interpretation, this preunderstanding is articulated. The resultant explicit 
understanding can be externalized in discourse. This can be taken further through 
the methodol ogies of science to codify knowledge. Each stage in this process 
preserves the original structure of the preunderstanding. It is because of this 
structure that metaphors, speech acts, and scientific propositions have the structure 
they do of something as something, something is some predicate, or something has 
some attribute.  
The process of explication through interpretation forms the basis for computer 
support by transforming tacit understanding into increasingly explicit forms that 
can eventually be capt ured in computer -based systems.  
1.5. Tacit and Explicit Knowledge in Design  
Heidegger’s analysis of interpretation must be applied to the realm of design 
before it can be used as the basis for a theory of computer support of design. Three 
general problems must be considered:  
* First, although his philosophy is presented in a very general way, Heidegger’s 
examples come primarily from people’s relations to physical things in the 
world, rather than to imagined artifacts that they are designing.  
* Second, he stresses that things are always understood on the basis of 
preunderstandings we already have, which makes it hard to say how innovative 
design ideas are understood.  
* Third, of course, Heidegger (writing in the mid -1920’s) did not address the 
issue of com puter representations as a form of explicit knowledge.  
Chapter 5 accomplishes the application of Heidegger’s analysis to design in three 
steps.  
* First, it shows that Heidegger’s philosophy can be extended naturally to 
design.  
* Second, it discusses the  problem of application, which addresses the issue of 
how previously captured knowledge can be adapted to innovative new designs.  
      Tacit and Explicit U nderstanding in Computer Support                                       39  
  * Third, it spells out a taxonomy of transformations of tacit understanding to 
explicit knowledge adequate for providing a ba sis for computer 
representations of normally tacit design knowledge.  
Heidegger’s concept of the situation transfers well to design. As the network of 
relationships in the understood world, the situation corresponds closely to the set 
of constraints and adj acencies that are of concern in design and that are sometimes 
even represented explicitly in design documents. Heidegger’s definition of 
interpretation as the explication of tacit understanding, involving discoveries, is 
also applicable to the process of d esign, in which relationships are explored and 
discoveries made. Consideration of interpretation in the design context clarifies 
how breakdowns in action require repair to the tacit underlying understanding of 
the situation. Although Heidegger’s examples f ocus on the individual, his 
recognition of the social dimension and the importance of shared understanding 
allows his analysis to be extended to design, which is largely collaborative.  
Heidegger’s philosophy occupies an important position in the twentieth century 
recognition that reality is socially constructed. People have access to their world 
(intentionality) because the world is in many ways a human, social creation. Of 
course, reality also has an immanence which can contradict our expectations and 
present surprises, just as we can make discoveries in designs of our own creating. 
The point is that an understanding of the world or of innovative designs requires 
the situated interpretation of a person: it cannot be reduced to a set of rules or a 
computer a lgorithm. The same goes for knowledge, which encapsulates 
understanding. To apply knowledge from past cases to a new design, one must 
apply it within a situated, perspectival, linguistic understanding. That means that 
computer software for designing should  be people -centered and should support the 
situated, perspectival, linguistic character of human understanding.  
Chapter 5 defines tacit as being expressed without words or speech, and explicit as 
being fully revealed or verbally expressed. It defines a tax onomy of forms of 
information along the continuum between these extremes and describes the 
transformations from one form to the next based on Heidegger’s analysis. These 
transformations are summarized in Figure 1 -1. Each transformation involves a 
reinterpretation of the informational content in a new medium. With that comes a 
gain in precision balanced by a loss of grounding. As a result of the increased 
clarity and the change of form, new discoveries are made about the content of the 
information.  
      Tacit and Explicit U nderstanding in Computer Support                                       40  
   
Figure 1-1. Transformations of tacit to explicit information.  
The left-hand column lists consecutive forms of information. The right -hand 
column names the transformation processes from one form to another.  
 
Heidegger uses the term discourse  for the fundame ntal shift to putting one’s 
understanding into words, even if the words are not yet asserted in speech to be 
shared with someone. After tacit preunderstanding is articulated in discourse as 
explicit understanding, this understanding can then be asserted an d externalized in 
spoken or written language (such as documented design rationale). Such 
knowledge can be further codified in accordance with formal procedures (e.g., 
scientific methods). These are important transformations for creating widely 
shared knowl edge. The movement from externalized to codified information can 
go from informal to formal (i.e., capable of being processed by computer). 
Shipman (1993) discusses this stage of formalization and methods for supporting 
it within computer -based design envi ronments. This is relevant to the further stages 
of articulation, which involve computers: capture of the information in computer 
representations and modification of these representations to adapt them to new 
requirements. The theory of computer support fo r design proposed in Chapter 6 
suggests that all stages of information articulation can take advantage of computer 
support. If designing takes place within a computer -based design environment, 
then designers can use and modify computer representations to s upport the design 
process from the start. As Reeves (1993) recommends, the design environment can 
serve as a medium of communication to support collaboration. In the process, 
design information can be captured automatically without becoming a burdensome 
task to be done in retrospect.  

      Tacit and Explicit U nderstanding in Computer Support                                       41  
  1.6. Consequences for a Theory of Computer 
Support  
The ideas of situated cognition and Heidegger’s philosophy of interpretation stress 
how different human understanding is from computer manipulations of symbols. 
These analyses suggest a people-centered approach  of augmenting, rather than 
automating, human intelligence. According to this view, software can at best 
provide computer representations for people to interpret based on their tacit 
understanding of what is being represen ted. Representations used in computer 
programs must be carefully structured by people who understand the task being 
handled thoroughly, because the computer itself simply follows the rules it has 
been given for manipulating symbols, with no notion of what they represent. 
People (e.g., software designers or software users) who understand the domain 
must codify their knowledge into software rules sufficiently to make the computer 
algorithms generate results that, when interpreted by people, will be the desire d 
results. Only if a domain can be strictly delimited and its associated knowledge 
exhaustively reduced to rules, can it be completely represented in advance (by the 
software designers) so that tasks in the domain can be automated.  
Many tasks like lunar ha bitat design that call for computer support do not belong 
to well-defined domains with fully catalogued and formalized knowledge bases. 
These tasks may require (a) exploration of possibilities never before considered, 
(b) assumption of creative viewpoints,  or (c) formulation of innovative concepts. 
Software to support designers in such tasks should provide facilities for the 
designers themselves (as the software users) to create new representations and to 
flexibly modify old representations. As the discussi on of Alexander emphasizes, 
the ability to develop appropriate understandings of the situation dynamically  is 
critical to innovative design. Because they capture understandings that evolve 
through processes of interpretation, representations need to be mod ifiable during 
the design process itself and cannot adequately be anticipated in advance or 
provided once and for all. Lunar habitat design is an example of an exploratory 
domain in two senses: (1) it is a new domain with relatively little in the way of 
accepted conventional knowledge, and (2) it involves continual innovation to meet 
novel, over -constrained, politically sensitive mission specifications.  
The assumption of the existence (even in principle) of an objective, coherent body 
of domain knowledge th at can be used without being reinterpreted in new 
situations and from different perspectives is misleading. As Rittel says, non -
routine design is an argumentative process involving the interplay of unlimited 
perspectives, reflecting differing and potential ly conflicting technical concerns, 
personal idiosyncrasies, and political interests. Rather than trying to supply all 
knowledge in advance, software to support this type of design should capture 
      Tacit and Explicit U nderstanding in Computer Support                                       42  
  alternative deliberations on important issues as they arise a nd document specific 
solutions. Then, these can be available to support interpretive deliberations. 
Furthermore, because all design knowledge is relative to perspectives, the 
computer should be used to define a network of over -lapping perspectives  with 
which to organize issues, rationale, sketches, component parts, and terminology to 
reflect the different viewpoints designers adopt. That will facilitate the retrieval of 
information relevant to a particular interpretive stance.  
As Schön emphasizes, design re lies on moving from tacit skills to explicit 
conceptualizations, and on the ability to reformulate the implications in linguistic 
expressions. Additionally, design work is inherently communicative and 
increasingly collaborative, with high -tech designs requ iring successive teams of 
designers, implementors, and maintainers. Software to support collaborative 
design should provide a language facility for designers to develop a sharable 
vocabulary  for expressing their ideas, for communicating them to future 
collaborators, and for formally representing them within computer -executable 
software. An end -user language that provides an extensible domain vocabulary, is 
usable by non -programmers, and encourages reuse and modification could help 
provide support for design ers trying to express their interpretations..  
Heidegger’s analysis of interpretation says that new interpretations are based on 
preunderstandings developed in the past or handed down by tradition. In this sense, 
it is likely that the information designers need most when they reflect on problems 
may have previously been made explicit at some moment of interpretation during 
past designing. Accordingly, one promising strategy for accumulating a useful 
knowledge base is to have the software capture knowledge that becomes explicit 
while the software is bein g used. As successive lunar habitats are designed on a 
system, issues and alternative deliberations can accumulate in its repository of 
design rationale; new perspectives can be defined with their own modified 
representations, terminology, and critic rules ; and the language can be expanded 
to include more domain vocabulary, conditional expressions, and query 
formulations.  
This is an evolutionary, bootstrap approach, where the software can not only 
support individual design projects, but simultaneously faci litate the accumulation 
of expertise and viewpoints in open -ended, exploratory domains. This means that 
the software should support designers in formalizing their knowledge when it 
becomes explicit. The software should reward its users for increasing the c omputer 
knowledge base by performing useful tasks with the new information, like 
providing documentation, communicating rationale, and facilitating reuse and 
modification of relevant knowledge.  
The theory suggested by the analysis of interpretation in desi gn is diagrammed in 
Figure 1-2. As the cycle of interpretation proceeds, driven by the needs of 
      Tacit and Explicit U nderstanding in Computer Support                                       43  
  designing and collaboration, explicit knowledge that is generated can be captured 
by the computer support system. The computer system relies on a combination of  
stored representations (for representing situations, defining perspectives, and 
articulating language expressions) and plasticity (for tailoring the existing 
representations to the requirements of the specific design process). This 
combination makes suppo rt of interpretation in design possible and simultaneously 
drives an evolution of the stored knowledge base.  
 
Figure 1-2. The theory of computer support for interpretation in design.  
The cycle of human interpretation (illustrated on the top) is mirrored by a cycle 
of evolution of the computer knowledge base (below), that uses captured explicit 
knowledge to support future interpretation.  
 
The theory proposed in Chapter 6 views the computer as a design medium. It is a 
multimedia device capable of representi ng the diverse forms of information used 
in design: text, graphics, pictures, pen sketches, numbers, voice, animation, and 
even video. It can use all these media to externalize design concepts and to store 
them for future use, serving as a medium of extern alization and long -term memory. 
This means it can be used as a medium of communication among team members 
and a medium for embedding an artifact’s design history within the design of the 
artifact itself —Reeves (1993) argues for the role of such a medium in  supporting 
collaborative work.  
 
The uses of the computer as designing medium mentioned in the preceding 
paragraph are primarily passive uses. The impact of written language on 
civilization shows that even passive media can be powerful. However, the 
computational power of the computer suggests using it as an active medium as 

      Tacit and Explicit U nderstanding in Computer Support                                       44  
  well. Certainly, numerical computations can be left to the computer: calculate 
square footage of designs or total their costs. But information can also be made 
dynamic, with representa tions modified on the basis of the state of other parts of a 
design. Furthermore, the information stored in the computer can be managed by it, 
perhaps organizing and displaying information based on a structure of defined 
perspectives. A language can make t he system programmable by designers, so they 
can adjust displays to their changing needs. Part III will show how HERMES 
accomplishes this by means of a computationally active form of hypermedia, that 
integrates a perspectives mechanism and an end -user programming language.  
One of the most powerful consequences of designing in a computational medium 
is the possibility of integrating all the relevant information. An example of this is 
the mechanism of interpretive critics  (see Fischer, et al., 1993a). It is a n extension 
of specific critics  (Nakakoji, 1993). Specific critics are critiquing rules that analyze 
the representation of a design situation and optionally display a message depending 
on the results of the analysis. For instance, if two appliances are clo ser than they 
should be in the design of a habitat, a critic might display a warning, suggest 
looking at related design rationale issues, and show similar stored designs that 
avoid the problem. The specific critics are dynamically computed based on the 
design specification that has been entered into the design rationale. The critic thus 
integrates information about the graphical design, the textual rationale, the 
computational critic rules, and other designs. It does this in a way that supports the 
needs of the designer without providing overwhelming amounts of information. 
Interpretive critics are even further embedded in the contexts of design because 
they can be defined differently in different interpretive perspectives. Their active 
behavior depends on t he current perspective and the way in which terms in the 
language are defined in that perspective. They use the language that is being used 
for the particular design, they are tied to the currently active perspective, and they 
analyze the represented situa tion.  
The view of computer support systems as computationally active communication 
media is consonant with a liberatory view of the role of computers in society. 
Feenberg (1991) argues that the expert system approach based on technical 
rationality philoso phy is profoundly anti -democratic and that an alternative 
approach to computers as communicative media is needed to give people control 
over their lives:  
Systems designed for hierarchical control are congruent with rationalistic 
assumptions that treat the computer as an automaton intended to command 
or replace workers in decision -making roles. Democratically designed 
systems must instead respond to the communicative dimension of the 
computer through which it facilitates the self -organization of human 
      Tacit and Explicit U nderstanding in Computer Support                                       45  
  communities, including those technical communities the control of which 
founds modern hegemonies. (p.108)  
The theory of computer support presented in this dissertation pursues the 
democratic alternative, founding it on a respect for the irreducible nature of hum an 
interpretation.  
The key is control. Computer systems are sophisticated tools for exerting control 
of information. As powerful as they are, computers have no understanding of the 
information they manipulate. Even in autonomous AI systems, all the 
interpretation is done by people —typically by the programmers who set up the 
system and the users who view the output. Innovative design is an arena in which 
the interpretation cannot be done in advance because this design requires 
understanding and interpretatio n at every step. Therefore, the role of computers in 
non-routine design must be to support designers. Human designers must retain 
control over (a) how things are represented, (b) which things are stored together, 
and (c) what terms are used to articulate i deas. Unless this control is vested in 
people who can use their interpretive skills, questions concerning what information 
might be relevant in a given context or in the future remain intractable for all but 
carefully delimited, well -understood, completely  codified domains. The only 
heuristics proposed for the management of design knowledge are those tacitly 
followed by traditional design practice: (1) that knowledge represented, organized, 
and articulated in the past may be useful in the future, and (2) th at designers will 
need to use their powers of interpretation to modify and apply reused knowledge 
in unique situations. (The problem of application addresses the fact that every 
situated, perspectival, linguistic understanding is unique and yet must be 
interpreted as similar to other cases; it is discussed in Chapter 5.)  
The theory of computer support provides a principled basis for designing a 
computer system to support innovative design in such tasks as lunar habitat design. 
Before exploring the ideas su ggested for such a system, the existing tradition of 
design environments is considered. This is a tradition of computer systems 
supporting the augmentation of human design efforts. It provides a basis upon 
which new ideas can be developed through extension s that are guided by the 
theory. 
      Tacit and Explicit U nderstanding in Computer Support                                       46  
  1.7. Previous Software Systems for Design  
For thirty years now, at least since Alexander (1964), efforts have been underway 
to use computers to support design. Much work in the area of computer support 
for design has concen trated on two approaches that will not be explored here:  
* Providing stand -alone tools for drafting and modeling, where the computer 
system has little or no representation of the semantics of what is being 
designed—e.g., so-called “computer aided design” ( CAD). 
* Automating the design process, where the computer is given a specification of 
a problem and is expected to produce a design with minimal interaction with 
a human user —e.g., an expert system for design.  
Although these approaches have proven useful f or certain tasks or within restricted 
domains, in general they have been shown to be quite limited. Winograd & Flores 
(1986) and Dreyfus & Dreyfus (1986), for instance, have argued that expert 
systems are in principle essentially limited when it comes to t asks like creative 
design. They have based their arguments largely on Heidegger’s philosophy and 
other ideas that are discussed in this dissertation. Rather than duplicating their line 
of criticism, Chapter 7 will draw their positive implications for build ing software 
systems that can support innovative design.  
There have always been some researchers who sought ways to use technology to 
augment human problem solving (e.g., Bush, 1945; Engelbart, 1963), rather than 
to model, simulate, or replace it. More sp ecifically, there is a tradition in design 
methodology and design rationale capture efforts, going back to Rittel and his 
associates (Rittel & Webber, 1973; Kunz & Rittel, 1984) that advocates the use of 
computer -based design systems as cognitive aids for human designers.  
Recent work in this tradition is reviewed in Chapter 7 and used as a starting point 
for designing a system to support interpretation in design. In particular, the design 
environments that will be reviewed (J ANUS, MODIFIER, PHIDIAS) are domain-
oriented in the sense that they try to embody generally accepted knowledge of their 
specialized design domains. In contrast, the domain -independent design rationale 
capture systems (K RL, PIE, DRL) focus on capturing and displaying potentially 
opposing perspectives on design issues. By synthesizing ideas from these different 
systems, the new approach will extend the notion of domain -orientation to support 
multiple interpretations of the domain as well.  
The consequences of the theory of computer support for interpretation in design 
developed in Chapter 6 motivate and guide the survey of previous software 
systems. Established techniques implemented in the computer -based design 
assistants are reviewed and their limitations are critiqued on the basis of the theory. 
      Tacit and Explicit U nderstanding in Computer Support                                       47  
  While mechanisms for representing situations, defining perspectives, and using 
language are found in some of these systems, the plasticity and integration of these 
mechanisms are quite limited. In many ways, these systems retain principles from 
expert system theory and are not oriented toward supporting interpretation in 
design even when they happen to provide some mechanisms that could be used for 
that. 
JANUS (Fischer, et al., 1989) is a design environment combining graphical and 
textual representa tions of the design situation. It introduces a multi -faceted 
architecture that includes a palette of design components for building graphical 
representations of kitchen layouts, a catalog of stored design cases, an issue -base 
of design rationale, and a dae mon mechanism for active critics. This system 
provides an important model of a design environment. Its lack of support for users 
to create new representations is recognized and addressed by a successor system 
named M ODIFIER.  
MODIFIER (Girgensohn, 1992) de fines all the knowledge representations with 
parameterized property sheets. Then it provides a user interface to these system 
internals. While it offers extensive support for the user to modify representations, 
this still involves the user in modifying LISP expressions, altering hierarchical 
inheritance trees, and generally having to be concerned with system internals. 
Thus, it supports the user (with extensive help text, examples, checklists, and even 
critic rules concerning modifications) to engage in tas ks of maintaining a 
sophisticated software system rather than supporting the user in interpretive tasks 
of design. Another problem with M ODIFIER is that it provides no mechanism for 
organizing modifications into alternative versions to support personal and  shared 
versions. 
Several systems for knowledge representation and design rationale capture 
propose the use of multiple perspectives , a mechanism that this dissertation 
recommends. K RL (Boborow  & Winograd, 1977) presents a sophisticated formal 
language for knowledge representation that incorporates a mechanism for 
perspectives. P IE (Boborow & Goldstein, 1980; Goldstein & Boborow, 1980a, 
1980b) develops the ideas of K RL further as the basis for a  design environment for 
software development. D RL (Lee, 1990; Lee & Lai, 1991) explores issues in design 
rationale capture using languages based on Rittel’s IBIS as well as K RL and PIE. 
These systems provide invaluable experience in designing languages for 
knowledge representation and design rationale, and in using perspectives 
mechanisms. However, their implementations lack the generality called for in 
certain ways. Furthermore, they a re not particularly appropriate to the kind of 
hypermedia structure that seems useful for representing a broad diversity of design 
information. They provide important examples and recommend useful principles 
for the kinds of languages and perspectives mech anisms useful in supporting 
      Tacit and Explicit U nderstanding in Computer Support                                       48  
  design. The lessons from these systems are combined in Chapter 8 with two design 
criteria: (1) the implementations should be appropriate to a hypermedia structure 
of knowledge representation and (2) end -users should be able to r evise and extend 
the vocabulary of the language and the structure of the system of perspectives.  
PHIDIAS (McCall, et al., 1990) is another design environment like J ANUS. It does 
not include as many components or a critiquing mechanism, but it does 
demonstrate the utility of a query language for users to define displays of design 
rationale. The P HIDIAS language has a number of important features: it is designed 
for navigation of hypertext and it is based on several syntactic characteristics of 
English. Vocab ulary in the language can all be defined by users, so it supports 
adaptability. P HIDIAS uses a form of hypertext that has a fine granularity; thus 
textual displays of design rationale, for instance, may be computed dynamically 
through the use of queries de fined in the language. The P HIDIAS language provides 
a good starting point for the design of a computationally powerful language that is 
appropriate to hypermedia and that can support interpretation.  
In response to the shortcomings of previous systems, an  integrated software 
prototype named H ERMES is proposed. H ERMES is a persistent hypermedia 
substrate for building design environments to support interpretation in design. Its 
mechanisms operationalize the positive design principles of the analysis of 
interpretation and the theory of computer support for interpretation in design.  
1.8. Hypermedia in the H ERMES  System  
In Greek mythology, Hermes supported human interpretation by providing the gift 
of spoken and written language and by delivering the messages o f the gods. As 
part of the research for this dissertation, a prototype software system named 
HERMES has been designed to support the preconditions of interpretation (a) by 
representing the design construction situation to support prepossession, (b) by 
providing alternative perspec tives to support preview, and (c) by including a 
language to support preconception.  
HERMES supports tacit knowing by encapsu lating mechanisms corresponding to 
each of the preconditions:  
* Interpretive critics (Fischer, et al ., 1993b) are used for analyzing the design 
situation, which is represented in arbitrarily complex hypermedia data 
structures. These critics are expressions in the H ERMES language that perform 
an analysis of the current state of some representations and th en optionally 
display a message. The evaluation of the critic expressions or rules is 
      Tacit and Explicit U nderstanding in Computer Support                                       49  
  dependent upon the currently active interpretive perspective, which determines 
the versions of the expression, of its constituent terms, and of the 
representations being analyzed.  
* Named perspectives (Stahl, 1993b) organize and manage alternative sets of 
information relevant to different purposes. By switching to a new perspective 
by selecting its name from a list, a designer can change how the representation 
of the situa tion appears, what interpretive critics are active, and in general what 
contents of the hypermedia network are “visible” from the viewpoint.  
* Language terms (Stahl, et al., 1992) define computations across the knowledge 
base. While these expressions can b e arbitrarily complex if viewed in complete 
detail, they are typically constructed in a series of stages. At every stage, the 
components of the term’s definition can themselves be given names.  
With each of these mechanisms, complexities are hidden from the  user by being 
encapsulated in named objects. These complexities can gradually be made explicit 
upon demand so the designer can reflect upon the information and modify it. 
Together, these and other mechanisms make HERMES a computationally active 
medium in which designers can do their work.  
HERMES is a knowledge -representation substrate for building computer -based 
design assistants like the Lunar Habitat Design Environment ( LHDE) shown in 
Figure 1 -3. It provides a hypermedia structure for designers to build 
representations of design knowledge.  
The network of knowledge corresponds to the design situation. Multi -media nodes 
of the knowledge representation can, for instance, be textual statements for the 
issue-base, CAD graphics for sketches, bitmap images to i llustrate ideas, or 
language expressions for critics and queries. The inter -linked hypermedia structure 
facilitates browsing by designers. It can also be used to support associative 
memory (Hinton & Anderson, 1989) or case -based dynamic memory (Schank, 
1982; Kolodner, 1984). All displays are defined by queries that dynamically 
assemble arbitrary collections of multimedia items. For instance, the Design 
Rationale window in Figure 1 -3 shows the textual issues, answers, and arguments 
that resulted from a query  that was executed by a user’s request to see the 
“discussion” of a previously viewed issue.  
 
      Tacit and Explicit U nderstanding in Computer Support                                       50  
  
discussion of issue;
W hat are the design considerations for bunks?for bunks? 
Figure 1-3. Arranging sleep compartment bunks using H ERMES. 
Windows shown (left to right) include a dialogue box for browsing the hypermedia 
content, a selection from the design rationale issue -base, a critic rule’s message, 
a graphical sketching area, and a button for changing interpretive perspectives.  
 
The hypermedia knowledge representation  structure of H ERMES is designed to 
facilitate the representation of design situations and to encourage their tailorability. 
Its generalized node and link structure models the network character of the 
situation as a network of inter -related, pre -understood significances and their 
associations. Its object -oriented implementation allows for the integration of 
information in different media —reflecting the need to bring together many forms 
of information in design. It provides graphics for sketching, text for issue -bases or 
design ration ale, and other media for annotations to support the exploration of 
represented situations. All the media and mechanisms are designed to maximize 
plasticity of representation. The H ERMES hypermedia structure incorporates a 
perspectives mechanism for managin g and viewing all information and an end -
user language for defining queries for displays, as discussed below.  
Special emphasis is placed on the synergistic integration of the hypermedia, 
perspectives, and language mechanisms in the H ERMES substrate. Defin itions of 
perspective hierarchies and language expressions are stored in the hypermedia 
network so they can be browsed and modified like all other information. By using 
nodes of the hypermedia network to define the names of perspectives and links to 
determine the inheritance relationships among perspectives, the H ERMES system 
can support annotation of these nodes to store information related to the purpose 
      Tacit and Explicit U nderstanding in Computer Support                                       51  
  or origination of the perspectives. Similarly, the nodes that define terminology and 
expressions in th e HERMES language can be linked like a semantic network 
(Quillian, 1967).  
In turn, the definition of the hypermedia structure itself incorporates both 
perspectives and language expressions. Instead of having a fixed content in some 
medium, nodes can have their content defined by the evaluation of an expression 
in the language. Nodes and links can be conditional upon some computation 
defined in the language and involving other nodes and links. Furthermore, 
hypermedia information to be displayed is always dy namically computed in the 
currently active perspective —even language expressions can have different effects 
in different perspectives. In these ways, node contents can be dependent upon the 
state of other data in the hypermedia network. The interactions of  the integrated 
hypermedia, perspectives, and language provide significant control and 
malleability for the designer. Design environments built on this substrate can have 
many features that support interpretation in design with consistent abilities to 
represent knowledge and to tailor the representations.  
1.9. Perspectives in Hermes  
HERMES includes a perspectives mechanism for organizing all knowledge 
represented in the system. This mechanism is general and can be used to define a 
variety of different  kinds of “perspectives” for categorizing information and for 
organizing inheritance of information among perspectives. For instance, 
hierarchies of perspectives can be defined for technical specialties (e.g., plumbing, 
ergonomics), knowledge domains (kitc hen design, partial gravity design), 
worldviews (Bauhaus, austere missions), specific designs (i.e., cases), individual 
preferences, shared team decisions, and experimental “what -if” versions. New 
perspectives can merge information from multiple existing p erspectives and then 
modify the information as seen through the new perspective without affecting it in 
the original perspectives. This can facilitate periodic, non -disruptive 
reorganizations of the knowledge base as it evolves.  
The perspectives mechanism  of HERMES helps to support the collaborative nature 
of design by multiple teams. Drawings, definitions of domain terms in the 
language, computations for critic rules, and annotations in the issue -base can be 
grouped together in a perspective for a project , a technical specialty, an individual, 
or a team. A new perspective can be defined to archive a version of a design for 
historical purposes so it will not change as team members continue to work on new 
versions. Every action in H ERMES takes place within s ome defined perspective, 
      Tacit and Explicit U nderstanding in Computer Support                                       52  
  which determines what versions of information are currently being accessed. 
Perspectives can collect knowledge according to various categories. For example, 
there can be perspectives for individual designers or design teams; for te chnical or 
professional specialties; for traditional or cultural domains; for specific projects; 
or for historical versions of projects.  
Since information in H ERMES is always viewed through a perspective, switching 
perspectives can support the deliberation  of alternative approaches. By redefining 
in different perspectives the same graphic objects or linguistic terms used in 
conditionals, queries, and critics, one determines how things will be displayed 
(interpreted) differently in different perspectives. Th us, as shown by a scenario in 
Chapter 9, critics in a “privacy perspective” might analyze habitat layouts using a 
concept of privacy gradient defined in that perspective, whereas the same critics 
would in effect have different definitions in other perspect ives and would therefore 
produce different results. The interpretive critics for privacy that are used in the 
scenario are analyzed and explained in detail in Chapter 10 as a case study in use 
of the language.  
The approach of H ERMES supports communication among designers. The 
representations of the design situation may include documentation of design 
rationale by specifying resolutions of issues in an issue -base. For lunar habitat 
design, such documentation is contractually required by NASA. Requirements 
traceability and clear communication of rationale are necessary for a design to 
move from the original design team to subsequent groups for approval, technical 
elaboration, mock -up, and eventual construction. Documentation is notoriously 
difficult to produce . Design rationale is most effectively captured when it is an 
explicit concern. Formulations developed in the H ERMES language by designers in 
the midst of designing can supplement the situation representations, stating for the 
benefit of future designers l ooking at their work what aspects were originally 
considered important and what rules of thumb were developed then. Viewing the 
design from the original team’s perspective preserves their interpretation, while 
subsequent groups can define their own modifie d perspectives. Individuals in work 
teams can share ideas, viewpoints, and definitions by using group perspectives that 
inherit from and modify the contents of their different personal perspectives.  
1.10.  The H ERMES  Language  
HERMES features a language for designers to use. The language is defined as a 
series of subset languages to facilitate learning by new users. First it should be 
noted that previously defined terms and expressions are used most of the time. 
      Tacit and Explicit U nderstanding in Computer Support                                       53  
  These are simply selected from lists of relevan t terms. Then there is a beginner’s 
version of the language that is very similar to the P HIDIAS language, which proved 
easy to use for non -programmer novice users. This level of the language suffices 
for defining or modifying most common terms and queries.  An intermediate level 
provides access to virtually all features of the language except those related to 
graphics. Finally, an advanced level can be used for graphics -related tasks, like 
defining interpretive critics. Most system displays and component int erfaces are 
defined in the language, so they can be modified through use of the language.  
The HERMES language defines domain vocabulary for referring to represented 
objects and their associations (the nodes and links of the hypermedia). It also 
provides expressions for stating queries to define displays and for stating rules to 
critique designs. The expressions fall into three major syntax categories: (a) 
definitions of lists of nodes, (b) expressions for filtering out nodes not meeting 
stated criteria, and (c) operations to traverse various kinds of associations. These 
support the situated, perspectival, and linguistic character of interpretation by 
naming representations of things in the design situation, filtering out objects for 
display based on viewing criteria, and providing expressions for exploring 
associations. Objects in each of these categories can be either (1) reused or (2) 
refined by combining expressions in useful ways. This defines the six primary 
syntactic classes in the language; four other classes provide auxiliary terms and 
features. The syntactic classes are listed with brief descriptions in Table 1 -4. 
      Tacit and Explicit U nderstanding in Computer Support                                       54  
  Table 1-4. Syntactic classes of the H ERMES language.  
 syntactic class  description  
a-1 Datalists options for identifying hyperme dia nodes.  
a-2 Computed Datalists  permitted combinations of language elements  
that determine sets of nodes  
b-1 Filters predicates characterizing nodes for selection  
b-2 Computed Filters  permitted combinations of language elements  
that define filter conditions  
c-1 Associations  links and other associations of nodes  
c-2 Computed 
Associations  permitted combinations of language elements  
that determine sets of Associations  
d-1 Media Elements nodes of various media: text, numbers, booleans,  
graphics, sound, video, etc.  
d-2 Computed Media 
Elements permitted combinations of media elements,  
e.g., arithmetic and boolean computations  
e-1 Pre-defined 
Terminology  connective terms, measurement primitives,  
fixed values for attributes and types  
e-2 Computed 
Terminology  namable quantifiers and numerical comparisons  
 
The language provides a tacit form of language usage for non -programmers. Most 
of the sequential processing is kept implicit, due partially to the declarative form 
of the language structure. Also, expressions that were originally figured out 
explicitly are  given names in domain terminology. In Figure 1 -3, for example, the 
user clicked on an issue about sleep compartment bunks and then chose the 
“Predicate” (Computed Association), discussion . This predicate was already 
defined to produce a hierarchy of issue s with their answers and arguments. The 
user did not have to be concerned with the recursive structure of this hierarchy or 
its iterations through multiple links. All of those computational matters were 
implicit in the definition of the predicate. The user  could simply select the 
predicate by name. This example of choosing “discussion” from a list of predicate 
names in Figure 1 -3 is typical of how the language is used in H ERMES. Even when 
one is creating a new expression, one selects syntax options in dialo gue boxes and 
      Tacit and Explicit U nderstanding in Computer Support                                       55  
  selects predefined terms from lists. This minimizes the need to remember syntax 
and terms, prevents many kinds of errors, and avoids the impression that one can 
simply use free -form English to define expressions.  
The HERMES language pervades  the system, defining mechanisms for browsing, 
displaying, and critiquing all information. This means that designers can use the 
language to modify and refine the representations, views, and evaluations of all 
forms of domain knowledge in the system. All v ocabulary in the language is 
modifiable by the designers. Every language expression (and every component of 
a larger expression) can be encapsulated by a name, so that many statements in the 
language can be defined with common terms from particular design domains. 
Considerable effort was put into the design of the language to make the appearance 
of expressions as easily interpretable as possible. Chapter 10 presents many 
examples and discusses the techniques used to achieve a readily interpretable 
appearanc e. This is just one way in which the language is designed to support tacit 
usage. Much of the knowledge that people must explicitly use in writing programs 
in conventional programming languages (assignment, variables, functions, 
quantification, etc.) has b een hidden from the user in the HERMES language (see 
Chapter 10 for a detailed description of this). The power of these mechanisms is 
available through the language, but designers need not think in terms of the 
computational mechanisms. However, when it is  necessary for a designer to 
explore the definition of a user -defined expression in the language in order to 
understand it more explicitly, this can be done.  
Combined with the perspectives mechanism, the language permits designers to 
define and refine thei r own interpretations. This allows the H ERMES substrate to 
extend systems beyond the domain -oriented approach of the knowledge -based 
design environments that H ERMES grew out of, by supporting multiple situated 
interpretations of the domain. That is, the pr evious systems pre -defined most 
domain knowledge in a single, generic knowledge base. However, all 
representations are relative to human interpretation and interpretation is 
perspectival. H ERMES lets designers reinterpret linguistic expressions of 
knowledg e already in the system and store them in appropriate perspectives. This 
retains the relationship of design knowledge to interpretive perspectives. It also 
replaces the notion of a single body of domain knowledge (whether fixed or 
evolving) with a system o f multiple perspectives on the domain. Furthermore, this 
extension encourages inter -related or relevant knowledge from diverse domains to 
be brought together in specific perspectives.  
      Tacit and Explicit U nderstanding in Computer Support                                       56  
  1.11.  Conclusion  
The analysis of situated interpretation argues that onl y people’s tacit 
preunderstanding can make information meaningful in context. Neither people nor 
computers alone can take advantage of the huge stores of data required for many 
design tasks; such information is valueless unless designers can use it in thei r 
interpretations of design situations. The data handling capabilities of computers 
should be used to support the uniquely human ability to understand. The theory of 
computer support for interpretation in design suggests that several characteristics 
of human understanding and collaboration can be supported with mechanisms like 
those in H ERMES for refining representations of the design situation, alternative 
perspectives, and linguistic expressions. The theory provides a coherent 
framework for a principled a pproach to computer support for designers’ situated 
interpretation in the age of information overload.  
In elaborating the argument of the previous paragraph, this dissertation seeks to 
make three kinds of contributions: to a philosophy of interpretation, to a theory of 
computer support, and to a system for innovative design.  
* It makes a philosophic contribution by clarifying the foundations of situated 
cognition theory in Heidegger’s philosophy of interpretation and extending 
that philosophy through an a nalysis of interpretation in design and through a 
theory of computer support for interpretation in design.  
* It makes a contribution to computer science by arguing that systems to 
augment human skills in innovative design should be oriented toward 
providing support for the processes of interpretation.  
* It makes a practical contribution by prototyping three crucial mechanisms for 
design environments: a hypermedia substrate that integrates a perspectives 
mechanism and an end -user language.  
These contribut ions reflect a belief that our age calls for alternatives to a technical 
rationality philosophy, an expert system approach to computerization, and a view 
of the designer as an isolated and unaided subject.  
 
Part I. Interpr etation in Design  
 
 
 
 
 
   “And to imagine a language  
   means to imagine a form of life.”  
     Ludwig Wittgenstein  
     Philosophical Investigations  
     (1953, §19)  
 
      Tacit and Explicit U nderstanding in Computer Support                                       58  
  Interpretation  is the process of understanding something in a specific way. That 
is, it is a matter of explicating a non -articulated (i.e., tacit) grasp of something. 
This may involve the phenomenon of seeing as: a closed line in a drawing is 
spontaneously perceived as (representing) a certain type of object. It may involve 
re-interpretation, in which a passage in a novel  is seen in a new light on the basis 
of literary criticism. A psychoanalyst might interpret a patient's dream or behavior 
as an expression of deep -seated fears. A designer could construe an assigned 
project as a problem of creating a certain kind of space, light, or form.  
An attempt will be made in the following pages to interpret interpretation: to 
articulate an increasingly more explicit understanding of what is involved in the 
process of interpretation and what role this process plays in design. What factors 
influence how things are interpreted? What prompts designers to reinterpret, and 
what cognitive function does this play? The purpose of this explo ration is to 
determine how interpretation in design can be supported by computer -based 
systems, and why it might be useful to do this.  
The next three chapters all argue that an essential feature of the designer's work 
involves processes of interpretation. Chapter 2 shows that three of the foremost 
analysts of design stress the role of interpretation (although they may not agree on 
much else). Chapter 3 presents original empirical evidence from a study of 
designers at work designing a lunar habitat. Chapter 4 offers a philosophical 
framework for conceptualizing interpretation as a fundamental aspect of human 
understanding.  
 
 
CHAPTER 2. THREE 
METHODOLOGIES OF DESIGN  
In each section of this chapter evidence will be presented in support of t he claim 
that the process of understanding in design has the following three features:  
(a) understandings of a design arise from interactions with the situation of the task 
in the world;  
(b) the designer's unique interpretive perspectives  grow out of tra ditions which 
pass on viewpoints for relating to the world, skills for behaving in the world 
and languages for talking about the world; and  
(c) explicit articulations of interpretations in language emerge from situated, tacit 
understanding and then re -submerge (although they may be captured first).  
This chapter will discuss the insights of three people who have provided insightful 
and influential interpretations of the design process: Christopher Alexander, Horst 
Rittel, and Donald Schön. Significantly, ea ch has been concerned at some point 
with the issue of providing computer support for design. Also, they emphasize the 
themes of this dissertation: Alexander focuses particularly on the problem of 
representation; Rittel emphasizes the consequences of people 's differing 
perspectives; and Schön is concerned above all with how explicit reflection arises 
from tacit understanding.  
Alexander  recognizes the need to combine mathematical methods and analysis of 
patterns with intuitive sense grounded in architectural practice. In pushing the 
paradigm of objective analysis as far as he can, he is nevertheless frank about the 
limits of empirical research and the importance of prioritizing human needs that 
are less susceptible to empirical evaluation. Finally, the pattern  language he 
proposes is meant as a basis for every culture and every person to build their own 
unique and appropriate representations of design situations.  
Rittel's analysis of the “wicked” problems of design does not suggest the 
elimination of method in  favor of arbitrary personal whim. Rather, it stresses the 
complexity of continually framing the problem and solving it in parallel. One's 
      Tacit and Explicit U nderstanding in Computer Support                                       60  
  interpretation of the problem must not only be based in the specifics of the 
situation, but must also grow out of the  exploration of potential solutions. The 
argumentative process of design is not simply one in which everyone is entitled to 
their own opinion. Rather, it is a process in which initial prejudices are supposed 
to be subjected to critique from other viewpoint s so that they will be refined. At 
the same time, Rittel recognizes that people have differing perspectives for various 
legitimate reasons, and that agreement will not always be possible even with the 
best processes of deliberation.  
Schön can be seen as a resolution of the objective and subjective approaches, for 
he stresses the interplay or dialogue between the designer (who brings tacit skills 
and personal perspectives) and the materials of a design situation (which provides 
surprises for the moves of the  designer that could not have been anticipated but 
that constrain the design). Schön's theories about the roles of tacit knowing and 
explicit reflecting, drawing upon important philosophical sources, flesh out both 
Alexander's notion of intuition and Ritte l's sense of how judgments can be 
deliberated. Schön's theory of design focuses on the movement between the 
designer’s skillful preunderstanding (“knowing -in-action”) and explicit 
articulation (“reflection -in-action”). This is precisely the movement that i s called 
interpretation in this dissertation.  
2.1. Alexander: the Structure of a Design 
Situation  
Deliberation on the question of whether and how computers should be used to 
support the work of designers has raged for several decades. In the beginning of 
the 1960's Alexander (1964) pioneered exploration of this possibility by running a 
series of computer programs for the hierarchical decomposition of systems into 
subsystems, diagrams, or patterns. This kind of decomposition was central to the 
methods he pro posed for design, and it seemed logical and necessary to use 
computationally powerful equipment to implement such analysis. However, within 
several years, Alexander was discouraged about the use of computers to support 
design. He complained that, “the peop le who are messing around with computers 
have obviously become interested in some kind of a toy. They have definitely lost 
the motivation for making better buildings” (Alexander, 1971, p.309). In his 1971 
Preface to the paperback edition of his original wo rk, he characterized the problem 
with attempts at computer support in terms of a broader problem of separating the 
study of design methodology from the practice of designing (Alexander, 1964).  
      Tacit and Explicit U nderstanding in Computer Support                                       61  
  The issues surrounding the appropriate use of computers go to t he heart of what 
design is and should be. In his now classic Notes on the Synthesis of Form —which 
presents his dissertation work incorporating the early computer programs —
Alexander reviews the history and even the prehistory of design in order to argue 
that the field reached a second watershed in the mid -twentieth century. The 
profession of design had originally emerged when society started to produce new 
needs and innovative perspectives too rapidly to allow forms to be developed 
through “unselfconscious” activities of slowly evolving traditions. Now, the 
momentum of change has reached a second qualitatively new stage:  
Today more and more  design problems are reaching insoluble levels of 
complexity. This is true not only of moon bases, factories, and radio 
receivers, whose complexity is internal, but even of villages and teakettles. 
In spite of their superficial simplicity, even these probl ems have a 
background of needs and activities which is becoming too complex to 
grasp intuitively. (Alexander, 1964, p.3)  
Design problems are situated in “a background of needs and activities.” These 
design situations are becoming so complex that the manage ment of complexity 
must become a primary concern of the field of design. The level of complexity that 
Alexander had in mind is characterized by the fact that it exceeds the ability of the 
unaided individual human mind to handle it effectively. Various meth odologies 
can help to decompose complexity, and this is where the mathematical structures, 
diagrams, or patterns that Alexander proposed come in. They provide the 
representational or computational basis today for computerization. In an obvious 
sense, compu ters are a natural tool for storing large amounts of information. But 
at a deeper level, computer languages and applications are designed to manage 
complexity. It is no coincidence that the movement toward structured 
programming was contemporaneous with Al exander's emphasis on functional 
decomposition.  
Alexander saw a major advantage of the systematic use of structures or patterns in 
what he referred to as a “loss of innocence .” When design first became a profession 
with rules that could be stated in langua ge and taught, there was, according to 
Alexander's account, a first such loss of innocence. More recently, when Bauhaus 
designers recognized that one could design for mechanized production, another 
accommodation was made with changing times. The use of sys tematic 
methodologies to help manage complexity would, Alexander claimed, entail an 
analogous acceptance of the limitations of the individual designer's intuitive 
powers. This would bring with it a significant opportunity for progress of the 
profession. Wh en the design process is formulated in terms of abstract structures 
it becomes much more readily subject to public criticism than when it is concealed 
in the mysteries of the lonesome genius’ artistry, just as the earlier formulation of 
      Tacit and Explicit U nderstanding in Computer Support                                       62  
  previously unselfco nscious design into explicit plans, articulated processes, and 
stated justifications laid the basis for a science of design that could be refined 
through on -going debate. Loss of innocence entails the removal of an outmoded 
barrier to the kind of public cr itical reflection required for a profession.  
But Alexander did not see the issue one -sidedly. Recognizing the power of both 
formal representations and non -formalizable tacit knowledge, he did not propose 
that design methods substitute for the practice of d esign or for the designer's 
practical intuitions. Rather, he recognized that intuition and rationalism were 
equally necessary, and argued for a proper balance: “Enormous resistance to the 
idea of systematic processes of design is coming from people who rec ognize 
correctly the importance of intuition, but then make a fetish of it which excludes 
the possibility of asking reasonable questions” (ibid., p.9). Alexander felt that the 
fetishism of intuition as some kind of inalienable artistic freedom of the desig ner 
functioned as a flimsy screen to hide the individual designer's incapacity to deal 
with the complexity of contemporary design problems. As a consequence of the 
designer ignoring these limitations, the unresolved issues of complexity get passed 
down to engineers who have been trained to work out details rather than to grasp 
complex organization synthetically; the product that results tends to be a 
monument to the personal idiom of the creator rather than an artifact with a good 
fit to its function.  
The themes raised by Alexander three decades ago for design methodology 
generally still confront the particular task of figuring out how best to use computers 
to support designing. Consider his first example above, that of designing a moon 
base. This is a task requiring a significant amount of knowledge. One needs to take 
into account technical considerations about supporting humans in a vacuum, 
including issues that may not have previously been thought of and investigated 
(such as the practicality of using luna r rocks as building materials). One must also 
consider the mission goals of the base, both stated and implicit. Then there are 
social and psychological issues concerning the interactions among groups of 
people who are confined in an alien environment for a  prolonged period of time. 
All of these factors interact with the more common issues of designing a habitat 
for working, eating, socializing, and sleeping —resulting in a design problem of 
considerable complexity. While computers may be necessary to manage this 
complexity, the tacit knowledge of human designers must also be brought to bear 
with their intuitions about what it would be like to live together in a lunar habitat.  
Three themes can be mentioned from Alexander's discussion in Notes: (a) The 
point of his method of decomposition is to derive substructures through an analysis 
of the design problem so that the design process can be approached (understood) 
in terms that grow out of the problem situation and provide a basis for the solution. 
One problem of  people who follow a methodology divorced from practice is that 
      Tacit and Explicit U nderstanding in Computer Support                                       63  
  their representations are not based in attempts to solve concrete tasks. (b) The 
design profession has emerged from unselfconscious traditions. Rapid 
technological change has necessitated a mu ltiplication of individual perspectives 
(and group movements) on design, but these perspectives need to retain ties to 
traditions in order to maintain goodness of fit and avoid academic or idiosyncratic 
arbitrariness. (c) Professional designing has evolved  out of tacit knowledge of 
form. While we need to make things self -conscious or explicit now, we should 
remember the basis of such knowledge in tacit understanding: the kind of 
understanding that the traditional Slovakian shawl makers (see Alexander, 1964,  
p.53) had so they could distinguish good from bad designs without having any 
theory or rules to go by. Such tacit knowledge provides a basis for what Alexander 
calls intuition. These three themes reappear in Alexander's other writings.  
It may sometimes se em that Alexander eschews personal interpretations and 
instead tries to compute mathematically determined structures, objective relations, 
and universal patterns. One can certainly view his work that way, in which case 
the problems he inevitably acknowledg es represent a reductio ad absurdum  of the 
attempt to define a theoretical basis for the automation of design. But it is also 
possible to see in his work the recognition that practice, perspectives, and intuition 
are as necessary as theory, objectivity, an d rules. Certainly in Notes and in 
Alexander’s reaction against the reception of Notes it was already clear that 
computerizable, mathematical methods of analyzing structural decomposition 
must be integrated with human design practice and intuition based on  traditions 
and tacit knowledge.  
In The Atoms of Environmental Structure  (Alexander & Poyner, 1966), for 
instance, Alexander starts out by arguing for an objective approach to design, 
based on computations of relations that meet stated requirements. His fi rst example 
of a requirement is to provide people working in an office with a view. How, he 
asks, does one know that people need or want a view? Alexander is frank about 
the complications involved here. He tries to operationalize the hypothesized need 
in terms of an underlying tendency. It is not sufficient to ask people, because their 
knowledge of their own needs is largely tacit. So experiments are needed to see if 
people choose desks with views, and under what conditions they do so. Further 
experiments a re needed to rule out other factors, such as seeking better light or 
ventilation. Then “in order to make the hypothesis more accurate, we must try to 
specify just exactly what kind of people seek a view from their offices, during what 
parts of their work t hey seek it most, just what aspects of view they are looking 
for” (p.126). In the end, Alexander admits that “The ideal of perfect objectivity is 
an illusion —and there is, therefore no justification for accepting only those 
tendencies whose existence has b een ‘objectively demonstrated .’ Other tendencies, 
though they may be speculative, are often more significant from the human point 
of view” (ibid.).  
      Tacit and Explicit U nderstanding in Computer Support                                       64  
  Another example where Alexander seems to be arguing for an objective approach, 
but in fact presents a case for supporting subjectivity is A Pattern Language  
(Alexander, et al., 1977). Here Alexander and his colleagues present 253 patterns 
for architectural designing and planning. Superficially, it may seem that these 
patterns are the kind of objective structure s that might have been produced by 
computer analyses (as in Notes), that represent the resolution of fields of 
relationships (as discussed in The Atoms of Environmental Structure ), or that 
describe eternal, de -contextualized solutions (as implied by the ti tle of the 
companion volume to A Pattern Language , A Timeless Way of Building ). For 
instance, Alexander claims, “Many of the patterns here are archetypal —so deep, 
so deeply rooted in the nature of things, that it seems likely that they will be part 
of human nature, and human action, as much in five hundred years, as they are 
today” (p. xvii). However, a closer look shows that these patterns are intended as 
a basis (distilled from the traditions of world architecture) for people to create their 
own, situated  perspectives on design: “Each solution is stated in such a way that it 
gives the essential field of relationships needed to solve the problem, but in a very 
general and abstract way —so that you can solve the problem for yourself, in your 
own way, by adapt ing it to your preferences, and the local conditions at the place 
where you are making it” (p. xiii).  
In fact, the philosophy behind A Pattern Language  is that every healthy society 
and every one of its members has their own perspective on design. These 
perspectives are shared and evolving; based on the constraints of the problems to 
be solved; and contributory to what it means to feel human and social.  
A Timeless Way of Building  says that every society which is alive and 
whole, will have its own unique and distinct pattern language; and further, 
that every individual in such a society will have a unique language, shared 
in part, but which as a totality is unique to the mind of th e person who has 
it. In this sense, in a healthy society there will be as many pattern languages 
as there are people —even though these languages are shared and similar. 
(p. xvi) 
The 253 patterns given in the book are meant as templates to start building ne w 
languages. First one chooses the templates most central to one's project. Then one 
selects related patterns to the extent that they are appropriate or desired for the 
particular project. Extensions must be made to the list of patterns to cover missing 
topics, and one is always free to modify patterns and even rename them to make 
them more relevant. Finally, one's personal language can gain richness, subtlety, 
and “poetry” by compressing multiple pattern templates for a specific problem.  
In the works just reviewed, Alexander is concerned with how to support 
interpretation in design. He successively suggests interpreting a design problem in 
      Tacit and Explicit U nderstanding in Computer Support                                       65  
  terms of structures (of functional decomposition), relations (based on tendencies), 
and patterns (articulated in a lang uage of design). In each case, he tries to push the 
notion of objectivity to its limits in terms of mathematical algorithms, 
operationalism and empiricism, or eternal paradigms. This would make computer 
support relatively straight -forward—that is, it would  make sense to pursue the 
automation of design via expert system approaches embodying algorithms for 
decomposition, rules for relations, and templates of fixed patterns. However, in 
each case Alexander notes the limits to objectivity and the over -riding importance 
of tacit intuition, the human point of view, and contextual factors. Thereby, he has 
raised the issue of how to support interpretation in design, and even debated the 
use of computers in doing this. Whether one construes Alexander as ultimately 
arguing for or against objective methods, he has in the process provided arguments 
against both purely objective and purely subjective approaches.  
2.2. Rittel: Deliberating from Perspectives  
When Rittel declared in his Dilemmas in a General Theory of Planni ng that 
“planning problems are inherently wicked” (Rittel & Webber, 1973, p.160), he 
thereby spelled out that characteristic of planning and design tasks that has 
subsequently become the central source of perplexity in trying to imagine a 
computer system t hat can effectively support the challenging aspects of design. 
Computer programs have traditionally been devised in accordance with the 
classical example of tame science and engineering problems —precisely the 
paradigm that Rittel argued is not applicable t o the problems of open societal 
systems with which planners and designers are generally concerned. This 
inadequate approach assumes that a problem can first of all be formulated as an 
exhaustive set of specifications. Then, based on such a problem statemen t, possible 
solutions can be evaluated to see which are optimal solutions to the problem. 
Computer programs based on this paradigm must represent in advance the space 
of problems and solutions for a well -defined type of design problem in an explicit, 
comprehensive, and non -controversial (objective) manner. However, as Rittel 
points out, in order to program such a computer system,  
you would have to anticipate all potential deontic judgments ahead of time 
before the machine could run. But if you did that you wouldn't need the 
computer because you would have had to have thought up all the solutions 
ahead of time. Therefore it is almost ridiculous to claim that there will be 
a designing machine if design is thought of in this sense. (Rittel, 1972, 
p.323) 
      Tacit and Explicit U nderstanding in Computer Support                                       66  
  Rittel claimed that the wicked problems of planning could not begin to be 
understood in the first place until one had already started to explore directions for 
solutions. He described what Heidegger calls the hermeneutic circle  of 
understanding (see Section 4.3) when he argued, “that you cannot understand the 
problem without having a concept of the solution in mind; and that you cannot 
gather information meaningfully unless you have understood the problem, but that 
you cannot understand the problem without informa tion about it” (Rittel, 1972, 
p.321).  
Suppose, for instance, that you are asked to plan a mission to the moon for four 
astronauts for a period of 45 days. According to NASA, the purpose has been 
specified as: to explore long -term stays for crews of intern ational backgrounds and 
mixed gender and to conduct some scientific research and some site work to 
prepare for future moon bases. In thinking about the design of the lunar habitat for 
this mission, you might begin to discuss the importance of privacy issue s with 
other people on your design team. You might feel that not only was some physical 
privacy needed for cultural reasons, but psychologically there would be a need to 
structure a careful mix of public and private spaces and opportunities. These 
privacy issues might become paramount to your design even though they had not 
been included in the original problem statement. In this way, the set of issues to be 
investigated and concerns to be balanced would emerge and evolve as the planning 
process took place.  Your ability to interpret the problem as one of privacy would 
have been based on your tacit preunderstanding of privacy as part of human life. 
On this basis you could then explicitly explore lunar privacy through discussion, 
simulation, or research on ana logous situations.  
In opposition to the then dominant methods of operations research that tried to 
compute optimal solutions from static and well -defined (“tame”) problem 
statements, Rittel called for a model of planning as “an argumentative process in 
the course of which an image of the problem and of the solution emerges gradually 
among the participants, as a product of incessant judgment, subjected to critical 
argument” (1973, p.162). The language used in actual, significant planning 
processes is itself the result of discussion and debate among various parties, each 
of whom uses subjective judgments to criticize hidden assumptions and to 
reconstrue implicit meanings of terms. No one view of the problem or its solution 
has a necessary priority. The framing  of problems and the judging of solutions 
arise through critique, deliberation, and reinterpretation, not by inference from an 
objective viewpoint. For Rittel, people's perspectives on problems are necessarily 
based on subjective conditions such as their i ndividual value systems and political 
commitments or their personal roles vis a vis the proposed solutions:  
For wicked planning problems, there are no true or false answers. 
Normally, many parties are equally equipped, interested, and/or entitled to 
      Tacit and Explicit U nderstanding in Computer Support                                       67  
  judge the solutions, although none has the power to set formal decision 
rules to determine correctness. Their judgments are likely to differ widely 
to accord with their group or personal interests, their special value -sets, 
and their ideological predilections. ( p.163) 
 Consider again the concept of privacy in the lunar habitat. A design team might 
start from the idea of visual privacy. Through discussion of the implications of life 
in this confined space, they might want to include protection from the noise of 
flushing toilets and snoring neighbors. But then the design team member 
concerned with medical contingencies might introduce a notion of privacy for an 
injured astronaut who needs to recuperate. Psychologists, sociologists, engineers, 
and other members of th e design team would each come to the common task with 
different perspectives. Given a methodology that builds on the strengths of design 
as an argumentative group process, these differences can contribute to a robust 
solution that takes into account a vari ety of competing and interacting insights, not 
all of which could have been anticipated in advance. Also central to Rittel's notion 
of argumentation or deliberation is the idea of critique as a driving force for 
improving one's thinking and designs. Thus a n information system should not only 
confirm and add to one's knowledge, but also question and weaken elements of 
that knowledge and even delete some of it (Kunz & Rittel, 1984).  
Wicked problems are open -ended in that there is no fixed set of objective cri teria 
or procedures that can be applied to them. There is what Rittel termed the “essential 
uniqueness” of these problems:  
By “essentially unique” we mean that, despite long lists of similarities 
between a current problem and a previous one, there might be  an additional 
distinguishing property that is of overriding importance. . . . There are no 
classes of wicked problems in the sense that principles of solution can be 
developed to fit all members of a class. . . . Despite seeming similarities 
among wicked problems, one can never be certain that the particulars of a 
problem do not override its commonalities with other problems already 
dealt with. (Rittel, 1973, p.164)  
This creates a serious difficulty for supposed systems of domain knowledge. Rules, 
critiquing procedures, and design rationale cannot be applied to problems 
automatically based on their similarities to past problems or to prototypical 
problems of the domain. A given new problem may have some characteristic that 
makes the chosen rule irrelevant o r inappropriate. The rule may need to be 
modified to fit the uniqueness of the problem. The problem with rules is that they 
always need meta -rules for applying them to cases. Algorithmically, this leads to 
an infinite regress which can only be circumvented  by an act of human judgment 
of appropriateness (see Wittgenstein, 1953). Automated systems always rely in the 
      Tacit and Explicit U nderstanding in Computer Support                                       68  
  end on a judgment by their designer that a certain measure of similarity will suffice; 
for the wicked problems of innovative design this is inade quate. Judgments of, for 
instance, the nature and priority of privacy under different conditions is a matter 
of interpretation. The situated, perspectival, and linguistic nature of interpretation 
means that each act of interpretation is essentially unique and its uniqueness must 
be taken into account. (See Chapter 5 for a discussion of the problem of application 
of rules and its implications for the computer support of interpretation in design.)  
Somehow, the dimensions of the design problem must be allowed  to emerge and 
change as different perspectives are brought to bear, as initial approaches are 
subjected to questioning, and as solutions gradually emerge. Rittel proposed 
systematic issue -based information systems ( IBIS) to keep track of the issues that 
were being deliberated from various positions (Kunz & Rittel, 1970). Paper 
systems for organizing all the issues in complex planning activities soon proved 
unwieldy, so Rittel proposed computer support for them: “If, for example, you 
clearly organize a plan ning process according to such an argumentative model as 
an IBIS (issue-based information system), you will find that the bureaucratic effort 
of administering the process is abominable, and therefore one might look for 
administrative and monitoring compute r aids to ease the process” (Rittel, 1972, 
p.324).  
Rittel himself made some initial attempts to define issue -based information 
systems, leading to more recent computerized systems like MIKROPLIS (McCall, 
1985), GIBIS (Conklin, et al., 1988), and other pro grams that will be reviewed later 
in Chapter 7. (Figure 2 -1 shows a view of an IBIS display in H ERMES.)  
      Tacit and Explicit U nderstanding in Computer Support                                       69  
   
Figure 2-1. A view of an issue -based information system in HERMES. 
 
Computer systems may be useful for storing, organizing, and communicating 
complex networks of argumentation —as long as they do not stifle innovation by 
imposing fixed representations of the ideas they capture or limiting diversity of 
interpretive viewpoint s. Computer support for planning and design processes as 
Rittel conceived of them must allow team members to articulate their individual 
views and judgments, to communicate these to each other, and to forge shared 
perspectives. It must support deliberation  or argumentation.  
Rittel concluded that the proper role for computers and information systems 
generally is that of an enhancer of natural (human) intelligence, not an artificial 
substitute for it. In Designing Crutches for Communication  (Kunz & Rittel, 1 984), 
he uses the image of prosthetic devices like crutches or eye glasses: “The glasses 
do not see instead of you, or on your behalf. Neither does the automobile relieve 
you from traveling. They are prosthetic devises which support, reinforce, enhance 
some capacity or activity” (p.54). Because the role of information science is not to 
automate problem -solving but to augment human problem -solving, it must be 
based on an analysis of how people use information and solve their problems: 
“Here lies the central task of information science: to develop methods for exploring 
its users' knowledge and their modes of reasoning, i.e., the systems analysis of 

      Tacit and Explicit U nderstanding in Computer Support                                       70  
  problem solving and information” (p.60). Given Rittel’s view of design as 
argumentation from perspectives, this m eans computers should support people’s 
perspectival interpretation processes.  
2.3. Schön: Tacit Knowing and Explicit Language  
Schön argues in his seminal work, The Reflective Practitioner  (1983), that much 
design knowledge is tacit, rather than being rule -based. He views the design 
process as a dialogue -like interaction between the designer and the design 
situation, in which the designer makes moves and then perceives the consequences 
of these design decisions in the design situation (e.g., in a sketch). Th e designer 
manages the complexity that would be overwhelming if all the constraints and 
possibilities were formulated as explicit symbolic rules by using professionally -
trained skills of visual perception, graphical sketching, and vicarious simulation. 
Note that these skills by -pass the process of analyzing everything into primitive 
elements and laying it out in words and propositions.  
Schön recently addressed the question of computer support for design in an article 
descriptively entitled Designing as Refl ective Conversation with the Materials of 
a Design Situation  (Schön, 1992). He argued for a necessarily limited role for 
computers in design because one of the most important things that designers do is 
to construct the design situation itself. Not only is  this something that computers 
cannot do by themselves, but it also precludes programmers of computer systems 
from pre -defining a generic design situation for the computer, prior to the 
involvement of the designer with the task.  
To illustrate his claim tha t designers “construct” the design situation, Schön 
reviews an experiment in which several experienced architects are shown a 14 -
sided, dimensioned polygon with door locations indicated, and asked to design a 
library with that shape as its footprint. One a rchitect saw the figure as two Ls back 
to back; another saw it as three pods surrounding a middle; a third saw it in terms 
of simple end entrances and complex middle entrances. Clara, another subject, 
discovered a five foot displacement in the layout which  complicated the spatial 
relationships considerably for her. (See Figure 2 -2.)  
 
      Tacit and Explicit U nderstanding in Computer Support                                       71  
  
C lara Third ArchitectFirst ArchitectClaraClara
Second Architect 
Figure 2-2. Four interpretations of the library.  
Here the library is displayed in HERMES in four interpretive contexts, 
corresponding to the views of the four architects in Schön's study.  
 
Schön concludes from these and other studies that designers construct the problem 
by seeing the situation as defined in a certain way:  
In one sense, the 5 ft displacement that Clara noticed is there to be 
discovered. However, not everyone who tried the library exercise 
discovered it. Clara did. She noticed it, named it, and made a thing that 
became critically important for her further designing. In this sense, her 
treatment of the library exercise shows her not only discovering but 
constructing  the reality of a design situation. For designers share with all 
human beings an ability to construct, via perception, appreciati on, 
language, and active manipulation, the worlds in which they function. . . . 
Every procedure, and every problem formulation, depends on such an 
ontology: a construction of the totality of things and relationships that the 
designer takes as the reality o f the world in which he or she designs. 
(Schön, 1992, p.9)  
      Tacit and Explicit U nderstanding in Computer Support                                       72  
  What is Clara constructing here? She is not constructing the physical artifact (the 
actual library or even the drawing of it), but an interpretation  of the problem 
situation as having certain cruci al features, certain semantics, for her. Her 
awareness of the five foot displacement becomes increasingly explicit. She names 
it as a feature of the task and thinks about its relationship to possible solutions. Of 
course, the displacement was always physic ally present in the drawing, and the 
other architects may have had a subsidiary awareness of it. Maybe if they were 
questioned they would retroactively even be able to focus on it. However, it was 
not a focus for their designing the way it was for Clara's;  they focused on other 
structures. Clara focused on the displacement. It became a problem for her. She 
reflected upon it as a central constraint of the design situation: she construed the 
situation in terms of this particular problem. Perhaps it presented an opportunity 
for her to do something with the library that she wanted to do; or perhaps it was a 
characteristic kind of feature she often exploited; or perhaps it stood in the way of 
her taking an accustomed approach. Whatever the details, she came to th e task in 
her own characteristic way and constructed a design situation that differed 
essentially from what each of the other architects constructed. Each architect 
interpreted  the given problem as a different task.  
According to Schön, it is essential to r ecognize that the designer brings a creative 
constructive vision to the task. The problem of the library —the structure of the 
layout—is not explicitly given in the sense that an exhaustive specification of it 
could be given even in principle, but is experi enced primarily in the mode of tacit 
subsidiary awareness  (Polanyi, 1962). Nor does the designer impose a standard 
structure for interpreting the task. Rather, the designer approaches it with certain 
anticipations, conceptualizations, and background knowle dge. Then the designer 
interacts with it to discover the basis for an understanding in terms of which the 
situation is framed or constructed. By attending to the displacement that others had 
ignored and naming it explicitly, Clara made it a crucial compone nt of her design 
situation. 
Schön's description of “construction” is very similar to Merleau -Ponty's concept 
of creative discovery,  which is dependent on both the concrete individual and the 
specific task in their dialogical relation. Schön was undoubtedly  influenced during 
his post-doctoral philosophy studies in Paris by Merleau -Ponty, the leading French 
philosopher teaching there at the time. Merleau -Ponty's Phenomenology of 
Perception  (Merleau-Ponty, 1945) is perhaps the best analysis of Heidegger's 
philosophy (see Chapter 4 below) in terms of how we perceive our world. For 
Merleau-Ponty, the interpretive situation is neither simply objectively given nor 
subjectively represented, but creatively discovered. The dialectic of anticipatory 
framing and tentati ve setting of the object of perception as such and such a thing 
is elevated to an ontological principle by him at the same time as it is grounded in 
our corporeality as embodied perceivers. Perhaps more explicitly than any one 
      Tacit and Explicit U nderstanding in Computer Support                                       73  
  else, Merleau -Ponty formulate d a philosophy that explored the interplay of 
subjectivity and objectivity. By recognizing in detail how our body spans the 
subject-object dichotomy, he resolved at an abstract level the conflict that pervades 
late twentieth -century thought, including the design theory of Alexander, Rittel, 
and Schön. (The relevance of this conflict between the objectivity of artifacts in 
the world and the subjectivity of our interpretive perspectives for the question of 
computer support for design will be discussed at the conclusion of this chapter.)  
Schön reviews other experiments that show that designers also construct the 
materials, site, and relationships in a similar way to how Clara constructed the 
crucial patterns of the project. In this sense, then, there is no give n design problem 
that is explicitly and exhaustively defined before the designer comes to it. 
Correspondingly, there can be no well -defined problem space for the designer (or 
for some automated version of the designer) to search through methodically. 
Rather, the designer's subjective, personal or intuitive appreciations shape the 
problem by constructing its patterns, materials, and relationships. The design 
project is solved by the designer experimenting with tentative moves within the 
constructed design si tuation and discovering the consequences of those moves.  
Clara made explicit the presence of the five foot displacement in the library 
footprint. As she works further on the library design, her awareness of the 
displacement may fade away, although it will have left its mark in the way she sees 
the structure of the building. This is one example of tacit knowledge becoming 
explicit for awhile during the design process, and then re -submerging into tacit, 
subsidiary awareness.  
The movement from tacit to explic it understanding is an important and ubiquitous 
phenomenon, which Schön analyzes in more general terms in The Design Studio  
(Schön, 1985). Here he talks about the movement from knowing-in-action to 
reflection -in-action. For him, human action embodies tacit  forms of knowledge: 
knowing how to physically do something without thinking about it or necessarily 
knowing that it may correspond to certain rules:  
To begin with, the starting condition of reflection -in-action is the 
repertoire of routinized responses th at skillful practitioners bring to their 
practice. This is what I call the practitioner's knowing-in-action. It can be 
seen as consisting of strategies of action, understanding of phenomena, 
ways of framing the problematic situations encountered in day-to-day 
experience. It is acquired through training, or through on -the-job 
experience. It is usually tacit, and it is delivered spontaneously, without 
conscious deliberation. (p.24)  
Schön's concept of knowing -in-action should be contrasted with the rationalist 
view of human action, which persists strongly into recent cognitive science. 
      Tacit and Explicit U nderstanding in Computer Support                                       74  
  Rationalism (e.g., the tradition of Plato and Descartes) assumes that the basis of 
action is rationa l thought, that our behavior is caused by symbolic representations 
in our minds that could be articulated in propositions in language. Even in cases 
where we are not consciously aware of rational thought, it is argued, knowledge is 
at work unconsciously or  in a “compiled” form and it could (at least in principle) 
be made explicit either by introspection of one's own motivations or by observation 
of rule-like regularities. Cognitive science makes the analogy between minds and 
software: our behavior, like tha t of a computer, is a matter of following 
computational rules that could be spelled out as an algorithm.  
Polanyi, from whom Schön borrows an analysis of tacit knowledge, turns the 
traditional relationship between tacit knowing and rational thought around:  “Tacit 
knowledge is more fundamental than explicit knowledge: we can know more than 
we can tell and we can tell nothing without relying on our awareness of things we 
may not be able to tell” (Polanyi, 1958, p. x). Our ability to use language and 
rational thought depends on more primordial skills and practices that cannot be 
clearly and exhaustively explicated: “We may say in general that by acquiring a 
skill, whether muscular or intellectual, we achieve an understanding that we cannot 
put into words and wh ich is continuous with the inarticulate faculties of animals” 
(p.90). The priority of the tacit over the explicit does not mean that tacit knowledge 
is somehow better or more valuable, just that it is the precondition in terms of both 
ontogeny and phylogen y. That is, for an individual person to articulate an idea, 
he or she must previously have possessed a tacit background understanding that 
led to the idea and grounded its meaning . Similarly, for the human species to have 
developed sophisticated language a nd rational thought, it must have already 
evolved tacit forms of understanding such as those based on episodic (case -based) 
and mimetic (imitative) memory. Rational thought is still what distinguishes 
people from other animals, but that does not mean that rationality can exist without 
a foundation in tacit knowing -in-action.4  
Polanyi provides the most concrete and detailed examination of tacit knowledge 
available. His analysis is strikingly close to that of Heidegger (see Chapter 4), as 
Polanyi acknowledg es in his 1964 Preface: “All understanding is based in our 
dwelling in the particulars of that which we comprehend. Such indwelling is a 
participation of ours in the existence of that which we comprehend; it is 
Heidegger's being-in-the-world” (p. x). Unfor tunately, Polanyi tends toward 
relativism, ending with a concept of “personal knowledge” that is too little 
grounded in the objectivity of a shared world. He emphasizes that everyone can 
have their own personal interpretations (assuming certain constraints  of 
 
4 For a thorough discussion of the evolutionary basis for higher cognition, taking 
into account  the latest findings of the cognitive sciences, see Donald (1992).  
      Tacit and Explicit U nderstanding in Computer Support                                       75  
  consistency, etc.), but lacks the sense of our embodiment (Merleau -Ponty) or 
situatedness (Heidegger) in a shared world, common traditions, social practices, 
and public language. (Compare Heidegger’s views on a shared world in Section 
4.2.) 
Polanyi dis tinguishes focal and subsidiary awareness . His view of this is derived 
from the distinction between foreground and background in classical Gestalt 
psychology. Applying these terms, one could say that when Clara had a focal 
awareness of the five foot displa cement, she also had a subsidiary awareness of the 
floor plan as a whole. It was only on the basis (background) of her tacit 
understanding of the problem as a whole (the floor plan) that the displacement 
could be taken as important and be understood as hav ing certain implications —
causing certain problems for the design. But, given this tacit knowledge of the 
whole, the focal part became the meaning of the whole: the design problem became 
a problem of resolving the issue of the displacement.  
One can, accord ing to Polanyi, only be focally aware of one thing at a time. When 
we switch our attention to something of which we have hitherto been subsidiarily 
aware, it loses its previous meaning. Consider the following three phases of Clara's 
attention:  
Phase 1. She  focuses on the plan as a whole, being only subsidiarily aware of the 
displacement (the way the other architects remained at best subsidiarily aware 
of it). 
Phase 2. She focuses on the displacement. Now the displacement becomes the 
meaning of the whole flo or plan. She becomes more explicitly aware of the 
displacement and starts to explore its details and implications. However, she 
can never achieve absolute explicit knowledge of the displacement issue 
because it involves and relies upon her tacit understand ing of the general 
background problem.  
Phase 1'. She returns her attention to the floor plan in general. Now her knowledge 
of the displacement becomes tacit once more. Of course, this tacit knowledge 
is much richer then it was originally, when she barely n oticed it like the other 
architects. Now it can play an important role in her thinking about the floor 
plan. 
How does Clara make these transitions? Why does the focus of her attention shift 
during the design process? Schön proposes an interesting theory of  breakdowns  to 
account for the shift from tacit knowing -in-action to an explicit focus and 
reflection. He argues that we can go along just doing what we are skilled at doing 
without much need for conscious thought. We are pretty much immersed in the 
doing, and any use of explicit language is more in the way of commentary than 
figuring things out. This can continue comfortably until we hit a problem that our 
      Tacit and Explicit U nderstanding in Computer Support                                       76  
  skill cannot automatically resolve. Then, tacit doing suddenly breaks down and we 
have to think throu gh the problem, explicitly focusing on the problem area:  
Sometimes, however, there are surprises. These take the form of 
unanticipated events which do not fit existing understandings, fall outside 
the categories of knowing -in-action. . . .  
There is a dema nd for reflection, through turning to the surprising 
phenomena and, at the same time, back on itself to the spontaneous 
knowing-in-action that triggered surprise. It is as though the practitioner 
asked himself, “What is this?” and at the same time, “How ha ve I been 
thinking about this?”  
Such reflection must be at least in some degree conscious. It converts tacit 
knowing-in-action to explicit knowledge for action. (Schön, 1985, p.24)  
We become aware of the problem and of what we have been doing that led us t o 
the problem.  
For instance, Clara was sketching in phase 1 above. She was exploring the 
approaches to the different entrances in the floor plan by drawing paths that users 
of the library would need to take. She was using her tacit architectural skills of  
sketching and vicariously moving through the spaces of the drawing. As she 
approached one of the interior doors, Clara suddenly remarked, “It's interesting 
that there's a five foot displacement here. I'm beginning to get more of a sense of 
those dimension s” (Schön, 1992, p.8). In the time it took her to say this, Clara 
passed through phase 2 and into phase 1'.  
As Schön's commentary to this typical moment analyzes it, this was an instance of 
surprise or breakdown, which stimulated successful reflection -in-action. Clara had 
been pursuing a problem about the approach to the library. As she traversed one 
wall in her imagination she was surprised to find that it was longer than all the 
other (equal length) walls. Glancing across the interior, she saw the five f oot jog 
in the opposite wall. These newly observed facts presented a problem for her 
attempt to find a comfortable approach to the building because they changed her 
understanding of the overall configuration. They showed that certain walls of 
interest were  actually longer than other walls. Focusing on the five foot segments 
that made this difference gave new meaning to the whole building. As a trained 
architect, Clara could reflect on her discovery quickly, understand its significance 
and incorporate it in what she had been doing before.  
Schön stresses that he is concerned with the form of reflection that actually takes 
place in the phase 2 moment of problem -solving—not what takes place 
retroactively long after the problem has been solved and the engagement  with the 
process is broken. For Schön, reflection -in-action “must take place in the action-
      Tacit and Explicit U nderstanding in Computer Support                                       77  
  present—the period of time in which thinking can still make a difference to the 
outcomes of action. It has a critical function, questioning and challenging the 
assumptional basis of action, and a restructuring  function, reshaping strategies, 
understanding of phenomena, and ways of framing problems” (Schön, 1985, p.25).  
As a result of this moment of breakdown -reflection -repair, Clara's understanding 
of the overall pro blem has changed, as she immediately remarks. This does not 
mean she has an absolute and fully explicit understanding of the problem, but 
rather, as she puts it, she is “beginning to get more of a sense of those dimensions.” 
The fact that she goes on to ex plore other issues and transfers her attention away 
from the displacement does not mean that the knowledge she gained from her 
momentary reflection -in-action is gone. It has just become subsidiary and tacit. 
According to Schön's description, later on in he r designing, when she considered 
the entrance on the other side next to the five foot jog, “her discovery of the five 
foot displacement reemerges, and becomes central to her rethinking of spaces for 
circulation and use” (Schön, 1992, p.8).  
Schön argues tha t a computer program cannot on its own construct a design 
situation the way an architect does, picking out, naming, and focusing upon critical 
patterns, materials, and relationships. The “construction” of a situation requires 
evolving a representation for it through the dialectic of creative -discovery or 
reflective conversation. It requires a subtle interplay between tacit knowing -in-
action and more explicit reflection -in-action. To the extent that the role of a 
designer includes applying intuitive, percept ual, and linguistic skills to view the 
situation creatively and to converse with it reflectively, a computer cannot do what 
a human designer does. Assuming that Schön is correct that these skills are 
necessary for real design, a computer can also not accom plish the design task using 
alternative methods to those used by humans, because computer programs as we 
know them are ultimately based on predefined representations of fixed and strictly 
delimited ontologies. Computer programs for design are therefore lim ited to 
solving problems in well -defined “microworlds” (Papert, 1980) in which the 
framing of new problems is trivial, or else to working with human designers to 
augment their tacit skills and to allow them to define the perspectives and concepts 
in terms of which tasks are to be undertaken. Artificial intelligence (AI) projects 
have usually followed the microworlds option, trying to capture knowledge of a 
delimited domain in a symbolic representation that facilitates algorithmic 
computations. Schön calls f or the alternative option of providing tools for people 
to define for themselves (within a computer system) representations of their own 
constructions or personal interpretations.  
Ways must be found to support the interplay of tacit knowledge -in-action wit h 
more explicit reflection -in-action, which re -submerges into tacit awareness when 
the action -present passes. For a computer to process data, all information must be 
      Tacit and Explicit U nderstanding in Computer Support                                       78  
  explicitly stated for it. A computer cannot slip facilely between the tacit and the 
explicit, the way people move from knowing -in-action to reflection -in-action. A 
person must translate the tacitly perceived world into a representation that makes 
explicit for the computer the person's partially implicit interpretation. Schön’s 
theory of how des igners are constantly making aspects of their implicit 
understanding explicit suggests that the computer should capture these explicit 
representations during the “action present” in which they can be most easily 
articulated. The implications of this for a theory of computer support are taken up 
in Chapter 6.  
Three Perspectives on Design.  The three writers just considered all present views 
of design as a process of interpretation . Alexander's tack of structural 
decomposition is one approach to interpreting a  problem. For instance, the four 
architects in Schön's experiment interpreted their design situation differently by 
decomposing the library floor plan in four different ways: into a pair of “L” shapes, 
three pods around a middle space, a combination of sim ple and complex entrances, 
or a set of equal length walls complicated by a five foot displacement. Alexander 
recognizes how subtle even an objective seeming interpretation of a design can be, 
such as supporting people's tendency to want a view from their o ffice desk. Finally, 
Alexander tries to provide a pattern language that people can use to articulate 
personal or group interpretations of buildings.  
Rittel views the problems of planning and design as wicked problems largely 
because the participants in the se processes bring conflicting interpretations to bear: 
they have different motivations, theoretical frameworks, and commitments. The 
notion of design as deliberation is an attempt to bring these differing interpretations 
into contact with each other in fr uitful ways. Computer systems can serve as 
supportive crutches for such processes.  
Schön emphasizes the variety of interpretations that an individual designer can 
pass through during a design session, as well as the differences in interpretation 
that diffe rent people are likely to come up with. One always sees something as 
something. This involves seeing a whole that one is subsidiarily aware of as 
meaningful in terms of a detailed aspect that is the momentary focus of awareness. 
When the evolving design ar tifact surprises the designer with something that 
stumps the interpretation projected by the designer's skilled, tacit knowing, then 
the designer is forced into a mode of reflection that transforms the interpretation. 
Interpretations are neither fixed nor arbitrary. They grow out of the traditions in 
people's backgrounds and they adapt to the constraints of the world to which they 
are applied.  
These three writers provide important arguments about the three features of the 
process of design proposed in Chap ter 1. They stress the roles of the situation, 
alternative perspectives, and explicit articulations. Furthermore, each of these is 
      Tacit and Explicit U nderstanding in Computer Support                                       79  
  seen as essentially evolving, so that past understandings are built upon and 
modified. Despite their strong differences, each  of these design methodologists 
describes design as a process of situated, perspectival, linguistic interpretation. 
Their emphases are different.  
a. Situation.  Alexander presents a strong case for deriving the interpretations in 
terms of which a design sit uation is to be construed from an analysis of the 
specifics of the problem. He claims that one must analyze the structure of the 
problem into patterns of components that are relatively independent. In a sense, 
this decomposition of the problem is a step to wards solving it. In that sense, it is 
similar to Rittel's claim that the problem framing is inseparable from the problem 
solving. Schön echoes that sentiment by showing how the designer's understanding 
of the problem emerges from the dialogue with the des ign situation, which explores 
potential solutions.  
b. Perspective.  Rittel is the one who most emphasizes the uniqueness of the 
perspectives that designers bring to their work. Designers are as different as are 
problem situations; they have individual motiv ations, backgrounds, and 
commitments. At the same time, the factors that make people different each have 
a shared basis in their cultures, schools of thought, languages, and so on. While 
their perspectives may be irreconcilable in some ways, collaboration can critique 
and synthesize individual opinions to establish areas of consensus and to move 
beyond unreflective idiosyncrasies. Alexander recognizes the importance of 
different cultural traditions and tries to compile and organize patterns from diverse 
architectural traditions in order to provide a clearer basis for personal languages of 
designing. For Schön, individual interpretations can arise in the design process 
itself, regardless of personal differences among designers. In fact, a given designer 
will constantly be changing perspectives on the problem during the countless 
phases of the design process.  
c. Language.  Schön talks the most about how explicit interpretations emerge 
through articulating tacit knowing in language, and then re -submerge into the tacit. 
Alexander talks in much this way about the need for both intuition and analysis. 
For him, intuition is also associated with design practice. Practice is the necessary 
tacit element that is likely to be missing from considerations of explicit 
methodology. Rittel's emphasis on the role of personal prejudice recognizes the 
tacit basis of argumentation; yet his proposal of I BIS is very much a move toward 
making deliberation even more explicit than it is in less structured formats.  
Computer support.  Alexander, Rittel, and Schön have all taken seriously the 
question of computer support for design. They each wanted to use computers for 
their favorite part of the design process. Alexander used computers to analyze the 
decomposition of structures. Rittel used them to support the IBIS system of 
argumentation. Schön recommended using computer -based design assistants to 
      Tacit and Explicit U nderstanding in Computer Support                                       80  
  create an environment in which a designer could explore design microworlds, 
reflect on knowledge, and enhance skills. None of them advocated an au tomated 
expert system approach. Alexander felt that such an approach led to people playing 
with computers like toys, divorced from the concerns of practicing designers. Rittel 
thought such systems would incorporate “freeze -dried prejudice” rather than 
stimulating the deliberative process of design. Schön argued that design requires 
human skills that computers could not duplicate, imitate, or replace by themselves.  
Where Alexander was still struggling to maintain a sense of the possibility of 
objective methods in the face of problems that were becoming apparent in the 
1960's, Rittel was formulating a clear call in the 1970's for an alternative use of 
computers to support human designing. In particular, he proposed supporting 
deliberation among opposed interpretive perspectives. Then in the 1980's Schön 
was able to describe the interplay between the human designer and the materials 
of the design situation as an interpretive dialogue. It remains for the 1990's to 
implement adequate computer suppor t for this process of interpretation in design.  
Objectivity and subjectivity . One could interpret Alexander and Rittel as 
occupying opposite ends of the spectrum. Alexander seems to long for the 
objectivity of mathematical decomposition analysis, empirical  hypothesis 
verification, and a distillation of eternal patterns for building. Rittel, in contrast, 
stresses that similarities of pattern are a matter of interpretation and that all 
judgments are ultimately grounded in subjective prejudice. But first of al l, there 
are historical differences. The late sixties, which separated most of the writings of 
Alexander and Rittel reviewed here, saw the widespread crumbling of faith in 
unified, objective science and in the mathematical methods of operations research.5 
And secondly, neither Alexander nor Rittel hold to simple, easily characterized 
views.  
The question of how knowledge is objective and how it is subjective is closely 
related to whether design can be computerized or not. Certainly the expert system 
approach is one that assumes that design knowledge can be formulated in an 
objective way. The paradigm here is that one finds an expert who has somehow 
learned the knowledge of the relevant design domain: applicable regulations, rules 
of thumb, accepted wisdom, tricks of the trade, prototypical solutions, standard 
 
5 It would be simplistic to distinguish cause from effect by saying that, for instance, 
Rittel's writings either hastened or merely reflected the growing disillusionment 
with objectivist th inking. Alexander, Rittel, and Schön are important participants 
in this general movement. Within AI there have long been critics of the 
objectivist approach typified by expert systems, including Engelbart (1963), 
Dreyfus (1965), Weizenbaum (1976), and Wino grad & Flores (1986). The 
systems discussed in Chapter 7 are also participants in this movement.  
      Tacit and Explicit U nderstanding in Computer Support                                       81  
  approaches. Through interview techniques, the expert's knowledge is made explicit 
and captured in a large set of rules, which are entered into the computer. Then, the 
specification for a problem in the domain is entered with sufficient detail and with 
all the relevant information so the computer can compute a solution that satisfies 
the specification by applying the set of rules to the specified starting conditions 
and goals. This approach should be cont rasted with the view of design as 
interpretation. While it may work in certain narrowly -defined and well -understood 
domains, the expert system approach ignores the features of design that Alexander, 
Rittel, and Schön have argued are decisive for most innov ative design work. 
Design knowledge cannot be formulated in abstract rules because it is dependent 
upon the situation, perspective, and language which are brought to bear in 
essentially unique concrete instances of interpretation. The rules of autonomous 
software systems can only work in narrowly defined realms in which a standard 
interpretation is accepted.  
The design methodologists just reviewed present a strong case that computer 
systems should enable designers to define their own understanding of the st ructure 
of the design problem, to formulate their own perspectives based on traditional 
views, and to articulate their tacit knowledge in increasingly explicit forms. In this 
way, personal or group interpretations can build upon shared domain knowledge 
but also go beyond it. While a computer -based system can support such activities, 
it cannot do them without human participation. This is where the subjective aspect 
enters. As long as design is conceived as involving subjective aspects, it cannot be 
automated . Computers may be able to keep track of interpretive perspectives and 
even help to elicit tacit knowledge or subjective views, but computers cannot 
interpret. Nor can knowledge corresponding to interpretations be entered into 
computer systems in advance, the way that standard domain knowledge can (under 
the most favorable of conditions). By definition, domain knowledge is general and 
can be catalogued (although never exhaustively since it includes tacit background 
knowledge that cannot all be made entirely  explicit). In contrast, interpretations 
are by nature innovative and go essentially beyond the standard domain traditions 
upon which they build —hence their characterization as “subjective .” They can 
only be added to the computer knowledge base post hoc, i n order continuously to 
expand the base upon which future interpretations can grow.  
 
CHAPTER 3. INTERPRETATION IN 
LUNAR HABITAT DESIGN  
Simon (1981) says, “Everyone designs who devises courses of action aimed at 
changing existing situations into preferred ones” (p.129). Design is a broad and 
diverse business. For the sake of concreteness, this chapter focuses on lunar habitat 
design and th e problem of providing computer support for this task.  
A number of characteristics of lunar habitat design make it an interesting candidate 
for studying the process of interpretation in design and the possibilities of 
providing computer support for interp retation. It is a high -tech undertaking 
requiring too much detailed information for an individual to keep track of without 
computer support. Significantly, although the field of lunar habitat design is so 
new that it must be considered an example of exploratory design, it also avails 
itself of extensive systematically codified domain knowledge. That is, lunar habitat 
design efforts necessarily innovate and explore new possibilities. Every effort at 
design is likely to make new discoveries  that could not hav e been foreseen but that 
should be captured for future design work. At the same time, these efforts are 
obliged to take seriously design guidelines and technical studies compiled by 
NASA. There are so many social, technical, and bureaucratic constraints on  the 
task of laying out a habitat for astronauts on the moon that it is a non -trivial—
particularly wicked —problem. Yet it is specific enough that it makes for a realistic, 
but manageable case study. Its wicked nature is clear in the way the designers who 
were studied had to frame the problem of privacy in order to work out a layout 
solution. 
A tool such as the proposed H ERMES system is attractive enough to NASA 
contractors that cooperation was forthcoming for conducting a study of the work 
process involved in lunar habitat design. Specifically, approximately thirty hours 
of videotapes were recorded of an extended lunar habitat design effort. The 
sessions were structured as a conversation between pairs of designers in order to 
elicit verbally the knowledge -in-action that was at work tacitly as well as the more 
explicit reflection -in-action that emerged when problems were encountered. The 
      Tacit and Explicit U nderstanding in Computer Support                                       83  
  following sections take a close look at two segments of the video recordings in 
order to observe the processes of interpreta tion at work in design..  
Section 3.1 reviews a brief design episode that introduces the issue of privacy and 
proposes individual crew compartments to provide private spaces for the 
astronauts. The concept of privacy is a difficult one to represent objectiv ely. It 
provides a challenging example for a theory of computer support. At first, the 
concept of privacy seems subjective, having a different meaning for every situation 
and every designer. Yet, it names a general issue that NASA recognized must be 
addressed. 
Section 3.2 presents a longer transcript that reflects a series of design moves 
motivated by discoveries about the concept of privacy that resulted from 
deliberation of different perspectives on bathroom design. This process led to a 
concept of privac y gradient, that was recognized as an organizing principle for the 
evolving habitat design. Here the process of design can be seen to involve (a) a 
creative discovery of the situation, (b) views from different perspectives, and (c) 
the articulation of taci t understanding in language —both in traditional and in 
refined terminology.  
Section 3.3 takes a look at NASA efforts to capture privacy considerations in their 
guidelines for manned -systems design. This suggests the difficulty of formulating 
important desi gn concerns like privacy as generic domain knowledge. However, it 
also suggests the potential for capturing design ideas as they actually emerge 
during engaged design activities.  
3.1. Situations of Privacy and the Problem of 
Representation  
In the first des ign session the participants —a designer, who will here be called 
Desi, and an architect, Archie —sat down to design a habitat for four astronauts to 
stay in during a first “overnighter” on the moon. Two “days” and a “night” on the 
moon is about 42 Earth day s. It was assumed that the crew might be of mixed 
gender and culture or nationality. The mission would include some scientific 
investigation and some preparation for future lunar stays. The habitat structure 
would, necessarily, remain on the moon and need to be adaptable to future 
missions. The habitat was to be designed to fit within a standard cylindrical module 
that is being used for Space Station and that can fit in the cargo hold of the Space 
Shuttle. This module is 25 feet long and 14 feet in diameter . Air locks can be 
attached to hatches at either end.  
      Tacit and Explicit U nderstanding in Computer Support                                       84  
  Desi is an industrial designer who has been involved with designing lunar habitats 
for NASA for a number of years. Archie is educated in architecture but has no 
experience in this specialized domain. Pa rticularly in the beginning, the sessions 
provide an opportunity for Desi to teach Archie about the domain. The 
instructional nature of the sessions and the style of interaction between the 
participants serves well to elicit the design rationale that exper ienced designers 
might take for granted. In this way, the design of the study extended the basic 
technique of “constructive interaction” (Miyake, 1986), in which subjects are 
paired so that their processes of understanding will be verbalized.  
The following  excerpt is from the initial session. It is transcribed verbatim, except 
for the removal of an occasional “um” or “you know.” Of course, it looks more 
formal and less spontaneous on paper with clear punctuation then when it was 
haltingly pronounced within the context of gestures, mutual interruptions, and 
sketching.  
 
 
Figure 3-1. Initial design of a lunar habitat layout.  
This is a complete graphics representation such as could be constructed in 
Hermes. It is meant as a guide to the reader. Desi’s actual p en sketches evolved 
as he talked and are less useful as static representations.  
 
This passage formed a critical turning -point in the whole design process. It is worth 
a close look even though i t may not on the face of it appear that “real” designing 
is going on at the moment. Desi has just sketched his first sample lunar habitat 
layout, which is represented in Figure 3 -1. He is emphasizing the large empty space 

      Tacit and Explicit U nderstanding in Computer Support                                       85  
  in the center (shaded in the figur e) that is available for a variety of uses, depending 
on the needs of the moment. For instance, beds can fold down into it from the small 
area marked Sleep at night. Exercise equipment can be set up at other times, or a 
table for meals and meetings.  
 
Transcript of Lunar Habitat Design Session (Tape B, 33:00):  
Desi: You have a big “family room” or “den.” And what they [the astronauts] 
do is either fold down the Murphy bed or set up cots. But for sleeping you 
don't dedicate space —since that's only used 8 hours a day and, face it, 
people's eyes are closed anyway. What you do is provide a place for sleep, 
an accommodation for sleep. All they need is a horizontal surface. They 
don't need a private room to sleep, if that's all you're providing.  
Archie: On the other hand, there are times when you're waking up or going  to 
sleep and getting your clothes on or whatever, when a modicum of privacy 
can actually be treasured, and when some people read a book.  
Desi: That's another option that we can look at. When you talk about sleep 
compartments where you can read and work, c hange your clothes, and do 
all that, they [NASA] just call them “crew compartments” rather than 
“sleep compartments” because you're doing more than sleeping. It's just 
semantics.  
Archie: The idea is that it's intrinsically multi -functional?  
Desi: Yes. It's  multi-functional. It's a crew compartment.  
Archie: Is that an accepted idea now? That they should be multi -functional.  
Desi: Well, it is an alternative. I'm not saying it's accepted or not. It is what 
they [NASA] originally pursued or conceived of for Spa ce Station. Each 
astronaut had an individual crew compartment that had their audio, stereo, 
video. It had a computer. It had their personal storage, their sleep [area]. It 
basically was their room where they could go in and work. And they could 
get away.  
Archie: Have they [NASA] moved away from that now?  
Desi: In the Space Station module they had about a third of the volume 
dedicated for sleep compartments only. And in the current configuration —
with 25 foot long modules instead of 40 foot long —there is no p rovision 
for sleep compartments in the habitat. So it suggests they [the astronauts] 
are going to be stringing hammocks in the hallway or sleeping in the node. 
      Tacit and Explicit U nderstanding in Computer Support                                       86  
  But there is no permanent, individual crew compartment. So they [NASA] 
have gone from one extrem e to the other.  
Archie: It's an interesting question. If you cross this 30 day limit, then it seems 
likely the sleep compartments suddenly become a dramatically higher 
priority. People start freaking out that they can't get away from other 
people. 
Desi: I would think so. I would think that the idea of being able to get away 
would be nice. Having that privacy, the control, even if they don't use it.  
 
A mini-drama of argumentation unfolds here around the issue of sleep 
accommodations in the habitat. Desi make s a first proposal in his initial concept 
sketch (Figure 3 -1). It is to create a general purpose space in the middle of the 
habitat where beds of some kind could be set up during the sleep period and then 
cleared away for other uses. This is a relatively a ustere approach based on the idea 
that the astronauts will accept pretty much anything you give them. But Archie 
comes to this with a different perspective. He is not used to the military influence 
in NASA's attitudes and thinks it is nice to be able to ge t away by yourself and 
snuggle up in bed with a good book. Desi immediately responds that private crew 
compartments are definitely another alternative that they could look at. He points 
out that the design for Space Station —which offers the closest analog for lunar 
habitats—originally incorporated crew compartments, although the revised design 
does not. Finally, Archie argues that being confined together for over a month is 
qualitatively different from short term missions where lack of privacy can be 
tolerated more easily. Desi agrees that privacy will be important in designing a 
habitat for their mission.  
Through this exchange, one of the crucial decisions of this design effort has been 
made: the decision to focus on habitability issues like the need for pr ivacy. The 
next sections will explore in more detail how such decisions come about, and how 
they turn out to be important. For now, it might simply be noted that Desi starts 
the process by presenting an idea that was familiar to him from a tradition of pas t 
designs (e.g., recent NASA thinking about Space Station). Archie immediately 
brings his personal experience to bear, essentially asking, “What would it be like 
to be an astronaut living in this place for over a month? How would I like that?” 
Desi then sw itches to another experience case, the original Space Station module. 
By now Archie is imagining the social interactions in the confined space, and his 
notion of privacy grows from being one of life's little treasures to a dramatic 
necessity for the mainte nance of sanity. Desi lets himself be convinced, and spends 
the next many hours trying to figure out how to carve some private sleeping 
      Tacit and Explicit U nderstanding in Computer Support                                       87  
  quarters out of the tiny module (the size of a common living room) that had to 
contain all the facilities for life and w ork of four astronauts.  
In this way, the framing of the problem and focus for solving it emerge through 
deliberation of different situations (related, historical, or imagined) from multiple 
perspectives (Desi’s, Archie’s, an astronaut’s, NASA’s, an emergin g shared one). 
The interpretation of the design revolves around discoveries in the situation. The 
major discovery made in the transcribed episode is the issue of privacy. The on -
going interpretation driven by the need to resolve this discovered issue will lead to 
many further discoveries. This is the nature of innovative design.  
The need for privacy proves to be a major constraint in the videotaped design 
sessions. The primary problem for the design becomes the conflict between 
wanting to create a mix of pr ivate and public spaces and the need to fit a lot of 
equipment into a very small volume. Given the importance of privacy 
considerations in these sessions, it is natural to inquire how NASA’s codified 
design standards handle the issue of privacy. This is cl osely related to the question 
of how an issue like privacy can be represented in a computer design environment. 
The problem is one of articulating the notion of privacy that everyone understands 
tacitly, but doing so in an explicit, objectified, and operat ionalized way.  
NASA is a prime example of management by objectives, where issues are spelled 
out as explicit specifications and regulations. This accounts for its success 
according to Simon (1981), who contrasts the US's success in placing men on the 
moon with its lack of success in creating a humane society or a peaceful world. 
The social problems are truly wicked problems in Rittel's sense; they require 
deliberation by the many participants in the problem, who have different concerns 
and ideological commi tments. Going to the moon had an unambiguous, highly 
operational goal enunciated by the President of the United States. The space effort 
was judged a success in terms of this goal (p.162).  
NASA is a major user of computers; the space program actually drove  
development of mainframe computer technology to a certain extent. One would 
think that if privacy is the first major issue to come up in the initial videotaped 
session of lunar habitat design then NASA must have long ago worked out ways 
of operationalizin g this design goal and representing it in computerized design 
support systems. However, this does not seem to be the case. A first hint of this 
failure might be inferred from the history of the privacy issue in Space Station. In 
one design a major allocati on of space was devoted to private crew compartments, 
and in the next there was absolutely no private space. Apparently, the original 
rationale for designing private spaces was completely ignored or forgotten.  
NASA's major opportunity to explore what they call habitability  issues was with 
Skylab, manned orbital missions during the early 1970's lasting up to two months 
      Tacit and Explicit U nderstanding in Computer Support                                       88  
  long. In addition to providing a laboratory for studies of outer space, this program 
was meant to study problems of groups of people in space . Despite this explicit 
goal, the attempt to design the astronaut's physical environment to be more 
habitable was strongly resisted in NASA. As described in NASA's own history of 
Skylab (Compton & Benson, 1983), it was only through the consistent efforts o f 
certain administrators over a period of years that any real design effort was put into 
this: 
Habitability, livability —or whatever name is given to the suitability of the 
environment for daily living —is, as one NASA designer remarked, 'a 
nebulous term at best,' one not usually found in the engineer's vocabulary. 
Besides factors within the engineer's usual responsibilities, such as the 
composition and temperature of the atmosphere and the levels of light and 
noise, habitability also encompasses the ease of keeping house, the 
convenience of attending to personal hygiene, and the provision for 
exercise and off -duty relaxation. Experience and intuition both suggested 
that these factors would become more important as missions grew longer. 
Looking ahead to space station, NASA designers needed basic information 
on these problems of living in space. (p.131)  
During this process a designer brought in to study the Skylab layout from the 
perspective of habitability proposed the idea of a wardroom , a common space for 
eating, relaxing, meeting and socializing. The acceptance of this idea was an 
exception. In general, designing was done by engineers, who focused on purely 
technical issues. Along with the engineers on their staffs, many NASA 
administrators saw issues of h abitability as threats to their budgetary and schedule 
goals. Skylab did not have a simple criterion such as the one attributed by Simon 
to the moon landing, and its planning process was a complex one of negotiation 
and political maneuvering, despite its c onfinement within the NASA bureaucracy.  
Today, the planning process is even more complex. Architects, sociologists, and 
anthropologists are being involved. A recent survey was conducted of architecture 
professors to develop a set of criteria for planning a  lunar base (Eichold, 1992). In 
contrast to the old engineering mentality, the architects felt that the issue of private 
space was very important. The highest statistic of the survey was that 85% of the 
respondents listed “balance between community and pri vacy” as their first or 
second design preference. The survey report concluded that this emphasis is 
supported by experience found in the closest analogs for extreme environments 
and isolation: submarines and Antarctic outposts (see Boeing, 1983; Bluth, 198 4; 
Bluth, 1986). The perspective that Archie brought in the session transcribed above 
is clearly not idiosyncratic.  
      Tacit and Explicit U nderstanding in Computer Support                                       89  
  Although it is clear that privacy is an issue for NASA missions, it is not so clear 
that NASA has come to terms with the issue. The recent Endeavor flight launched 
on September 12, 1992, provides an amusing case in point. The goal of the flight 
could be characterized as “sex in space”: frogs, fish, wasps, flies, and chicken eggs 
were taken up to be fertilized and reproduced in space. Yet ther e were no 
provisions for privacy for the first married couple to fly together as astronauts. 
Although NASA made an exception to its rule barring husbands and wives from 
flying in space together, they went out of their way to assure the public that there 
would be no human sex in space —a topic that has caused a certain amount of 
speculation in popular science circles. Press releases stressed that the couple slept 
on different shifts and were “too busy to even hold hands” on the flight.  
NASA has published volu mes of Man -Systems Integration Standards (MSIS), 
systematic compilations of design considerations and requirements for the 
development of manned space systems. The volume most applicable to lunar 
habitat design is Volume IV, which defines the firm requirem ents that are pertinent 
to Space Station. The most recent revision of this document (Revision A, 
December 14, 1989) defines habitability  as the quality of life in an environment. 
The basic level of habitability stresses the traditional physical concerns fo r climate, 
food, noise, light, etc. But for Space Station, an extended level of habitability is 
introduced to “take care of the long -term condition of the on -orbit stay time and 
[to] support not only the individual's physical health but also the 
mental/psy chological health because experience has shown that with the passage 
of time deleterious effects of isolation and confinement gain prominence” (NASA, 
1989b, p.1 -4).  
Despite this explicit recognition of the need to support mental health under 
conditions of  confinement, the standards provide little guidance for or guarantee 
of provisions for privacy and sociability. The only mention of privacy is in 
connection with crew compartments. The general requirement is “a dedicated, 
private crew quarter shall be prov ided for each crewmember” (ibid., p.10 -8). The 
ten specific design requirements of the crew quarters are confined to physical, 
safety, and security concerns, with one exception: “h. Privacy —The individual 
crew quarters shall provide visual privacy to and f rom the occupant and acoustic 
privacy as defined [by reference to quantitative noise levels]” (ibid., p.10 -8f). 
Spatial volumes are specified for allowing for sleep, stowage, dressing, working at 
a desk, and off -duty activities.  
There is even less referen ce to sociability . The galley and wardroom are discussed 
solely in terms of food preparation and eating. It is stated that a table shall be 
provided for eating, but there is no suggestion that it be large enough to 
accommodate the whole crew at once. There  is a separate requirement for a 
meeting room, although it is clearly intended that the wardroom would be 
      Tacit and Explicit U nderstanding in Computer Support                                       90  
  converted to this use as required. Here it is stated that, “The meeting facility shall 
accommodate a meeting of the entire Space Station Freedom crew”  (ibid. p.10 -
12). This single sentence (with no supporting rationale, references to psychological 
concerns, or further discussion) is all that exists to encourage designing for 
sociability. In the new Space Station design the crew compartments have been 
eliminated. The experience from Skylab shows that the crew often decides not to 
eat together in order to concentrate on work tasks. Thus, despite a token 
recognition of the importance of designing a balance of public and private spaces, 
the NASA requirements  are ineffective in capturing this goal.  
The need to plan for privacy and sociability arises repeatedly from the task of 
designing lunar or space habitats to be used for extended durations. It was a 
controversial priority in Skylab; it was recognized in th e early designing of Space 
Station; it is emphasized by recent studies and surveys; and it came up right away 
in the design session transcribed above. Yet it has been just as repeatedly resisted 
by engineers, and is inadequately supported in NASA's require ments document. 
Even Desi —who prides himself in his concern for habitability issues —tried to end -
run the topic in his opening presentation, until he was forced to admit that it was 
an option, and in fact an important concern.  
The question is how a design consideration like establishing a healthy balance of 
privacy and sociability can be represented  in a design support system, whether a 
manual of requirements or a computer -based system. It is easy for NASA to 
specify that 53 cubic feet (1.50 cubic meters) a re required for sleeping or that noise 
levels must be kept below 85 dB. Regular CAD drafting programs can check the 
numeric dimensions of components of a design, and critic rules in a computer -
based design environment like J ANUS (see Chapter 7) can ensure that distances 
between components are within given quantitative limits. However, it is not so 
easy to see how concerns for privacy can be operationalized or encoded into 
requirements that can be supported by computer. It may have been relatively 
straight-forward to say that we want a man to step on the moon. It is more of a 
wicked problem to say that we want a diverse group of people to live on the moon 
for an extended period of time as part of a politically controversial long -range plan 
to land people on M ars. The problem of supporting privacy concerns in design 
provides a paradigm example of an interpretive issue that has resisted solution by 
traditional methods. It will serve as a key example throughout this dissertation.  
      Tacit and Explicit U nderstanding in Computer Support                                       91  
  3.2. Perspectives on Privacy  
The concern for privacy in the lunar habitat came up again and again in the taped 
sessions. Several minutes after the discussion cited above, the following dialogue 
took place. In it, one can see the designers struggling to construct a situation of 
privacy by bringing different experiences and perspectives  to bear and reframing 
the meanings of terms to develop a shared language. The transcript in this section 
is broken up for the sake of exposition, but it took place continuously except for 
pauses to sketch. The sketching was largely gestural, to accompany the discussion 
of specific features —the drawings below are more schematic and less dynamic, 
but should help the reader to visualize the layouts being discussed.  
As shown in Figure 3 -2, at this poin t in the designing private crew compartments 
have been added at the left end of the lunar habitat module. They are arranged like 
two bunk beds along the walls, providing accommodations for the four astronauts 
and leaving a corridor open through the center of the module for access to the 
hatches at the two ends. All the areas requiring plumbing have been located 
together along one wall, leaving a large area open for meeting, eating, exercise, 
and work activities. A table and chairs have been sketched in as a  multi-purpose 
ward room, surrounded, perhaps, by work stations containing computer screens 
and panels for communication and control, or for other sit -down work. Another 
area has been left open for experiments, research, etc.  
 
Figure 3-2. A layout for liv ing and working.  
 
 

      Tacit and Explicit U nderstanding in Computer Support                                       92  
  Desi has placed the toilet, shower, and galley together to conserve on plumbing 
connections, which are more complicated in the moon’s low gravity than on Earth. 
But he and Archie imme diately discover some problems with this arrangement. 
Namely, the toilet encroaches too prominently visually on the eating area and 
acoustically on the sleeping area. They start moving things around in the layout. 
Buffers are added to provide visual and ac oustic privacy, often by strategically 
locating storage closets. (Lots of storage will have to be designed in at some point 
anyway in order to hold all the provisions for a month and a half.)  
Transcript of Lunar Habitat Design Session (Tape B, 42:00):  
Desi: Okay, this is the shower here. This is the galley. This is the toilet right 
here. [See Figure 3 -2.] Assuming that the entrance in and out might be 
right here. One of the things about privacy...? 
Archie: Yeah?  
Desi: . . . One thing I hate about my office  is that right out of the reception 
area, the secretaries are sitting there facing the bathroom door. It's like 
you're being watched.  
Archie: Well I think this is problematic. Right here you've got the toilet right 
open into the open area, where meals are  probably consumed and all.  
Desi: That's awful! The potential here is that you could actually put a work 
station here. This might even be your galley here, with the plumbing back 
to back, But you've got a little equipment to create an acoustical/physical 
barrier and your open area is here.  
Archie: Um hum. What about sound separation right here? When someone 
gets up to go to the toilet in the middle of the night and, bang, everyone 
else is woken up.  
Desi: What's happening here is we're starting to see a sep aration of living and 
working as distinct ends. Potentially, quiet and noisy [areas].  
Archie: We start to see some of the influences of the design. For one thing, 
separating those things allows you to get away from work. For, you know, 
you have different m oods and different modes in which you behave. When 
you're in one side of the place your surroundings stimulate a certain kind 
of response, a certain kind of psychological response, whereas when you're 
on the other side, you're stimulated for another kind o f response. . . . The 
danger of mixing them is that there is no place to get away, and every 
environment is stimulating multiple responses from you. So you don't have 
any support from your environment for your mood. It would seem to me 
      Tacit and Explicit U nderstanding in Computer Support                                       93  
  that things like moo d become pretty damn crucial when you're 45 days in 
a tin can with a bunch of people.  
 
Experimenting with different arrangements —what Schön called making design 
“moves”—leads to a gradual differentiation of areas of the module. The designers 
make discoveri es within the situation they have created. They discover that the 
constraints of the design situation (constraints that they have in a sense created by 
their concern with habitability and privacy issues) are leading to a “separation of 
living and working a s distinct ends.” This begins to solve the problem of being 
cooped up together: there are qualitatively different kinds of areas where one can 
go to relax, socialize or work. In this way, they “start to see some of the influences 
of the design”: the constr aints of the situation and the implications of their moves 
and concerns are starting to cause consequences that they notice. They start to 
discover in the sketch —as it evolves and as their interpretation or 
conceptualization of it evolves —that there are, “ potentially, quiet and noisy” areas 
coming into definition. Now, a door can be closed to a crew compartment to 
provide a quiet area where someone can go to listen to music, tape -record one’s 
thoughts, or study a training manual.  
They focus on the placement  of the toilet, which had served to sharpen their 
concern about privacy. Previously, Desi had argued for a design where the toilet, 
the sink, and the shower were combined in one unit to save space. He had 
supported his suggestion by talking about the bathr oom (“the head”) on a yacht, 
which squeezes all the functionality into a cramped space. He also recognized that 
combining the two in one room would cause accessibility problems, particularly 
first thing in the morning. Next, Archie brings in other concepts  of bathroom 
design in which the shower or bath is located in a separate location. These different 
perspectives are introduced and kept in mind to determine alternative placements 
for toilet, sink, shower, and dressing area in the habitat, and to provide r ationale 
for those alternatives. This allows the toilet and shower to be separated in Figure 
3-3, removing the toilet from its acoustic and visual proximity to the sleeping and 
eating areas, while keeping the shower convenient to the sleep area.  
 
Desi: Living/working; quiet/noisy. Now let's throw in that implication of some 
privacy when you go to the bathroom. If we're to say. . . .  
Archie: Look, let's make the placement of the bathroom and shower a little 
more important. Or is the shower the same as the to ilet and the sink? Could 
we separate them, have the shower a little more convenient to where you're 
going to change, get dressed. You get up in the morning, get dressed, 
change your clothes. Maybe that's a little more convenient.  
      Tacit and Explicit U nderstanding in Computer Support                                       94  
  Desi: You're not going to get up in the middle of the night and take a shower.  
Archie: Here's an interesting analogy. America is, I think, the only one of the 
Western countries —I mean the countries of North America are the only 
ones—that have the toilet and the shower in the same r oom. Most of the 
European bathrooms have them in a separate room. Maybe that's changing 
as they're adopting some American style things over there. Certainly, in 
Germany it is no longer the case. But in England, I know, it's unusual to 
have the toilet and t he shower in the same place. Americans use the term 
"bathroom" for the place where you go to the toilet. But the bathroom, if 
I'm not mistaken, in England means a separate room, which is connected. 
There is this separation. So maybe that becomes the model for what we 
should do. What that shows is there is a grouping of these activities which 
indicates sort of different levels of privacy.  
 
Figure 3-3. A private dressing area.  
 
Here, the designers have adopted a perspective on privacy. They are creating this 
new shared perspective by not only incorporating their personal, tacit definitions 
of privacy, but by merging in ideas from other perspectives. By deliberating issues 
among themselves from different perspectives, they begin to build an agreed upon 
framework for looking at their problem and proceeding with the design effort. The 
privacy perspective guides their moves and makes possible new discoveries that 
would not otherwise have occurred.  
It is inter esting to note that the design process at this point thrives on the 
consideration of alternatives. First, at the level of rearranging the layout, the 
alternatives are tried out in a rapid succession of sketches to get a feel for how they 

      Tacit and Explicit U nderstanding in Computer Support                                       95  
  work. Secondly, th ough, the designing does not consist solely of sketching. Most 
of the time, in fact, is spent in discussing the alternatives from various perspectives. 
The issue of separation of toilet from shower, for instance, was considered from 
the perspective of yach t and submarine examples as well as from the traditional 
American and European house design perspectives. In trying to define the 
European tradition that he was referring to, Archie even indicated that the 
European perspective is multi -faceted and evolving , a mixture of, say, German, 
French, and English traditions changing under American influence. It is not as 
though there is one rule from some supposed “domain of bathroom design” —like: 
the toilet should be near the shower —or even that one such rule applie s in the 
context of lunar habitat design. Rather, the designers deliberated  a number of 
possible (and mutually conflicting) rules and tried them out . They continually 
switched perspectives to view their design differently and to discover new 
understandings  of it through interpretation from these different perspectives and 
traditions of background knowledge.  
The process can be put in Schön’s terms. Desi made a move (Figure 3 -2). The 
designers reacted to the situation that they had created, and they discovere d a 
serious problem (the adjacency of the toilet to the eating and sleeping areas), or 
“breakdown situation.” They began to reflect -in-action on the issue of the location 
of a toilet. As they came up with justifiable alternative responses to the issue, the y 
tried them out in little sketches (or gestures indicating rearrangements of the 
sketched layout). They continued to come up with new conceptualizations until the 
problem was satisfactorily resolved. What may look like a lot of obvious verbiage 
in retrosp ect, was an engaged struggle with the problematic design situation during 
the “action moment.”  
In Alexander’s terms, the designers are continuously trying to represent the 
structural patterns of the problem: should a decomposition of the habitat include 
the shower and toilet in a unit, or should the shower be with the sleep area and the 
toilet elsewhere? Archie’s last comment above suggests that the decomposition 
might be based on the European model he has presented, so that “there is a 
grouping of these ac tivities [of daily life in the habitat] which indicates sort of 
different levels of privacy.” This leads to the layout in Figure 3 -3, in which the 
activities of getting out of bed, showering, and dressing are grouped together, while 
the toilet, which might  interfere with sleep or the use of the shower, is grouped 
elsewhere.  
For Rittel, this is a good example of the need to deliberate issues from a variety of 
perspectives; there is no single best rule, but an open -ended variety of approaches 
that can be used  to critique and refine each other. Archie’s lengthy discussions of 
people having different moods and different countries having different conceptions 
of bathrooms were not simply contributions of information, as though Desi did not 
      Tacit and Explicit U nderstanding in Computer Support                                       96  
  already know these thin gs. More importantly he was introducing new perspectives 
into the life of the debate and elaborating their rationale in an informal and 
abbreviated way. Deliberation is not simply a compiling of facts, but a subtle form 
of argumentation and persuasion thro ugh which a consensus might be reached and 
concepts of a shared language honed.  
Schön, of course, adds the notion that the differing choices must then be tried out 
so their implications can be creatively -discovered. This takes place in the next two 
segments of the transcribed process, where the implications of Figure 3 -3 are 
actively explored, leading to the design in Figure 3 -4.  
 
Desi: Oh yeah. So, what about the sleep compartments? As I said, chances are 
they are not going to get up in the middle of the  night and take a shower. 
So we could probably safely put a shower next to a sleep compartment and 
create a zone where (this may be way out of scale) where you can have 
this privacy. Over here is the storage of clothes and stuff.  
Archie: So that provides a  buffer. 
Desi: If you look at this elevation sketch, they all have their drawers along here 
for personal storage. You can get in to the drawers from this angle.  
Archie: So you've actually got a sort of dressing, shower, change area as a 
buffer between that  and the rest of the house. [See Figure 3 -3.] 
Desi: Right. The problem is if you want to change your clothes and take a 
shower, you're going to trap somebody back there and they can't get 
through. . . . What if you were to flip those? Say shower, storage h ere, and 
actually come in here and close this off. We've got this end -cone [of the 
tapered cylindrical module shell] geometry down here on the end which is 
a little awkward, where you could fit a lot of socks and underwear, as well 
as some plumbing. [See F igure 3-4.] 
      Tacit and Explicit U nderstanding in Computer Support                                       97  
   
Figure 3-4. A privacy gradient.  
 
Archie: So if you needed to take a shower or get to the storage you're going to 
have to walk through this sleep thing. Is there any danger. . . .  
Desi: Well , you proba bly just shower once a day.  
Archie: All right, the shower is probably not going to be a problem. But 
storage... 
Desi: Storage? But this is clothes . . . personal effects. Stuff you need in the 
morning and at the end of the day, before you go to sleep and when you 
get up. 
Archie: So if you forget something and you want to go back in you have to go 
past the sleeping people?  
Desi: Yes, If they're sleeping. So anyway, the idea is that you could actually 
close this off and have a place to take a shower . . . co me out here . . . 
change your clothes . . . and have relative privacy without obstructing 
circulation.  
Archie: Then you do lose the buffer to the outside in the process. So there's a 
trade off. Also this storage thing here could conceivably be accessed fro m 
this direction, meaning that you wouldn't have to be in this area at all if 
you wanted to access it. The advantage there would be if you have some 
kind of tight corridor you wouldn't want to be pulling drawers out into it, 
but I suppose you could go insi de. But I don't know how tight that is; a 
walk-in closet on the moon sounds like an extravagance.  

      Tacit and Explicit U nderstanding in Computer Support                                       98  
   
Here Desi has grouped the shower together with the crew compartments because 
the preceding arguments suggested that the shower will not interfere with sleep the 
way an adjacent toilet might (and in fact did in Skylab). The shower forms a buffer 
between the sleep area and the rest of the module, which gives Desi the idea of 
creating a similar buffer on the other side of the corridor. He decides that can be a 
stowage (storage) compartment. To integrate it with the activities of getting up and 
showering, he says the astronauts will keep their clothes in drawers in the 
compartment. Archie sees that a buffer area has now been formed across the 
module. Adding doors t o both ends of the buffer provides a changing room with 
access to the shower and the clothes storage. Desi likes the idea, but spots a traffic 
flow problem: when one person is changing, others cannot get out for their 
morning coffee. So he moves the changi ng area to the other end of the crew 
compartments, where it will not block traffic. (See Figure 3 -4.) This move 
eliminates the buffer function, so Desi adds some small stowage areas to act as a 
wall and absorb sounds. He re -designs the shower and stowage t o take advantage 
of odd-shaped spaces at the end, which had been wasted until now. Desi and 
Archie’s understanding of the habitat design evolves as they create new features 
(verbally or graphically), discover consequences, deliberate implications from 
different perspectives, and develop terms for interpreting the design situation.  
Archie repeatedly tries to test this new arrangement by imagining astronauts going 
about various activities in the layout. This is an important process, that requires a 
strong ima ginative sense of what it would be like to live and move in the real 
physical spaces that are represented in the sketches. This ability is founded on the 
designer’s understanding of what it is to be a person, to move about, to accomplish 
tasks, and to inte ract with objects, instruments, or other people. This ontological 
understanding allows people to adopt the interpretive perspectives of other people 
in other (even fictional) situations.  
In addition, designers like Desi and Archie are constantly concerned with more 
quantitative issues, like 3 -D volumes, adjacencies of different areas, and angles of 
access to spaces. To some extent these concerns relate to the human simulations: 
checking if a volume is adequate for pulling on clothes, if lights from one area  will 
interfere with seeing things in another, or if opening doors will create safety 
hazards. In addition to spatial issues, designers must be concerned with lighting, 
noise, and dirt. In a lunar habitat, there will be no natural light and different areas  
will have to be illuminated differently depending upon their function. With a large 
number of mechanical and motorized systems at work in the metal module 
(circulating air, pumping water, etc.), noise and vibration are a serious problem. 
Lunar dust is ver y abrasive, so dust control systems are critical, especially when 
astronauts come in from working on the moon’s surface.  
      Tacit and Explicit U nderstanding in Computer Support                                       99  
  The more they think about the way the lunar habitat design is working out, the 
more Desi and Archie discover that many of the issues of privacy, light, dirt, and 
noise have worked themselves out to form a gradient in which these problems are 
closely correlated.  
 
Desi: But you know what? What we've created here is a changing area, without 
affecting privacy. So just by shifting thi s you lose the buffer. Where this 
was leading is, I think , that this is the quiet end. I'm  also thinking this might 
be the emergency exit, not the primary air lock. We still have quiet 
activities here. Down here is the privacy. Here's your toilet. And if you 
think about stuff that's noisy, the idea of being dirtier, dustier . . . [at the 
other end]. 
Archie: Are you talking about a kind of noise gradient?  Along this thing, in 
other words, one end might be noisy and the other end might be quiet.  
Desi: As far as the planning issues, if you want to create some rationale as to 
why you plan or zone ce rtain activities or adjacencies the way you do, you 
look at noise levels; you look at . . .  
Archie: . . . light . . .  
Desi: . . . light level; you look at dirt; dirty versus clean and all those . . . .  
Archie: Here's a basic point. One of the things you're  short on in this place is 
distance. Okay? The one way, the one direction in which you have distance 
is along the axis . . . .  
Desi: That's correct.  
Archie: . . . of the things. Do you know Alexander's pattern of the long thin 
house? The idea is that to cr eate privacy what you want to do is that you 
want to exploit distance, you want to make the house deliberately long and 
thin so people . . . . [Italics added.]  
 
At this point a design has coalesced that has some satisfying coherence. It responds 
to the issues raised about privacy and arranges all the major necessary components 
of the habitat in a way which seems to make some sense. Of course, the design is 
far from final; in fact it will change considerably in future sessions, although some 
of its features will remain in place. So far, little thought has been given to 
determining sizes of things, and the drawings are not to scale. No storage space 
has been assigned for 45 days worth of food or other supplies. Space will obviously 
be extremely tight in the mo dule—especially if so much room is permanently 
      Tacit and Explicit U nderstanding in Computer Support                                       100 
  assigned to private sleep compartments —and too much space is wasted by the big 
corridor down the middle. There is very little space dedicated to the work of the 
mission, and not much thought given to room for exercise. But a start has been 
made.  
This was a juncture of the designing process where there was a palpable sense of 
resolution for everyone. Major constraints imposed on the design —like the need 
for some privacy —and the secondary issues that arose in tr ying to solve them 
seemed fundamentally solved. The discovery of the privacy gradient concept (see 
italicized comments in transcript) resolved the prior discovery of the problem of 
privacy. It provided what designers call a parti, a guiding perspective for  unifying 
a design. Now the designers felt that at last one had a place to go and relax in the 
habitat; this was finally becoming a home in which one could dwell, not merely 
function. 
In a formal sense, the most satisfying aspect of the design is its consi stent gradient 
character. This was an emergent property of the design process, with its concern 
for the creation of distinctly private and public areas. Desi observes that there is 
now a quiet end, which is also darker, cleaner, and quieter, in keeping wit h its 
private (and sleep oriented) character. The opposite end is where astronauts enter, 
bringing rock samples, equipment, and moon dust in with them. The noisy work 
takes place down there, with bright illumination for observing experiments. In the 
middle is a more moderate environment on each of the spectra, where the crew 
meets, prepares meals, eats, and socializes. This structure of the design gradually 
became explicit knowledge that could be shared in the transcribed dialog.  
The privacy gradient that D esi and Archie came upon corresponds nicely with a 
chart in Volume I of NASA’s MSIS, the volume of general design considerations 
and requirements for all manned space missions. This chart of adjacency design 
considerations contains the only specific guidel ines related to privacy in the 
volume. Privacy is defined in terms of audio and visual privacy: that someone is 
not seen or heard by others. In NASA’s terminology, “it has been found that a 
general sense of privacy increases when visual exposure of the ind ividual is 
decreased and the individual has controllable visual access to the outside world” 
(NASA, 1989a, p.8 -16).  
      Tacit and Explicit U nderstanding in Computer Support                                       101 
  
GROUP
INDIVIDUALPUBLIC PRIVATEo
o
oo
ooo
o
o
oo
oo
oooo
ooooo
o oooomeetings
eating
exercisesmall group recreationmeal clean up
meal prep
general housekeepingpre/post EVA
prox op's
IVA support of EVA
clothing maint.
full body cleansingurination/defecationpersonal hygienedress/undresshand/face cleansing
medical carelife sciences experiment
materials processing experomentspayload supporttraininglogistics/resupply
planning/schedule
ORU maintenance subsystem
monitoring
sleepprivate recreation 
Figure 3-5. Relative adjacencies based on functional relationships.  
 
The chart (reproduced as Figure 3 -5) was constructed by analyzing the 
relationships among 27 typical functions of a space module crew according to 5 
criteria and displaying something like a statistical cluster analy sis. The criteria are: 
frequency of switching from one function to another; extent to which one function 
leads to performing another; percentage of support equipment shared by the 
functions; potential for noise of one function to interfere with another; si milarity 
of audio and visual privacy requirements. The functions are then plotted on two 
scales: public/private functions and group/individual functions. The 
recommendation to designers is to group functions in the module similarly to how 
they are grouped on the chart. Note that in the chart sleep, showering, and dressing 
are grouped in one quadrant (private, individual); meeting, eating, and food 
preparation are in another (public, group); while experimentation and payload 
support are in a third (public, i ndividual). This corresponds closely to the three 
      Tacit and Explicit U nderstanding in Computer Support                                       102 
  areas of the lunar habitat design: sleep and dressing area, galley/ward 
room/meeting area; and science/entry area.  
Of course, the lunar habitat functional decomposition grew out of the designing 
process, no t from use of the NASA chart. Rather, the design discoveries remind 
Archie of the discussion of techniques for achieving a privacy gradient in 
Alexander’s A Pattern Language.  The principle of Pattern 109: Long Thin House 
there is, “The shape of a building has a great effect on the relative degrees of 
privacy and overcrowding in it, and this in turn has a critical effect on people’s 
comfort and well being” (Alexander, et al., 1977, p.535). Alexander recommends 
creating a shape in which the mean point -to-point distance is high: “string out the 
rooms one after another, so that distance between each room is as great as it can 
be” (ibid., p.537). In the lunar habitat, this has been accomplished by massing 
components along the walls to make the open space narrow a nd long.  
Later, in Pattern 127: Intimacy Gradient, Alexander recommends, “Lay out the 
spaces of a building so that they create a sequence that begins with the entrance 
and the most public parts of the building, then leads into the slightly more private 
areas, and finally to the most private domains” (ibid., p.613). The lunar habitat has 
in effect adopted this pattern even though Alexander’s general pattern is primarily 
justified in terms of a spectrum of interpersonal relationships not relevant on the 
moon (strangers, friends, guests, clients, and family). The habitat grew into this 
pattern; there was never a conscious decision to make it conform to the pattern.  
Suppose that Desi and Archie had first looked up the pattern and tried to decide if 
they should  follow the rule of this pattern. How would they know if the rule was 
applicable? In the habitat, every crewmember has the same social relationships, so 
one might argue there should be no intimacy gradient. There is only a need for 
differentiation if one a rgues—as Archie in fact did when he introduced the need 
for privacy —that people have different moods and they want different 
relationships with the rest of the crew: sometimes buddies, sometimes co -workers, 
sometimes people to get away from. The question o f applicability is a subtle one 
requiring complex human judgment. (The problem of applicability and its relation 
to interpretation will be discussed in Chapter 6.) How is a lunar habitat analogous 
to a home or office on the Earth? A traditional NASA engine ering mentality would 
not make the analogy and would not see a problem with an undifferentiated, 
austere, work -oriented environment, as can be seen in the many factory -like 
designs for previous space missions.  
The designs that Desi and Archie came up with at various stages contained striking 
parallels to many of Alexander’s patterns. The multi -purpose galley and ward 
room combination as social center corresponds closely to Pattern 129: Common 
Areas at the Heart, Pattern 139: Farmhouse Kitchen, and Pattern 1 47: Communal 
Eating. For a while, the habitat design gave each astronaut a combination of a sleep 
      Tacit and Explicit U nderstanding in Computer Support                                       103 
  compartment connected to a desk/workstation and a stowage cabinet. This was 
very much in the spirit of Pattern 141: A Room of One’s Own. Later it was decided 
that this arrangement was too constraining on the arrangement of space, and the 
conceptual connections among the components was sacrificed.  
Which of the patterns that Alexander culled from experiences on the Earth would 
make good rules of thumb for a domai n of lunar habitat design? It seems 
impossible to simply list the applicable patterns. Rather, one might want to bring 
any of them into a particular deliberation when it seems appropriate, argue the pros 
and cons of applying it in the given design situatio n, perhaps try out some moves 
based on it, and see how things come out. Alexander’s patterns provide yet another 
perspective for the argumentation, even if they are already the result of 
deliberations over the years incorporating many other perspectives, a nd so are 
relatively refined and general. This suggests a more eclectic approach than one that 
assumes a set of rules representing some compilation of domain knowledge. Such 
an approach does not avoid the problems of knowledge representation; on the 
contrary, it makes it more important than ever to capture knowledge of multiple 
perspectives, and to continue collecting new knowledge indefinitely.  
3.3. Capturing the Language of Privacy  
The analysis of the lunar habitat design process in this chapter confirms the 
importance of the ideas emphasized by Alexander, Rittel and Schön in Chapter 2 
and the view of design as interpretation proposed in Chapter 1. This section will 
discuss some implications of the nature of lunar habitat design for computer 
support. 
Problems of collecting knowledge have plagued attempts to provide computer 
support for design. Often it has been assumed that this is merely a practical 
problem, with no interesting theoretical aspects compared to the development of 
AI techniques for representi ng, accessing, manipulating, and displaying relevant 
knowledge. The expert system approach, for instance, assumed that a human 
domain expert, when interviewed, could spell out the important knowledge of the 
domain in a series of formalizable rules. However , experience showed that 
professionals had surprisingly partial knowledge of their fields and relied heavily 
upon heuristics and access to other resources to work around or fill in gaps 
(Suchman, 1987; Winograd & Flores, 1986). Even what people did have wo rking 
knowledge of they could not readily state explicitly or fully. Professional expertise 
relies heavily upon tacit background knowledge of the field that one picks up 
through apprenticeship -style training, not from the accumulation of rule -like 
      Tacit and Explicit U nderstanding in Computer Support                                       104 
  information. This is emphasized by Kuhn (1962), Schön (1983), and Dreyfus 
(1985) in discussing how people develop expertise.  
It may well be that the AI computational tricks are the easy part, for which much 
work has already been done and options are fairly well understood. The following 
questions may be more difficult. They have to do with the fact that knowledge is 
founded on i nterpretation and is not given independently of the knower’s 
situations, perspectives, or language traditions:  
1. What are the human cognitive processes involved in design?  
2. What is the nature of the knowledge at work in these processes?  
3. How can th at knowledge be captured during the action present when it is 
available?  
4. How can the often tacit knowledge be represented in ways which are explicit 
enough for computer processing?  
5. How can stored information be supplied to people to support their cu rrent 
design efforts in a timely manner and a useful format?  
These are the kinds of questions being pursued in this dissertation. The following 
paragraphs start to suggest responses based on observed characteristics of lunar 
habitat design. They will be re turned to repeatedly, particularly in the discussion 
of the theory of computer support for interpretation in design (Chapter 7).  
1. What are the human cognitive processes involved in design?  Alexander 
argued that an important process in design was the deco mposition of a problem 
into functional components, each component having more interactions among the 
items within it than with items outside the component. Rittel conceived of design 
as a deliberative process, in which people raised issues, made proposals from 
different perspectives, and critically debated each other's positions. Schön stressed 
the importance of active, creative involvement with the design artifact (e.g., 
sketching) in order to discover constraints and consequences of design moves. 
These different processes were apparent in the videotaped lunar habitat design 
sessions. The habitat was decomposed into private, group, and public areas based 
on functionalities of the items in the layout. Various perspectives on privacy were 
discussed and debate d in verbal exchanges. Successive sketches were made, which 
formed the basis for discoveries and design decisions. Diverse cognitive processes 
were at work: analysis (decomposing into functional areas), recall (analogous 
situations: German bathrooms, Space  Station crew compartments, submarines, 
Antarctic), simulation (imagining life in the habitat), argumentation (discussing 
the issues), gesture (pointing to drawn objects, indicating other arrangements, 
sketching), perception (seeing sketched lines as repre sentations of a habitat).  
      Tacit and Explicit U nderstanding in Computer Support                                       105 
  2. What is the nature of the knowledge at work in these processes?  Much of 
the knowledge involved in these cognitive processes of designing is tacit —far 
more than ever imagined in the heyday of expert systems. The notion of privac y is 
a good example. A designer’s understanding of what situations are private and 
which situations require privacy is based on tacit understandings of what it feels 
like to be a human being in those situations. This understanding is used extensively 
by Desi and Archie in decomposing the functional areas, in deliberating 
adjacencies of items, and in seeing problems in layout sketches. What is interesting 
is that much of this tacit knowledge becomes explicit during the designing . It gets 
articulated in Engli sh statements in order to be introduced into the interpersonal 
argumentative process. For this period during which it is debated, which Schön 
calls the “action present ,” the knowledge is explicitly available. After the 
deliberation is resolved, the argumen ts and their basis in knowledge may sink back 
into a tacit understanding once more. So the optimal time to capture design 
knowledge is when it becomes explicit in the designers’ language, while they are 
situated in the designing and have adopted the partic ular perspective.  
3. How can that knowledge be captured during the action present when it is 
available?  Information may be stored in a computer system in many ways. Some 
ways—such as textual formats in natural language —are more useful to human 
users, while  others—like encodings in semantic networks or other formalisms —
facilitate computer computation and manipulation of the information. However, 
all these forms are explicit forms of knowledge. Tacit knowledge, by definition, is 
not expressed in any way that could be stored on paper or in computer memories. 
It must first be made explicit. Because much important design knowledge is tacit, 
because it needs to be made explicit in order to be used in a computer -based 
system, and because tacit knowledge often becom es explicit during the action 
present of reflection during design, it can be helpful to capture the explicit 
articulation when it is available.  
In general, lunar habitat design is more complex in its use of technical information 
than the episode transcribe d in the preceding sections. Its high -tech nature means 
that technical data must often be looked up in manuals or even explored 
experimentally in subsidiary engineering studies. Contractual obligations to 
NASA and its subcontractors require documented adhe rence to voluminous 
specifications and requirements (including the volumes of the MSIS). The design 
of something like a lunar habitat passes through many phases, carried out by 
different teams. The capture and use of design rationale plays a variety of rol es in 
this process, and should probably play even stronger roles in the future. Computer 
support systems could facilitate an increased role for stored design rationale if 
mechanisms are developed to capture knowledge as it becomes explicit in the 
design process.  
      Tacit and Explicit U nderstanding in Computer Support                                       106 
  The scenario in Chapter 9 shows how lunar habitat designers could use a software 
design environment as their design medium, rather than paper and pencil, even for 
design tasks like those presented in the transcript. If the computer becomes a 
medium for designing, then the knowledge that arises in the design process is 
largely already represented in the computer. Such knowledge can be stored for 
future use. Then the computer system functions as an external, shared memory. 
Knowledge captured there is available for the original designer to come back to 
later and for other designers to access as well. It becomes a medium of 
communication and collaboration, through which designers can share their ideas, 
approaches, rules, sketches, and interpretations. Th e computer can represent 
explicitly the relations that are normally tacit in situated interpretation, organize 
knowledge into different perspectives, and operationalize terminology of an 
interpretive language.  
4. How can the often tacit knowledge be repres ented in ways which are explicit 
enough for computer processing?  Lunar habitat design differs from design in 
simpler domains in a number of ways. For one thing, it is not a well -understood, 
mature field. One could not expect to interview an expert and come  up with a set 
of formal rules and elements to define a comprehensive system of knowledge here. 
Workers in this field are attempting to explore a new domain and to begin to map 
out the potential problem space. A goal of researchers is to sketch in parametr ic 
curves that would indicate how designs have to change depending on such 
parameters as number of astronauts, length of mission duration, or payload 
delivery capacity (see, e.g., Design Edge, 1990; Moore, et al., 1991; Kazmierski, 
et al. 1992). This is a very preliminary step toward developing knowledge 
representations for this domain. Even the most important parameters remain 
undefined and open to interpretation and debate. For instance, few NASA 
guidelines cover privacy issues, even though this is an imp ortant concern of 
thoughtful designers and a topic for vigorous political debate and even power 
struggles within NASA (Compton, et al., 1983).  
The MSIS was not able to define privacy well, except for some concern about 
visual and audio privacy as expresse d in the graph of recommended adjacencies 
for different functions (reproduced as Figure 3 -5 in the previous section). It does, 
however, indirectly recognize its importance when considering habitable volume 
requirements: “Sufficient habitable volume shall b e provided and configured to 
decrease the possibility of degradation of crew performance due to detrimental 
psychological effects from feelings of confinement” (NASA, 1989a, p.8 -17). Just 
as Archie noted that the need for private space becomes critical as the length of 
confinement exceeds a month, the MSIS states, “As the mission duration increases, 
there is a greater tendency for the crew to feel confined and cramped. This can 
affect psychological health and crewmember performance” (ibid., p.8 -12). A graph  
      Tacit and Explicit U nderstanding in Computer Support                                       107 
  of guidelines for determination of total habitable volume per person as a function 
of mission duration accompanies this statement (reproduced here as Figure 3 -6).  
 
Figure 3-6. Required volume per crewmember as a function of mission duration.  
 
It is an excellent example of a set of parametric curves to begin to define the 
problem space. NASA was able to represent knowledge about privacy here by 
reducing it to a matter o f spatial volume. New methods are needed to allow 
designers to define less reductionist concepts of privacy and to capture knowledge 
related to such concepts.  
In the lunar habitat design sessions, privacy issues due to prolonged confinement 
were the first real concerns to surface. They structured how the designers 
constructed their task. Related questions of social interaction dominated questions 
of physical layout, indicating that social planning was necessarily a significant 
aspect of the designing. When the geopolitics (or solar system politics) of NASA's 
goals are reflected in the deliberations, the result is truly a wicked problem in 
Rittel's full sense. It is not just that more study is needed to formulate objective 
rules for the field, but that decisi ons necessarily involve tacit understanding of 
inter-personal behavior and non -propositional recognition of political interests.  
For relatively unexplored domains such as lunar habitat design, efforts at designing 
do not seek optimal solutions within a kno wn problem space, but begin to mark 

      Tacit and Explicit U nderstanding in Computer Support                                       108 
  out a solution space in the first place —as Schön says, to construct the reality of the 
design situation. The most important role of computer support for such domains is 
to capture the ideas that are being generated. Term s (like privacy) and patterns 
(like Figure 3 -6) which are formulated on the spot during this design exploration 
process are expressions of what designers may want to pay attention to in the future 
as well. So, for instance, the important criterion for rule s is not the rigor of their 
computations in the sense of some rationalist engineering ideal but their ability to 
convey the designer's interpretive intent. A computer system incorporating the 
knowledge should not be conceived primarily as an autonomous equ ation solver 
(or an expert system), but as a powerful medium of external memory to empower 
people's creativity. A software environment for this domain should be designed to 
capture new and evolving knowledge, rather than simply manipulate predefined 
knowledge representations and systems of production rules. This has been a 
primary concern in designing the HERMES software described in Part III.  
5. How can stored information be supplied to people to support their current design 
efforts in a timely manner and a useful format? A high -tech design goes through 
many stages of development, involving different design teams. Architects, 
designers, a varie ty of engineers, and administrators all work on the designs from 
their own viewpoints. Successful designs are sent to other contractors around the 
country for detailing, mock -up, testing, and construction. At each stage, the design 
is modified, based on pe ople's understanding of the design and its rationale. If a 
creative design concept is to survive this argumentative process —with tight cost, 
weight, and volume constraints at every stage —strong design rationale  must be 
communicated; a schematic diagram or a pretty picture will not suffice. In fact, a 
typical product of lunar habitat design consists of a small booklet predominated by 
textual explanations of rationale, not just detailed drawings. The important role 
that rationale plays in this extended design  process should motivate designers to 
document their reasoning and interpretation more than they would in a domain like 
kitchen design. A logical step beyond a written booklet would be a computer 
system that integrates designs and rationale in useful, easi ly accessible ways.  
Because designers lack personal experience living in lunar habitats, knowledge 
embodied in related designs (including Skylab, the Shuttle, Space Station 
Freedom, previous trips to the moon) is invaluable. Old designs are reused 
extensively. To the degree that design rationale of the old designs has been 
captured and augmented by subsequent experience, it can be vitally useful. 
Consequently, it is likely that design rationale will increasingly become an integral 
part of design. This shoul d add tremendous power for practitioners who take it 
seriously and those who use computer tools that support rationale capture. Such a 
development represents a significant break with the tradition of CAD programs, 
which are purely graphical and embody very  little semantics. However, it has 
impressive precedence in other fields like science, mathematics, and philosophy, 
      Tacit and Explicit U nderstanding in Computer Support                                       109 
  where written theories, proofs, and arguments have been refined through processes 
of public critique and have grown into extensive bases of shared knowledge and 
accumulated commentary impossible in non -literate cultures.  
The need for computer support of lunar habitat design was originally suggested by 
the sheer volume (and complexity) of knowledge required —far more than people 
could maintain in their heads or even locate easily in manuals. There are thick sets 
of NASA regulations for all Man -In-Space designs, ergonomic standards, and 
specific project contractual obligations that must be adhered to by designs. But the 
complexity of lunar habita t design is not just a matter of the volume of information. 
Requirements, components and rationale all have to be reinterpreted within the 
context of the evolving design. This is an application realm in which, for instance, 
most physical components require  some degree of customization . Because of 
gravitational or volumetric considerations, one cannot simply select a stock sink 
or bed from a catalog. Even pumps and fans must be re -thought. Furthermore, there 
are many design interactions among components that  are placed close together —
partially because space is at a premium and also because things must work together 
to form a coherent environment for habitation. This means that design of a given 
part is very much situated in its context, in terms of neighborin g components (e.g., 
sound buffers), design concerns (privacy), and projected usage issues (traffic 
flow). The computer representation of the design must function as the unique world 
in which representations of all the components and their relationships are  
appropriately situated so that design can take place effectively. One wants to start 
from existing components, but one then needs to be able to modify them freely to 
account for differences in the lunar setting. So representing standard parts with 
schematic icons or fixed items from a palette is inadequate. The idea that there is 
a definable domain with its primitive elements is too narrow a conception. All 
knowledge representations must be stored in plastic media, so they can be tailored 
to different inte rpretations.  
Elements of lunar habitats should be similar to familiar products to facilitate 
manufacture and to give astronauts a sense of being at home, but they must also be 
different to meet the severe constraints of their context. This means that model s 
and rules of thumb must be searched for in many other domains (houses, 
submarines, Antarctic labs) and then applied to the lunar setting. Such application 
must be done by the creative and synthetic minds of humans, with computer 
systems merely presenting  the relevant elements. Even the determination of what 
might be relevant must involve the human designer, for this is also very much a 
matter of interpretation based on a deep understanding of the semantics involved. 
This means that computer -based systems for design should be people-centered, so 
that all interpretive judgments are under human control.  
      Tacit and Explicit U nderstanding in Computer Support                                       110 
  Desi and Archie communicate in English. They articulate and share their 
interpretations of what is going on in the design through the medium of language. 
To support the subtlety of communication between designers and a computer 
system, the designers should be able to develop a language that operationalizes 
their evolving interpretations in ways which can be used by the software. At the 
same time, the developmen t of a language for interpretation can provide a basis for 
shared understanding among groups of designers, even if they are not working 
together at the same time or place. For instance, a designer who is considering an 
old design for adaptation into a new project can learn about the old design through 
the language which was developed with it —including the formulations of 
definitions and argumentation specific to that design. Providing some support for 
collaborative work among groups is particularly importan t in this domain because 
of the way each successful design must undergo the scrutiny of many teams. 
Generally, the only communication between these teams is the design document 
itself. To further mutual understanding, it is desirable that the design includ e 
effective documentation of the interpretive stance behind the rationale.  
The computational platform within which design work is carried out can serve as 
a communication medium in which designs and related information can be viewed 
and interpreted by diff erent people working together or working sequentially. 
Lunar habitat design is not a task for one person sitting at a computer. It is a 
collaborative  process. It proceeds through the work of teams of teams, each 
viewing the common product through their own  perspective. The essential 
communication is not that between a human and a computer, but among the design 
teams. What a computer system like HERMES can do is to provide an electronic 
medium to support this communication. It can do that by facilitating the  
development of a shared language of design interpretation and by providing a 
mechanism for the creation and sharing of interpreted designs defined using that 
language.  
The example of lunar habitat design has illustrated the importance of interpretation  
in design. Desi and Archie interpret their task as one of creating a balance of public 
and private space. They spend much of their time developing an adequate 
interpretation of what privacy means in the context they are dealing with. A variety 
of interpretiv e perspectives are brought to bear and are deliberated. Finally, a 
shared interpretation of privacy guides the designing and provides a sense of 
resolution when the privacy constraints seem to be satisfied.  
The interpretive processes draw heavily on tacit knowledge. During computations 
for decomposition, deliberation of relevant issues, or reflection -in-action, some of 
that knowledge becomes more explicit. The representations of the situation, 
perspectives on  design, and guiding concepts that become manifest may be 
represented in calculations, arguments, or ideas —i.e., in formal or natural 
      Tacit and Explicit U nderstanding in Computer Support                                       111 
  language. Unless these explicit forms of knowledge are made permanent in some 
external medium like annotations on paper or  statements of rationale in a computer 
system, they may revert to tacit forms. Particularly in high -tech fields, it is 
important to capture design rationale knowledge to help people understand and 
reuse designs.  
The following chapter explores the philosop hy of interpretation in order to clarify 
some of the issues related to tacit knowledge, interpretive perspectives, and the 
explication of understanding raised by the study of lunar habitat design. The 
problem of computer support for interpretation in desig n is then addressed in Part 
II. 
The discussion of lunar habitat design has highlighted a number of challenges for 
a theory of computer support:  
(a) The concept of privacy is typical of a broad range of themes that are essential 
to habitat design but are ha rd to operationalize. Despite the fact that NASA 
epitomizes the effort to codify design issues as objective rules, after twenty 
years their success with the concept of privacy is definitely inadequate. It 
remains unclear how to represent situations in whic h privacy plays a key role. 
This poses a challenge for the design of computational support for 
interpretation in design. It will provide the key example for the utility of 
HERMES’ mechanisms in Part III.  
(b) Part of the problem with privacy is that differe nt people have different ideas 
of what aspects are important in defining the concept. These differences may 
be due to concerns with varying technical specialties or simply to personal 
preferences. In any case, definitions of such concepts cannot be formula ted as 
statements of necessary and sufficient conditions, but must be allowed to 
emerge in each situation through deliberation from multiple perspectives.  
(c) Another part of the problem involves adapting the concept to the particular 
design situation. Fix ed definitions from a body of domain knowledge can 
provide useful (even necessary) starting points for articulation of tacit 
understandings, but they must be capable of flexible modification to be applied 
appropriately in a concrete situation. This typical ly involves an iterative 
process of situated discovery and perspectival deliberation, as seen in the 
transcripts. Even where NASA has captured important information relevant to 
privacy (as in Figures 3 -5 and 3-6), or Alexander has abstracted useful 
schemata in his pattern language, these representations must be applied to 
individual situations through human processes of interpretation. The language 
user must be capable of generating terminology and expressions whose 
meaning can be interpreted appropriately to unique situations.  
 
CHAPTER 4. HEIDEGGER’S 
PHILOSOPHY OF 
INTERPRETATION  
Chapter 4 explicates Heidegger’s analysis of understanding and interpretation. It 
traces his discussion through the relevant sections of Being and Time, his major 
work that addresses these issues. Heidegger presents his analysis of interpretation 
through a discussion of the human understanding of artifacts in the world. This 
involves analyses of:  
a. what it means for artifacts to be situated (Heidegger, 19276, §15 - §18; see 
Section 4.1 below);  
b. how the situation is understood through shared traditions and personal 
perspectives  (ibid., §26, §29 - §31; see Section 4.2); and  
c. what the role of language is in communicating interpretations (ibid., §32 - §34; 
see Section 4.3).  
This chapter uses examples of design from Chapters 2 and 3 to illustrate 
Heidegger’s points. It explores his philosophic analysis just far enough to shed 
light on the role of interpretation in design. Then Chapter 5 will apply  the analysis 
developed here more explicitly to design. That will form the basis for a theory of 
computer support for interpretation in design, presented in Chapter 6.  
Three points of background information are presented prior to beginning the 
Heidegger i nterpretation:  
 
6 Due to the intricacies of Heidegger's language and the unreliability of English 
translations, quotes from Heidegger's (and Gadamer’s) works will appear in 
original translations, with references to the page (S.) or section (§) numbers of 
the German originals. The published English version of Being and Time  includes 
the German page numbers in the margin.  
      Tacit and Explicit U nderstanding in Computer Support                                       113 
  1. Heidegger’s “hermeneutic” philosophy (or analysis of interpretation) is of 
central importance to people -centered sciences and other endeavors, including 
innovative design.  
2. His philosophy provides the foundation for the recent approach to cognitive 
science known as “situated cognition.”  
3. Heidegger does not develop a theory of design, let alone a theory of computer 
support for design. Even his analysis of human understanding is developed to 
serve a methodological role in an argument abo ut ontology (the philosophy of 
being) that is tangential to the interests of this chapter. His philosophy will 
have to be adapted to the analysis of design and its computer support in Part 
II. 
1. Heidegger’s hermeneutic philosophy is important to a people -centered 
science of design.  Since Aristotle, the philosophy of interpretation has been known 
as hermeneutics. The term hermeneutics  suggests the process of arriving at 
understanding, especially through language (Palmer, 1969). As such, it has long 
been associated with textual interpretation, such as Biblical exegesis. 
Etymologically, it derives from the Greek god Hermes, the wing -footed 
messenger, who was associated with the function of transmuting what is beyond 
human understanding into a form that human intelligence can grasp, and who was 
credited with the discovery of language and writing —the pre-computer tools 
humans have employed for grasping meaning and conveying it to one another.  
In the nineteenth century, the hermeneutics of Dilthey and Schliermacher helped 
differentiate the Geisteswissenschaften  (human sciences) from the natural sciences 
by contrasting the methods of (humanis tic) interpretation and (scientific) 
explanation. Heidegger and his student Gadamer revived that orientation to 
expound a general theory of human understanding and interpretation. Today, 
hermeneutics refers primarily to this philosophy of interpretation as  fundamental 
to human existence, which Heidegger (1927) formulated and Gadamer (1960) 
further expounded.  
This chapter culminates the argument that design is to be understood as 
fundamentally a process of interpretation. That is, innovative design tasks su ch as 
lunar habitat design cannot be reduced to sets of explicit rules that are taken to be 
independent of the situations in which they are applied and the perspectives of the 
people who interpret them . To understand design, one must take into account the 
role of human interpretation. This means that a science of design —or, for instance, 
a theory of computer support of design —should be conceived on the model of the 
human sciences more than on that of the natural sciences  (Figure 4 -1). This is 
contrary to th e traditional approach of AI attempts to automate design with rule -
based expert systems, that look primarily to the mathematical sciences rather than 
      Tacit and Explicit U nderstanding in Computer Support                                       114 
  the interpretive sciences for their model of scientific method. The subjective 
human aspects they often di smiss as incidental to design or view as unfortunate 
limitations are here taken as being of the essence.  
 
 
Figure 4-1. Hermeneutic versus natural science approaches to design.  
 
Heidegger’s philosophy of human interpretation occupies a pivotal role in thi s 
dissertation because innovative design is here approached from the perspective of 
the human sciences. This contrasts with, for instance, the influential approach of 
Simon (1981), who starts from a computational natural sciences outlook and then 
points out its bounds or limitations in design in order to arrive at a “science of the 
artificial.”  
2. Heidegger’s ideas are fundamental to situated cognition . The power of 
Heidegger's writings to inspire critiques of rationalist outlooks can scarcely be 
over-estimated. In particular, the approaches of design theory, AI, and cognitive 
science that are important for this dissertation are philosophically close to 
Heidegger. His influence is, for instance, traceable via Dreyfus to the major 
spokespeople for situated co gnition: Suchman, Ehn, Winograd, and Flores  (Figure 
4-2). Their relevance to the analysis of interpretation in design was discussed in 
Section 1.4 above. The parallels of Heidegger’s thought to other important writers 
like Rittel, Polanyi, Kuhn, and Schön are striking. Without understanding 
Heidegger’s alternative to the rationalist tradition, it is easy to misunderstand and 
trivialize the novelty and importance of situated cognition theory.  
 

      Tacit and Explicit U nderstanding in Computer Support                                       115 
   
Figure 4-2. The two mainstreams of contemporary philosophy.  
Their influences on theories of design and computer support for design can be 
traced back to Heidegger’s philosophy or to rationalism.  
 
3. Heidegger’s analysis must be adapted to a theory of computer support.  
Being and Time  (Heidegger, 1927) pr esents an "existential analytic". By this 
Heidegger means a hermeneutic interpretation of what it is to be human, to be 
involved with one's world and concerned with one's self. Along the way to his 
explication of people’s understanding of themselves, Heide gger analyzes the ways 
that people can be involved with things other than themselves in the world —for 
instance, by using tools like hammers. It is this secondary analysis of artifacts that 
will be of primary concern for the following discussion of interpre tation in design. 
Heidegger's presentation will need to be reinterpreted along these lines and fleshed 
out with observations about the involvement of designers with design artifacts. It 
is entirely in keeping with the spirit of hermeneutics that Heidegger' s writings be 
construed in accordance with current concerns, because interpretation is always 
necessarily from a perspective of specific human interests.  
To understand Heidegger’s view, it is important to place his analyses of 
understanding within his meth odological context, even if these notions are 
eventually to be applied in a quite different context here. The ideas presented in 
this chapter form the analytic core of the first step in Heidegger’s project: to 
explicate the meaning of being. Roughly, his g eneral question is, what does it mean 
to say that something is? —what is it to be a person, a hammer, a lunar habitat? It 
is hard to say more precisely just what Heidegger means by the meaning of being , 
even after he spent a lifetime struggling to articula te it. This difficulty is due to 
peculiarities of the history of Western thought according to Heidegger. While the 

      Tacit and Explicit U nderstanding in Computer Support                                       116 
  early Greeks had a tacit understanding of being, even that vague grasp became 
increasingly obscured from the time of Plato to the present. So  Heidegger’s task is 
to regain the original tacit understanding and explicate it. This is a matter for 
interpretation, and that is precisely how Heidegger treats it. He argues that it is 
methodologically possible to pursue this question only because people  do have a 
vague, tacit sense of the meaning of being. The question can be pursued by 
gradually explicating this sense. So the problem of tacit and explicit understanding 
is central to Heidegger’s task, just as it is to the task of providing computer suppo rt 
for design.  
Heidegger’s argument is, in a way, circular. He first postulates that people have 
this sense of the meaning of being and that they have the ability to explicate their 
tacit senses through interpretation. They have a sense of the meaning of b eing 
because they exist in a world where they are involved with and concerned about 
beings: artifacts, other people, and themselves. Heidegger takes these postulates as 
phenomenological givens of human experience. For him, understanding never 
starts with a  blank slate, but always with some meaningful content that can then be 
explicated: what was tacit can be stated, discoveries can be made, and terminology 
can be iteratively revised. From this starting point, he develops a coherent theory 
of interpretation that justifies his approach, provides an original philosophic 
outlook, and explains the ways in which traditional views obscured our relation to 
being. 
Heidegger's thought can be viewed as a philosophy of interpretation or 
hermeneutics (although it is ulti mately concerned with a very abstract form of 
interpretation: the philosophic understanding of being). His analysis of what it 
means to be human  is inseparable from his analysis of what it means to interpret . 
The "hermeneutic circle", according to which "a ny interpretation that is to 
contribute understanding must already have understood what is to be interpreted" 
(S.152), is symptomatic of our relation to our world: "In every understanding of 
the world, [our] existence is understood with it and vice versa" (ibid.). Heidegger's 
writings are notoriously abstract, abstruse, and difficult to interpret. In order to 
concretize his ideas —including the analysis of the hermeneutic circle and of our 
relation to our world —the following sections will focus their attenti on on 
Heidegger's analysis of the three features of understanding that have already been 
considered in the previous chapters: its situated, perspectival, and linguistic nature.  
      Tacit and Explicit U nderstanding in Computer Support                                       117 
  4.1. Definition of the Situation as Basis for Tacit 
Understanding  
Heidegger wan ts to get at the being of beings. But his methodological access to 
this (at least at this initial stage of his investigation) is via the human understanding 
of artifacts. So the question, what is a hammer? becomes, for instance, the 
question, what is a ham mer for a person? —say for the person who is using it to 
nail something together. Heidegger looks at the tacit sense that we have of a 
hammer when we are using it. He points out that when we are hammering we are 
focused on the nail or on the pieces of wood  that we are joining or on the project 
we are building, and not directly on the hammer itself. There is only what Polanyi 
calls a subsidiary awareness of the hammer as part of the background of the activity 
that we are focused on. In fact, for the act of h ammering to take place effectively, 
we must be unaware of the hammer; we must be primarily concerned with the task 
we are pursuing, not with the tool we are using to pursue it. This is part of what is 
meant by saying that our understanding of the hammer is  necessarily tacit: that its 
use requires that we not focus our attention on it.  
When we are engaged in hammering, the hammer is not there in the sense of an 
object that we relate to as a subject —a subject who might, for instance, formulate 
propositions a bout the hammer, like: I am lifting the hammer; the hammer is 
heavy; the hammer is made of metal and wood. The hammer is only there as part 
of what Heidegger calls the “totality of equipment” that is available to us and that 
we make use of in our work. Whe n we are at work hammering, we are in a situation 
where the hammer, nails, wood, and other tools are available for our use. The 
hammer is available in order to drive nails, and the other tools are similarly related 
to their uses. All these references (e.g. , hammer to nails for driving them) form a 
totality of significance, that is definitive of our situation. So the hammer is 
accessible to us in terms of this system of references  among the tools we use. The 
references inter -relate the tools in terms of thei r possible utilities, and also refer to 
people as those for whom the uses are ultimately intended.  
Figure 4-3 is meant to illustrate that the hammer is tacitly understood in terms of 
its relations to other artifacts, concerns, and people. The totality of these things as 
understood  in this interrelated way is the situation. To say that interpretation is 
situated is to say that everything is interpreted as part of this understood totality, 
as having these relations.7  
 
7 Recently, in his book rejecting functionalism, Putnam (1 988) expressed this idea 
in the following way: “If I say, ‘Hawks fly,’ I do not intend my hearer to deduce 
      Tacit and Explicit U nderstanding in Computer Support                                       118 
   
 
Figure 4-3. The network of reference s for tacit understanding of hammering.  
The entities presented in this figure are involved in many different kinds of 
relations. For the sake of simplicity, the various kinds of relations have not been 
identified here.  
 
Heidegger stresses that our understa nding of the situation, defined as the totality 
of references, is necessarily prior to our understanding of the individual tools. We 
are only aware of the hammer as part of the available situation that defines it via 
the references to something for driving  nails, etc. In this way, we can understand  
the hammer tacitly only because we always already understand our situation as a 
significant totality.  
Our tacit situated understanding provides a space (a stage or “clearing”) within 
which elements can be discov ered and brought to a more explicit form of 
knowledge. This process is a central concern because it involves the bridging of 
tacit understanding (the normal mode for people) and explicit knowledge (required 
for computer representations). Within the space o f understanding given by our 
being tacitly situated, we can discover new things and understand them in relation 
to what we already understood. In some cases, this subsumption of new 
understanding involves us in making our understanding explicit by formulat ing it 
linguistically. In this way, explicit knowledge may emerge from tacit 
 
that a hawk with a broken wing could fly. What we expect depends on the whole 
network of beliefs” (p.9).  

      Tacit and Explicit U nderstanding in Computer Support                                       119 
  understanding when we are situated. However, we can never make all our tacit 
background understanding explicit.8 
Heidegger’s difference from all objectivistic philosophies is alr eady clear here. 
The world does not consist of a fixed set of multiple objects that we can come to 
know by staring at them and explicitly noting their attributes. Rather, to be human 
means to have disclosed (opened up) a situation or world within which and in terms 
of which things can be discovered  as already significant. The issue of 
intentionality, epistemology, or mind/body (that poses the question of how mental 
activity can gain access to physical realit y) is a non -problem for Heidegger because 
we are already understandingly involved with things when we first discover them 
(see Heidegger, 1975, and Dreyfus, 1991).  
According to Heidegger (1927), our tacit understanding of things is founded upon 
our situatedness. Understanding can then become more or less explicit on the basis 
of this tacit understanding:  
Involvement in the immediate work -world has a function of discovering 
such that the beings brought along with the work (i.e., in the references 
that are c onstitutive for it) remain discovered in various degrees of 
explicitness and to various extents of insight, depending upon our mode of 
involvement in the work. (S.71)  
This explains why we understand best when we are properly situated in the context 
of an issue we are trying to understand. That is when we have access to the 
associations that are related to the topic of our concern and that define its 
meaningfulness. It is our involvement with the topic that makes manifest the 
things, issues, and concerns tha t are related to it and whose mutual associations 
constitute our situation.  
In Heidegger’s philosophy, to say that we are situated means that we are involved 
with things in the world and can discover things based on our tacit understanding 
of what we are involved with. The situation is neither a set of physical 
circumstances in th e objective world nor a model representing such objects in a 
subjective mind. Heidegger overcomes the separation of world and mind by 
focusing on the situation as the understood world itself in which we are involved, 
not a re-presentation of it “in the hea d.” Of course, we can subsequently represent 
the structure of the situation in explicit terms: words, graphics, computer symbols. 
But in our tacit involvement things are there as meaningfully related to our 
 
8 As Polanyi (1958) put it, “Tacit knowledge  is more fundamental than explicit 
knowledge: we can know more than we can tell and we can tell nothing without 
relying on our awareness of things we may not be able to tell” (p. x).  
      Tacit and Explicit U nderstanding in Computer Support                                       120 
  concerns; they are available to us in ways that a re not mediated by symbols or re -
presentations.  
The next question is, then, how our understanding can become more explicit. This 
is important for Heidegger from a methodological perspective. In order to answer 
the question of being, he needs to take our ta cit understanding of being and make 
it explicit. To show that it is possible to bring to light the structures that ordinarily 
operate tacitly, Heidegger gives three examples of cases where an artifact like a 
hammer stops functioning invisibly in the backgr ound and becomes explicitly 
manifest. These cases are when a hammer is conspicuous, obtrusive, or obstinate. 
For instance, (i) if a hammer that one wants to use to drive a nail is encountered as 
unusable, damaged, or unsuitable (too large, broken, or the w rong style) then one 
discovers its usability for hammering in a conspicuous way. Similarly, (ii) if a tool 
that one reaches for turns out to be missing, then one becomes conspicuously aware 
of it as necessary but unavailable. Finally, (iii) if something is  in the way of what 
one wants to do, then that thing is discovered as obstinate. When one discovers the 
hammer under such circumstances, it is not discovered as a raw physical object, 
but as an unsuitable driver of nails (or whatever) and the situation in which one is 
desirous of driving the nail —the related and referenced other tools and human 
purposes—also rises to a more explicit presence. The situation comes to light as a 
network of artifacts; it is disclosed as a context of significance that is then se en as 
having already been familiar as the basis of the tool and its references.  
This is a very different view from the usual cognitive science approach in terms of 
explicit goals, according to which a carpenter who has the goal of producing an 
artifact for mulates propositional sub -goals like joining two pieces of wood, and 
sub-sub-goals such as lifting the (explicitly considered) hammer and swinging it 
at the nail with adequate force. In the Heideggerian view, the tool and the goals are 
only tacitly availab le by implication or reference as long as everything is going 
smoothly. It is when the references are disturbed that they become visible. When 
some tool is missing whose ordinary availability was so obvious that we never 
even took any notice of it, then th is absence creates a break in the totality of 
references. Our awareness runs into unexpected emptiness, and discovers for the 
first time the (now broken) references connecting the anticipated tool with the 
other tools and goals of the situation. Whereas th e rationalist tradition tends to 
think of the being of things as a simple form of physical presence, Heidegger has 
a more complex view of things being ordinarily hidden in various ways, having to 
be uncovered and disclosed, only to then re -submerge into ta cit, subsidiary 
awareness. In the hammer example, the hammer itself is hidden when it is normally 
available, useful, or in use; it becomes explicitly visible to us precisely when it is 
physically absent or otherwise unavailable.  
      Tacit and Explicit U nderstanding in Computer Support                                       121 
  It should be noted that Hei degger has not claimed that things only become 
explicitly manifest when there is a breakdown  of normal activities. This is a 
suggestive claim offered by Dreyfus (1991), Schön (1983), and others influenced 
by them—but it is a stronger claim or a narrower th eory than Heidegger’s. Also, it 
is open to misinterpretation of what the phenomenon of breakdown is all about. 
One could, for instance think that a breakdown in design is when a designer gets 
stuck in the flow of designing activity and has to stop to think  of a solution. In fact, 
Schön’s concept of reflection -in-action might suggest this idea, even though Schön 
himself knows better. This is a point where it is important to understand what 
Heidegger is up to methodologically in order to understand what his a nalysis is 
about. The three examples he gave are just sample cases and by no means rule out 
other paths to making things explicit. When Heidegger presents them, he is making 
a methodological point presenting phenomenological evidence for the structure of 
the situation as prior to the artifacts understood by it. Here he is not proposing a 
general theory of explicit knowledge or reflection. Even later, when he does 
discuss explication, he develops his analysis only to the extent needed to make his 
points abou t the possibility of explicating the vague sense of the meaning of being. 
The breakdown examples make manifest the structure of the situation —that is why 
Heidegger refers to them. What is important is not that tacit involvement in the 
world is broken, but that the structure of the situation is broken. That is, the 
network of references is suddenly inadequate for making sense of the world 
because the references anticipated one thing and something else was discovered in 
the world: i.e., the hammer was unusabl e, missing, or in the way.9 
 
9 Heidegger’s example of hammering is often cited. However, it is in some  ways 
too pat and raises a difficult question concerning its generalizability. For 
instance, it conjures up visions of the craftsman’s workshop where, as in an 
obsolete blacksmith’s shop, one automatically reaches out for hand tools that 
extend the limbs o f one's body. This is an enticing image, given Heidegger’s 
argument. But one must ask —as do Adorno (1964), Stahl (1975b), Habermas 
(1985), Lefebvre (1991), Bourdieu (1991) and others —if this is not a romantic 
vision longing for a return to pre -industrial f orms of labor. Is Heidegger 
insightfully characterizing a primordial foundation of human existence 
throughout history or is a different analysis of our being -in-the-world needed in 
an industrial or computerized age? In particular, are Heidegger’s analyses 
relevant to contemporary design of high -tech artifacts, with or without computer 
support? Is the individual craftsman the appropriate paradigm for analyzing 
collaborative design in the contemporary world?  
Two general arguments in support of using Heidegger ’s approach suggest 
themselves. The first is the argument from evolution: that advanced forms are 
built on earlier stages. Donald (1991) and Polanyi (1953) argue that primate -level 
      Tacit and Explicit U nderstanding in Computer Support                                       122 
  The important phenomenon is not a matter of psychological consciousness: that 
one suddenly has to become more conscious about what one is engaged in. Rather, 
one has to reinterpret  in the sense of reorganizing the network of re ferences that 
define the situation so that circumstances that have been discovered make sense in 
the revised situation. Heidegger is interested in this phenomenon from an 
ontological, rather than psychological perspective. The discovered artifact that 
causes the breakdown loses its ontological status as available to the person’s tacit 
understanding because that status was conditional upon the situation. Heidegger’s 
ontological analysis need not be pursued here. The important point for computer 
support is th at a breakdown is a rupture of the situation as the network of references 
for understanding , and not simply a difficulty in action involving some artifact.  
In the cases of designing discussed in the previous chapters —the library footprint 
and the lunar hab itat layout, for instance —tacit situated understanding played a 
crucial role. The situation for Clara, the architect in Schön’s study (Section 2.3 
above), is the library as she understands it. This situation is disclosed to her through 
her study of the lin e drawing, which she interprets as a library footprint. Within 
this situated understanding, Clara can discover things: like the anomalous walls or 
five foot displacement. Things discovered in the situation are discovered as already 
having some meaning (a j og in the wall, a deviation from uniformity of lengths, a 
long way for a library user to walk, a dimension with a certain architectural sense) 
by virtue of their relations in the situation. When Clara notices the displacement, 
she is already situated in a world that is meaningful for her. The displacement is 
noteworthy in terms of its relations to the other walls, to the areas that are defined 
within the library (especially those affected by the five foot irregularity), to the 
surrounding lawns or streets, and to the approaches that a visitor could take to the 
library. It is only within this network of significance that the displacement can be 
 
episodic (tacit) understanding still provides the necessary basis for human  
consciousness and theoretical knowledge. The second argument is that the 
medieval workshop is not an anachronism, but still provides the preferable model 
of organization of learning and work, at least for certain fields. Budde and 
Züllighoven (1990), for instance, claim that the tool/workshop structure is 
superior to the CASE/industrial model for software development, and they 
therefore apply Heidegger’s categories in their hermeneutically -based concepts 
of software tools for programming workshops. Similar ly, Schön (1985) argues 
that the apprenticeship model of the design studio is more important than the 
engineering ideal of theory application for the teaching of architecture. Because 
Heidegger’s examples are suspect, it is important to turn now to concret e 
examples of interest. In Part II Heidegger’s analysis will be extended to 
collaborative design to overcome the danger of an ahistorical, asocial 
interpretation.  
      Tacit and Explicit U nderstanding in Computer Support                                       123 
  discovered as an object of interest. Perhaps the other architects in the experiment 
saw the library plan as a differ ent complex of relationships in which the 
displacement could not be discovered as a significant feature.  
One can, of course, ask how Clara’s understanding of the drawing originally 
gained the significance that it had for her. Heidegger’s point is that one  does not 
first “decide” to understand something —as though one had to label objects with 
values through rational judgments —but always first discovers things within 
contexts that are already meaningful (i.e., already related within the situation). In 
some cases, the discovered meaning can be modified through reflection and 
judgment, but this is not as common as rationalist theories assume and it is always 
done on the basis of prior situated understanding. This takes place through the 
explication process call ed interpretation (see Section 4.3, below). When, for 
instance, Clara is first shown the line drawing and told that she is to design a library 
using the drawing as a footprint, she discovers the drawing within the larger 
context of her professional life. S he already understands what it means to be an 
architect, to design a building, to visit a library, to participate in an experiment, to 
study a floor plan, to sketch alternative approaches  (Figure 4 -4). She dwells in a 
world in which the drawing and its ass ociated task are already meaningful, in 
which significant relationships can be explored, and in which discoveries can be 
made, understood, and further interpreted.  
 
Figure 4-4. The network of references that define Clara’s situation.  
 
Ultimately, the vari ous kinds of spatial and functional relationships of the situation 
point to people: the future library staff who manage the entrances and exits, the 
stacks, and the offices; the potential library users who walk in from the street, 
orient themselves after e ntering a door, search for books or magazines, and use the 
other facilities. Clara understands these relationships because she has a tacit 
understanding of the meaning of human being: of what it means to be a person 

      Tacit and Explicit U nderstanding in Computer Support                                       124 
  working in the library, a person using t he library, a person appreciating cultural 
artifacts, a person negotiating pathways among physical walls.  
The situation as meaningful network of physical, functional, and human 
relationships plays a central role in Alexander and Rittel’s theories as well as in 
Schön’s analysis of the library experiment. Alexander is particularly concerned 
with finding the best decompositions of such relationships in a design, so that the 
definition of components in terms of their most important or tightest network of 
interconnections is not disturbed when design decisions are made that rearrange 
less tightly bound components. Alexander’s analysis of unselfconscious design 
reveals a strong sympathy for the rootedness of artifacts in the worlds of their 
creators. Artifacts li ke native houses serve obvious needs in the physical 
environments and daily lives of their inhabitants, and their designs function 
centrally in the local cultures and traditions as well. All aspects of their design are 
immediately meaningful in terms of th e understood world. For Alexander, to 
decompose a design problem in a way that ignores the ties of structural form to 
social “fit” is to destroy the integrity and value of the artifact being designed.  
Rittel also takes a relational view of design, but he f ocuses more on the level of 
rationale for self -conscious design. To argue that design is a deliberative process 
is to say that a given claim does not stand on its own self evidence, but that it is 
tossed upon a sea of conflicting opinions. The value of an item of rationale results 
from the way it swims among the other items and how it survives the buffeting by 
criticism and argumentation. Ultimately, the significance of design justifications 
are relative to other design decisions, individual modes of reason ing, and personal 
or group interests or predilections That is, they are always already primarily 
understood within a broader perspective of understanding, on the basis of which 
opinions may occasionally be swayed subsequently. The Rittelian issue -base 
representation captures the structure of the situation’s inter -relatedness as 
explicitly as Alexander’s decomposition patterns or Schön’s library experiment.  
The role of the situation is perhaps clearest of all in the example of lunar habitat 
design. Here, two  concerns dominate most of the discussion in the videotapes: 
adjacencies and functional relationships. At the level of analysis reported in the 
transcripts of Chapter 3, the designers are working with a set of components (sleep 
compartments, galley, toilet , table, stowage, etc.) that are fairly well determined 
by general mission requirements. Their efforts are aimed at arranging these 
component volumes so that their mutual relationships define a meaningful 
situation for life and work on the moon. So the des igners—who understand things 
from within their situation—are trying to design a different situation that will serve 
as a world for the astronauts  (Figure 4-5).  
      Tacit and Explicit U nderstanding in Computer Support                                       125 
   
Figure 4-5. The network of references in lunar habitat design.  
It defines both the lunar habi tat design situation that is being designed and the 
situation of the designers designing it.  
 
The designers’ world includes their sense of what it is to be human in a variety of 
situations, as well as their knowledge of technical information and regulation s. 
They understand, for instance, what it is to get out of bed in the morning, to sit 
down with other people at breakfast, to yearn for privacy. As designers, they are 
experienced at using this tacit understanding to project themselves into the 
situations they are designing and to understand what it would be like to understand 
things from within that situation. They know (whether or not they articulate it) that 
this kind of design hinges on the establishment of a coherent network of 
significance that can su pport a meaningful life for people in the situation. They 
structure and rearrange the physical, functional, and interpersonal relationships of 
the habitat until they have established a nexus in which dimensions of life like 
privacy and sociability are defi ned.  
The designers project themselves into the world disclosed by these relationships in 
order to discover the meaning of things for astronauts in that situation. If they 
discover something that does not work properly, they try to redesign the 
relationshi ps. When they finally feel comfortable in their new world, then they 
have reached a satisfactory resolution of the manifold design constraints and they 
can move on to another level of design. At the conclusion of the design session 
transcribed in Chapter 3 , the designers felt a sense of resolution. They had reached 

      Tacit and Explicit U nderstanding in Computer Support                                       126 
  a plateau in their interpretive process at which all the major things they discovered 
fit comfortably into the network of relationships of the evolved state of their tacitly 
understood situation.  
The lunar habitat design session provides a particularly clear example of how the 
situation, that is always already understood in a tacit way, provides the working 
basis for discovering meaningful things within its context —whether one looks at 
the situati on of the designers or at the design of the situation. The lunar habitat 
design is understood by the designers as a situation incorporating multiple 
functional relationships. It is designed to be a situation that will be understood by 
astronauts living in it. But as it exists on a piece of paper or represented in a 
computer memory as data for a CAD program, it is not understood; it is not a 
situation; it is not meaningful. Only people can understand.  
When NASA compiled the chart of functional relationships  and relative 
adjacencies shown in Figure 3 -5 (Section 3.2 above), it may have looked like they 
recognized the role of architecture to structure human situations. But actually that 
chart analyses the habitat components as physical objects with functional 
characteristics that imply certain adjacency constraints. It analyses the habitat as a 
physical environment that has to function efficiently, without ever explicitly taking 
into account the fact that most of the functions have to do with people pursuing 
human aims. The chart of functional relationships does not directly represent the 
experiential relationships of a situation, but rather incorporates formal, explicit 
relationships of adjacencies and functional inter -dependencies. However, the chart 
is similar to an analysis of the designed lunar habitat situation because the formal 
interpretation necessarily grows out of tacitly understood experiences.  
The underlying situation is not to be taken as a physical environment of spatially 
juxtaposed objects, but a s a network of relationships that characterize how one 
thing is understood as useful to another, ultimately in terms of human purposes. 
As the basis for tacit understanding, the situation serves as a precondition for 
understanding from various viewpoints ( see Section 4.2) and for more explicit 
understandings (see Section 4.3).  
4.2. The Role of Shared Traditions and Personal 
Perspectives  
The situation is a complex network that can be understood (tacitly) from various 
perspectives, that is, with various focus es. The meaningful situation is in the first 
place a shared world. It can also be one with personal significance.  
      Tacit and Explicit U nderstanding in Computer Support                                       127 
  Shared perspectives . For Heidegger, human being is fundamentally a being with 
others, and this interpersonal existence takes place through the medium of a shared 
world. The relationships of significance that constitute the situation of an artifact 
point to other people and o pen up a realm in which they can be encountered as 
fellow ends for whom the artifacts are useful. So, for instance, the chairs around 
the habitat’s wardroom table are there not only for the individual astronaut who 
discovers them, but for others as well an d for the group of astronauts all together. 
The one astronaut experiences the chairs as part of a public space and knows that 
this understanding of its public character will be shared by others. The astronaut’s 
own sleep compartment is understood as privat e in the privative sense that it is not 
for others, and that the others will recognize and acknowledge its shared private 
significance.  
The relationship of interpersonal and personal understanding is important for 
analyzing collaborative design; but it is  also complex, as can be seen from 
Heidegger’s treatment of the issue. Heidegger recognizes the fundamentally 
interpersonal character of the situation, but he also presents a critique of the public 
realm (shared “common sense”). He is interested in uncover ing the meaning of 
being that has been lost sight of in our culture. The common sense traditional views 
that pervade a culture contribute to the cover -up, more than they contribute to the 
ability to explicate the meaning of being. “Public opinion,” accordi ng to Heidegger 
(1927), “regulates from the start all interpretation of the world and human 
existence. . . [but it] obscures everything and presents what has been covered up 
as familiar and universally accessible” (S. 127).10   
The role of shared understan ding is clear in the lunar habitat design sessions. The 
discussion of bathrooms in the videotape illustrates the complexity of the shared 
world. There is a publicly defined understanding of what constitutes a bathroom. 
Yet, if one looks closely at the conc ept—particularly under pressure from design 
constraints to rethink the concept creatively —it becomes clear that there are really 
many variations on the notion. There is, for instance, the British WC. One can trace 
 
10 The conservative culture critique of inauthenticity that Heidegger developed 
from this was a questionable move (see Adorno, 1964, and Stahl, 1975b), that he 
dropped in his subsequent writings. In fact, his later thought increasingly 
emphasizes the historical character of the meaning of being, an emphasis that 
calls for a deeper respect for the p ositive role of tradition. Gadamer (1964), 
building on Heidegger’s later writings, tries to rehabilitate the role of historical 
authority, tradition, and prejudice as the necessary foundation for 
understanding —including for any critical reflections that go  on to reject the 
accepted views (see the debate on this point between Gadamer, 1967, and 
Habermas, 1967).  
      Tacit and Explicit U nderstanding in Computer Support                                       128 
  the history of the concept, relating it to  the development of mechanical devices and 
indoor plumbing, and noting its continuing evolution under international 
influences (Americanization). Other notions of bathrooms can be considered, such 
as the nautical “head ,” designed under severe spatial const raints for use in a boat’s 
unusually confined environment.  
The discussion of bathrooms in the transcribed design session serves a double 
purpose: (1) to problematize the inherited tacit understanding of bathrooms and (2) 
to establish a new shared understa nding. Because the tacitly assumed character of 
the bathroom as a single room containing a toilet, a sink, and a shower was 
obstructing the ability to design in response to certain constraints that were arising, 
Archie started to reflect on the common conc eption. He discarded it in favor of a 
multiplicity of notions of bathrooms, named several, and explicitly described some 
of their characteristics. At the same time as this argued against the original public 
conception, it served to establish a new definiti on of bathroom as a shared 
understanding between Archie and Desi. Their new conceptualization was 
promptly incorporated in designs that featured a separation of toilet from shower. 
The new way of thinking about bathrooms corresponds closely to the NASA 
terminology that discusses “personal hygiene” and “human waste management” as 
separable functions. Desi was, in fact already familiar with this terminology as a 
shared understanding among lunar habitat designers, so he could easily make the 
transition from th e public way of thinking in the civilian world to that of the NASA 
establishment. Archie and Desi started out from different traditions. They 
deliberated by switching to views from several other perspectives and eventually 
merging a variety of consideratio ns to define a new, shared perspective. We know 
how to live in many worlds, to act in numerous situations, and to move freely 
among them. We understand things from a variety of shifting perspectives that we 
share with other people as a result of complex so cial histories and continuing 
negotiations. 11 
 
11 Because understanding is founded on social conventions, Dreyfus (1991) goes 
so far as to identify Heidegger’s concept of being with social practice  as defined 
by Bourdieu (1974). He uses examples of body language, like our tacit 
understanding of interpersonal distance, to illustrate how we know how to be in 
the shared world in countless ways of which we have no explicit knowledge. 
While these cultura lly transmitted understandings provide insightful illustrations, 
Dreyfus’ interpretation of Heideggerian ontology threatens to collapse into 
anthropology (albeit one with strong ontological roots). Even this paradigm of 
tacit understanding has been subject ed to explication and operationalizing as part 
of the space effort. In particular, the weightlessness of outer space and the 
confinement of lunar habitats transform the accustomed situations of social 
interaction in ways that have been made explicit and st udied. (See Raybeck, 
      Tacit and Explicit U nderstanding in Computer Support                                       129 
  Personal perspectives . Understanding has its personal, as well as its interpersonal 
aspects. Just as society projects the conventional understanding of the shared 
world, so individuals project their own perspe ctive on their situation. Heidegger 
uses the German term Stimmung —that can be variously translated as mood or 
tuning 12—to characterize the sense we have of being in our own particular world. 
To say, as Heidegger does, that we are thrown into a world with a certain mood is 
to state that we always already find a world disclosed for us and it has a particular 
character that colors our perceptions of what we discover in the world. The mood 
is not something we explicitly think about or choose. Rather, it determines in the 
first place how we can direct ourselves toward things that we discover and interact 
with tacitly or that we  can then in exceptional cases think about or make decisions 
about. The mood determines the way in which things are discovered as mattering 
to us. It defines our personal perspective on the world. For instance, things might 
seem threatening if we are in a state of fear or paranoia. It is neither a matter of 
first ascertaining a possible evil nor of first observing a neutral object and then 
judging it to be fearsome. Rather, if one is in a fearful mood then one may discover 
fearsome things. Our mood is a way  in which our understanding of our world is 
filtered or colored for us.  
 
1991, and Tafforin,  1990, for example.) However, the meaning of being is 
arguably more pervasive and less obtrusive than even social practice. It includes, 
for instance, the way nature has been encountered in different historical epoc hs 
as, e.g., the creation of gods, or the way artifacts are encountered as market 
commodities in industrial society.  
Heidegger sees the epochs of being as historically given; however he does not 
think they are reducible to culture, but rather that culture  reflects changes in the 
history of being. Although it is possible to propose a materialist critique of this 
view (see Adorno, 1966, and Stahl, 1975a) one cannot simply reduce 
Heidegger’s radical rethinking to commonsensical categories. Again, it is 
necessary to distinguish Heidegger’s methodological (ontological) arguments 
from the applications (e.g., a theory of human interpretation) that one would like 
to garner from his discussion. Regardless of what one thinks of Heidegger’s 
history of being, the point  for now is that all understanding involves from the 
start a sharing of interpersonal meaning and an initial acceptance of received 
opinion. Some of the perspectives we bring to bear in trying to understand the 
world are idiosyncratic interpretive “moves” with which we explore possible new 
views; others are the results of thousands of years of cultural history.  
 
12 See Stahl (1976) for a development of the metaphor of attunement to being.  
      Tacit and Explicit U nderstanding in Computer Support                                       130 
  Mood is correlative with understanding. Understanding is the disclosure of the 
network of relations of significance. This disclosure always has its specific mood. 
The situation is alwa ys disclosed as a possibility  of being. For instance, fear is a 
possible way of being in which things can possibly be discovered as fearsome. The 
mood of fear thereby opens up the possibility of understanding things as fearsome. 
Heidegger (1927) emphasizes  the way in which understanding is a matter of 
opening up possibilities. Through one's understanding one discloses what one is 
able (capable, possible) to be and what can possibly be discovered:  
As disclosure, understanding always pertains to the entirety of being-in-
the-world. As a potentiality for being, one is always being -able-to-be-in-
the-world. Not only is this, qua world, disclosed as possible significance, 
but when things within the world are themselves freed, they are freed for 
their own possibilit ies. Things are discovered in their service ability, 
usability, and detriment ability. The network of references reveals itself as 
the categorical totality of a possibility  of interconnectedness of things. 
(S.144) 
People are constantly projecting these possi bilities of understanding and then 
seeing the world in terms of them. We always anticipate  the next moment’s world, 
and we can only discover it through this anticipation. For instance, if we project a 
fearful mood then we can discover things that are fears ome, but we can also 
discover that there is nothing fearsome there. This is not a matter of explicit 
planning. We do not decide to anticipate the fearful. It is more like Schön’s 
designers, who project a design decision not because they know what the 
consequences will be but rather because they anticipate some general results and 
want to see what really ensues in detail. In fact, Heidegger’s word for projecting, 
Entwurf, in addition to meaning throwing something ahead of oneself can mean 
designing or sketch ing a project. So it is appropriate to think of this in terms of 
moves in design. In this kind of understanding as projecting, there is not an explicit, 
thematic grasping of the possibilities upon which the understanding is projected. 
That would destroy th e very character of the projection as possibilities and reduce 
it to specific given, intended contents. So projecting must remain tacit in order to 
throw before itself possibilities as possibilities and thereby let them be possible. 
To make an explicit cho ice is to limit oneself to a single, fully specified option, 
whereas the tacit projecting that is characteristic of understanding is an opening up 
of a (structured and delimited) range of possibilities for human being toward that 
which is understood.  
Perspectives for discovery . Heidegger differentiates (1) the disclosure  of a world 
from (2) the discovery  of things in that world. Our shared perspective (traditions) 
or personal perspectives (moods) open up ranges of possibility. They do this by 
defining our u nderstood situation as a network of significance. Within this 
      Tacit and Explicit U nderstanding in Computer Support                                       131 
  situation, we can discover contingencies. The things we discover are always 
discovered as meaningful in terms of the situational network of relationships that 
associates the discovered thing to already tacitly understood other things. The 
disclosure of the situation is the opening of a range of possibilities for discovering 
things and understanding them . 
Schön’s view of design provides a metaphor for Heidegger’s characterization of 
life as interp retation. For Schön (1983), the reflective practitioner projects a 
framing of the design problem by making design decisions or moves. This imposes 
a structure on the situation and determines the kinds of things that can take place. 
But it does not fully de termine what does take place: that must be discovered by 
paying attention to the reaction of the situation. “In the designer’s conversation 
with the materials of his design, he can never make a move which has only the 
effects intended for it. His materials  are continually talking back to him, causing 
him to apprehend unanticipated problems and potentials” (p.101). One can almost 
understand this literally in terms of a question and answer conversation. The 
designer poses the question, how would things work o ut if I make such and such a 
design move? The designer can choose the question, based on personal interests, 
intuitions, aesthetics, training, experience, anticipations. (This is the subjective or 
creative aspect.) But the designer does not choose the answ ers. (This is the 
objective aspect of creative discovery.) The answers are discovered, and may be 
surprising —despite the fact that they could not have been discovered if the 
question had not been posed. This is a subtle point: through the designer’s 
transaction with the situation, “he shapes it and makes himself a part of it. Hence, 
the sense he makes of the situation must include his own contribution to it. Yet he 
recognizes that the situation, having a life of its own distinct from his intentions, 
may foil his projects and reveal new meanings” (p.163).  
For Heidegger, the situation is always disclosed from a certain perspective. The 
perspective or mood is like a questioning: how does the situation look to a fearful 
person? But, of course, we do not choose o ur moods, even if once in a mood we 
can try to change it. So the metaphor of interpreter as designer is limited to the 
extent that designers are thought to make volitional, explicit choices. But the 
parallel holds in that once the situation is disclosed as  a network of mood -
influenced meanings, the things that can be discovered within that situation have 
not been determined. To some extent, their possible character to us might be 
delimited by our anticipations, but things discovered can completely surprise us. 
For instance, the lunar habitat designers may have projected a certain 
understanding of what it is to live in the habitat while they arranged modules along 
one wall to keep the other side of the habitat open for group activities like eating 
around a ta ble. Then they discovered that the bathroom opened onto the eating 
area. This was a surprise that they had not anticipated as part of their design 
decisions. However, the fact that they could then discover this as a new problem 
      Tacit and Explicit U nderstanding in Computer Support                                       132 
  in their design was based no t only on their having tried out an arrangement and 
having sketched it so they could see its implications, but also on their continuing 
to look at the new design with their sense of living in it. Desi actually talked about 
the situation that he was living in his imagination in terms of past situations that 
he had experienced in his office, where the bathroom opens onto a public area.  
So the possibility of discovering surprises, constraints, and problems in a design is 
a function of the understanding of the  situation and would not exist for someone 
who lacked such understanding. The projecting of a situation (with its mood and 
its understanding) is the posing of a question. Gadamer (1966) formulates this 
connection between the answers that can be discovered and the questions we come 
to the world with in linguistic terms: “The most fundamental phenomenon of 
hermeneutics is this: that any statement that is possible can be understood as an 
answer to a question —and in fact that is the only way it really can be un derstood” 
(S.107). 
This sketch of Heidegger’s interpretation of the phenomena of the public realm 
and of personal moods shows that understanding is neither objectively determined 
nor a matter of unfounded whim. Rather, it is based on the projection of a wo rld of 
specific possibility  that has the character of a shared world and/or a personal mood. 
Understanding is founded on the disclosure of a network of references that point 
to the person who understands the situation and also point to other people as thos e 
who share the meaningful world. The situation is not a physical collection of 
objects that can be investigated scientifically,13 but a structure of significance in 
which things can be discovered as already meaningful within the projected nexus 
of possibl e ways of relating to other things and serving human aims. The 
phenomenon of mood provides phenomenological evidence that in understanding 
one always finds oneself already anticipating distinct kinds of things in terms of 
the network of significance in whi ch one is situated. One always understands from 
within some perspective , whether this perspective is primarily public or personal. 
Although understanding is only possible from within a mood (Heidegger), a 
conversation (Schön), or a questioning (Gadamer), o ne can subsequently modify, 
shift, or change perspectives within a situation.  
 
13 Of course, some things in the situation can become objects of scient ific 
investigation. But this is only possible on the basis of pre -scientific, situated 
understanding. Scientific methodology is a derived form of understanding 
according to Heidegger’s analysis (see next Section).  
      Tacit and Explicit U nderstanding in Computer Support                                       133 
  4.3. Interpretation as Explication in Language  
To understand, according to Heidegger, is to be tacitly situated. This philosophy 
of understanding could be contrasted with Descart es’ “I think, therefore I am,” by 
saying, “I am situated, therefore I understand.” This would not be meant as a 
logical existence proof, but rather as a description of human existence as always 
being in a world that is already understood as meaningful and that opens up 
possible ways of understanding oneself, artifacts, and other people. Nor would this 
yet involve any explicit cognitive act in the sense of Descartes’ propositional 
cogito. Furthermore, it avoids the trap of post -Cartesian philosophy, the prob lem 
of how subjective mental acts can understand objects in the world, because such 
understanding is given with human existence. Also in contrast to Descartes, human 
existence is not a “clean slate,” but always understands from some concrete 
perspective, t hat incorporates shared traditions and personal anticipations as part 
of its being embedded in an understood situation.  
One way of looking at this contrast is to say that Heidegger has described tacit 
situated understanding as the precondition  for explicit  knowledge in Descartes’ 
sense. Heidegger then goes on to show how everyday knowledge and even 
scientific knowledge are built upon such understanding through processes of 
interpretation. In general, interpretation is simply the further development of 
understanding. Through interpretation, what was understood tacitly comes to be 
known explicitly. Such knowledge is not the acquisition of information in the form 
of propositional facts (although it can eventually be developed into that form), but 
the working ou t of the possibilities that were inherent in the understanding. This 
“working out” is a matter of interpretation. As discussed in the previous section, 
such working out can produce unanticipated surprises and require a 
reinterpretation that revises situate d understanding.  
In German, the word for interpretation is Auslegung : literally the laying -out of 
something. This is similar to the English word, explication , that is derived from 
the Latin for un -folding. Interpretive explication unfolds, lays out, or dev elops the 
implications in tacit understanding. This happens in the discovery of artifacts in 
the situation. When an artifact is discovered as a hammer, the references in the 
network of significance concerning the hammer (illustrated in Figure 4 -3 of 
Section 4.1) are taken apart, laid out, or un -folded; thereby they become explicitly 
understood. The artifact is seen as a hammer, as a tool for pounding nails, as a 
means to the building of a structure, as something useful in pursuing human 
projects. This is th e structure of explicit interpretation: something as something.  
The “as” makes up the structure of the explicitness of something that is understood. 
It is known as the hermeneutic  as: the as of interpretation. To simply use the artifact 
as a hammer is to understand it tacitly, but to articulate it as a hammer is to interpret 
      Tacit and Explicit U nderstanding in Computer Support                                       134 
  it explicitly. According to Heidegger (1927), this is, in turn, a precondition for 
being able to formulate propositional knowledge (and ultimately methodological 
scientific facts) abou t the thing as a hammer:  
In the mere encountering of something, the thing is understood in terms of 
a totality of references, and the encounter hides within itself the 
explicitness of the assignment -relations that belong to that totality. That 
which is und erstood gets articulated when the entity to be understood is 
brought close interpretively by taking as our clue the “something as 
something ;” and this articulation comes before our making any thematic 
assertion about it. In such an assertion the “as” does not turn up for the 
first time; it just gets expressed for the first time, and this is possible only 
in that it lies before us as something expressible. (S.149)  
That is, tacitly understanding something as something on the basis of references in 
the situati on is what permits one to interpret the thing explicitly as something 
subsequently and eventually to name it as something in linguistic discourse.  
Section 4.1 suggested that in various kinds of breakdown cases —where an artifact 
is, for instance, conspicuou s, obtrusive, or obstinate by being damaged, missing, 
or in the way —the implicit working of some of the references in the network of 
significance may be broken and as a result these references come to prominence. 
In such a breakdown case, the role of inter pretation would be to mend the 
referential breaks by creating new reference links to the artifact within the 
situation. As depicted in Figure 4 -6, the process of understanding would proceed 
through the following stages:  
* An initial preunderstanding disclo ses a world from a certain perspective of 
possibilities.  
* The artifact is discovered and understood as something in terms of the 
situational network of references.  
* However, the references are inadequate for understanding the artifact and there 
is a breakdown in the network.  
* The artifact is interpreted by laying out the implicit references and repairing 
the break in them.  
* This makes explicit the understanding of the artifact as such and such a thing.  
* The new understanding can then be asserted in  language and communicated or 
it can revert to tacit understanding.  
* The revised tacit understanding forms the preunderstanding for any further 
interpretation, completing the hermeneutic circle of understanding.  
      Tacit and Explicit U nderstanding in Computer Support                                       135 
   
 
Figure 4-6. Two similar theories of breakdown.  
A comparison of Heidegger’s hermeneutic circle with Schön’s theory of 
reflection -in-action shows strong parallels. For Heidegger, the breakdown occurs 
within the network of references that constitute the situation.  
 
Note that although this proce ss is similar to Schön’s (1985) theory of breakdown 
and repair, for Heidegger the breakdown is in the situational preunderstanding, not 
in the activity itself.  
Actually, if one reads Schön carefully, it is apparent that he also views breakdowns 
as taking place at the level of understanding, even though his terminology is open 
to the misinterpretation that the breakdown is at the action level. As quoted in 
Section 2.3, Schön (1985) says, “Sometimes, however, there are surprises. These 
take the form of unant icipated events which do not fit existing understandings , fall 
outside the categories  of knowing -in-action. . . . There is a demand for reflection 
[that] converts tacit knowing -in-action to explicit knowledge for action (p.24; 
italics added).  
At the corres ponding point in Being and Time , where he is formulating his general 
theory of understanding and interpretation, Heidegger does not limit himself to 

      Tacit and Explicit U nderstanding in Computer Support                                       136 
  cases of breakdowns in action. Rather, he emphasizes the tacit basis of all 
understanding of artifacts. The  grounding of all understanding in a tacit grasp of 
the significant references of the situation provides the first of three important 
characteristics of interpretation. According to Heidegger’s analysis, there are three 
preconditions of interpretation, her e referred to as pre -possession, pre -view, and 
pre-conception.  
(a) Artifacts are always understood in terms of the totality of references of the 
situation. This totality is generally not explicitly grasped through a thematic 
interpretation. In fact, if it has once been grasped that way, it tends to return again 
to a tacit understanding. It is in this tacit mode that understanding is the essential 
foundation for everyday interpretation. In other words, interpretation of something 
as something is always groun ded in a situatedness or pre-possession : the 
interpretation already possesses the situation  through an understanding of the 
totality of references, and it moves within this understandingly in order to develop 
the understanding into a more explicit form.  
(b) Interpretation is also always grounded in a pre-view. The development of 
understanding of something that is still veiled takes place through an unveiling that 
is always guided by a point of view  that fixes that with respect to which the thing 
should be i nterpreted. The preview carves up that which the prepossession has in 
terms of a specific interpretability; it specifies what are to be viewed as the things 
and what are the joints dividing them. This basis of interpretation was taken up 
later by Kuhn (196 4), who argued that even the natural sciences viewed reality 
through paradigms that institutionalized this kind of preview. An indication of the 
importance of preview can be seen in the way that both Schön (1983) and Kuhn 
(1964) claim that a major outcome of professional schooling is the transfer (tacitly, 
through apprenticeship relationships) of modes of preview that are definitive of 
schools of science, technology, or design.  
(c) Interpretation is grounded in pre-conception  as well. Interpretation has alw ays 
already chosen a way of conceptualizing whatever is being interpreted. The choice 
need not be a final decision; it can be tentative and subject to future change. The 
conceptual framework  can either be created appropriately through articulation of 
the thing being interpreted, or the thing can be forced into a conceptualization that 
contradicts its nature. But some framing of the interpretive effort in terms of a 
system of concepts must be chosen. To interpret x as y is to choose a 
conceptualization of x in terms of something like y. Even if this is not an explicit 
choice, but happens spontaneously or implicitly, it opens a range of possible 
interpretations and excludes other ways of grasping x.  
 
      Tacit and Explicit U nderstanding in Computer Support                                       137 
  Table 4-1. The three aspects of interpretation.  
They are gro unded in the three -fold preconditions of all understanding.  
 (a) (b) (c) 
preunderstanding  prepossession  preview preconception  
interpretation  situated perspectival  linguistic 
Chapter 4  Section 4.1  Section 4.2  Section 4.3  
 
The characteristics of prepossession, preview, and preconception make up the 
three-fold preconditional structure of interpretation in Heidegger’s analysis. The 
understanding that has this three -fold structure will be referred to as 
preunderstanding  to distinguish it as a stage of the more general term, 
“understanding ,” and to emphasize that it forms the initial precondition for the 
development of any interpretation. The character of interpretation as situated, 
perspectival, and linguistic is derived from th e three-fold structure of 
preunderstanding (see Table 4 -1). 
The three aspects of preunderstanding can be illustrated with the example of 
interpretation in design given in Section 3.1, where Archie and Desi begin to 
discuss privacy issues. The action in tha t opening scene of the transcripts is 
propelled by a tension between Archie and Desi’s two different understandings of 
the proposed design. They start out with somewhat different prepossessions, 
previews, and preconceptions. Desi starts off trying to orien t Archie to share his 
prepossession of the situation represented in the sketch (Figure 3 -1): “You have a 
big ‘family room’ or ‘den’. And what they do is either fold down the Murphy bed 
or set up cots....” Archie gets the picture —i.e., he starts to have the  same 
understanding of the situation in the habitat —but he has a different preview or 
slant on it. Desi views the design as meeting the need to provide a minimal 
accommodation for sleeping: a place to stretch out one's body during the period set 
aside for sleep. Archie, however, views it on the basis of his own personal 
experiences. In his view, “There are times when you’re waking up or going to sleep 
and getting your clothes on or whatever, when a modicum of privacy can actually 
be treasured, and when some  people read a book.” While Desi is quick to respond 
to Archie’s concerns, he does it while remaining within a preconception that he 
has adopted from NASA. That is, he had started with an austere, military view of 
providing a minimal “accommodation for sle ep” and then he switched to 
discussing “crew compartments ,” a term used within NASA to describe private 
sleeping cubicles for astronauts in Space Station.  
The initial discussion of privacy ends with agreement about the importance of 
privacy for a long mis sion: 
      Tacit and Explicit U nderstanding in Computer Support                                       138 
  Archie: It's an interesting question. If you cross this 30 day limit, then it 
seems likely the sleep compartments suddenly become a dramatically 
higher priority. People start freaking out that they can't get away from 
other people.  
Desi: I would thin k so. I would think that the idea of being able to get away 
would be nice. Having that privacy, the control, even if they don't use it.  
Here it is clear, first of all, that Archie and Desi each have an understanding of the 
situation that goes far beyond wh at is explicitly drawn in the sketch to include a 
sense of what life would be like in the nexus of artifacts, meanings, and 
relationships that are implied there. Secondly, they view this from specific 
perspectives, whether based on personal experiences of feelings of privacy or on 
traditions passed down by other designers. Thirdly, they bring to bear 
conceptualizations such as “crew compartment” in order to understand the given 
possibilities and to share this understanding.  
The preconditional structure of u nderstanding —the fact that interpretation always 
already has a prepossession of the situation, a preview of a perspective, and a 
preconception in specific language —means that interpretation is never a 
presuppositionless apprehending of something pre -given. Rather, all interpretation 
that is to contribute to understanding must have already understood the thing that 
is to be interpreted. The interpretation process must understand the context of 
significance in which the thing is situated; it must know how to carve up the matter 
appropriately; and it must use suitable terms to interpret it as something. The 
circularity of this undertaking is known as the hermeneutic  circle. It is a well -
known phenomenon in literary interpretation and in holistic disciplines: on e 
cannot, for instance, interpret the line of a poem without understanding the context 
of the whole poem, the poet’s other works, or the poet’s life; but the interpretation 
of the line may be needed in order to understand these very contexts.  
Such circula rity cannot be avoided. It is part of the structure of human existence 
and of interpretation. It does not mean that things cannot be interpreted 
appropriately, but just that this is not automatic. The circular structure must be 
taken into account. In it, a ccording to Heidegger (1927), is buried “a positive 
possibility of the most primary kind of knowing, that, however, can only be 
grasped if the interpretation has understood that its first, last, and constant task 
remains to make sure that the prepossession , preview, and preconception are not 
given by fancies and popular conceptions, but that the scientific theme is secured 
by working them out from the things themselves” (S.153).  
One necessarily starts with sets of prejudices that have been handed down 
historically. However, the interpretation process allows one to methodically reflect 
upon these prejudices and develop new understandings, perspectives, and words 
      Tacit and Explicit U nderstanding in Computer Support                                       139 
  for carrying on the interpretation. Being and Time  is itself a model of such a 
process, beginning  as it does with the vague, confused, and obscured historical 
sense of the meaning of being and explicating the way that it is understood in order 
to develop a new viewpoint and vocabulary for interpreting being. Of course, the 
danger exists that one will not pursue this effort and will remain with the prevailing 
prejudices. (This is the basis for Heidegger’s critique of the understanding defined 
by the public realm and of the corresponding inauthentic existence that does not 
strive to develop beyond such u nderstanding.)  
The way the hermeneutic circle works can be seen in the way Desi and Archie 
develop their understanding of the location of the toilet in Section 3.2. They start 
with a set of prejudices that have been handed down in the preconditional struct ure 
of their understanding. Desi bases his first design on the wet -wall principle, the 
idea that all appliances needing plumbing should be located together to facilitate 
the supply and removal of water. Archie starts out his thinking with the 
conventional (at least in his culture) idea that the toilet and shower are located in a 
single room, the bathroom. But then they both begin to reflect on the role of each 
item in the unique situation that is being designed. If the toilet is too close to the 
sleep compa rtments, then people may be disturbed by it during the night (as they 
in fact were in Skylab). On the other hand, as Desi points out, “You’re not going 
to get up in the middle of the night and take a shower.” So Archie suggests, “Could 
we separate them, ha ve the shower a little more convenient to where you’re going 
to change, get dressed?” The idea of separating the shower and toilet arises out of 
the process of interpretation, and then motivates the subsequent thrust of the design 
effort to establish a pub lic-private gradient across the habitat.  
For both Desi and Archie, the understanding began with an assumption that the 
shower and toilet would be located together. They were able to get beyond this 
starting-point only on the basis of starting there and th en reflecting on the problems 
that they could see in the consequences of this starting -point. (In Schön’s terms, 
they had to make a design decision and then let its implications talk back to them.) 
Then they were willing to make their initial assumptions e xplicit and to criticize 
them in terms of the things themselves: in this case, the functions of the shower 
and toilet in the life of the habitat. Their designing necessarily begins with 
uncritically accepted popular prejudices (the preconditional structure s of 
understanding), but it then works out more appropriate interpretations through an 
on-going analysis and critique of the specific relationships of the situation, of their 
own perspectives, and of the conceptual framework being used.  
The first two compo nents of the preconditional structure of interpretation have 
already been discussed in the preceding presentation of Heidegger’s philosophy. 
The prepossession of a situation was considered in terms of the situated cognition 
of artifacts in Section 4.1, and  the preview of public and personal perspectives was 
      Tacit and Explicit U nderstanding in Computer Support                                       140 
  presented in terms of public opinion and moods in Section 4.2. However, the 
conceptualization or language of preconceptions has not yet been examined. 
Heidegger discusses it in terms of assertion and discourse.  
Assertions are familiar from the rationalist tradition as propositional judgments 
(statements of the form: “x is a y” or “x as y”). Heidegger reviews three basic 
meanings of assertion: (a) assertion means pointing out , (b) assertion means 
predication, (c) assertion means communication  (Table 4-2). In each case, 
Heidegger argues that assertions are not fundamental, but are derivative of 
understanding and interpretation.  
 
Table 4-2. The three aspects of assertion.  
They are grounded in the preunderstanding that belongs to discourse. Discourse, 
in turn, is grounded in the preunderstanding of human involvements.  
preunderstanding  prepossession  preview preconception  
discourse  situation view shared language  
assertion pointing out  predicating  communicating  
 
(a) When someone asserts, “The hammer is too heavy,” this is a pointing out of an 
artifact that has already been understood as a hammer and has been interpreted as 
too heavy. The assertion is not about some kind of representation of a hammer 
(where the sta tus of the representation and its relation to the assertion are 
problematic), but about the hammer artifact itself, as it is discovered in the 
understood situation.  
(b) In predication, we assert a definite character of the thing discussed. But this is 
simply a variation on pointing out. We point out the thing in a way that restricts 
our view of it, for instance, to its heaviness. By this explicit restriction of the view, 
that which is already manifest may be made explicitly manifest in its definite 
character. So predication is a development of tacit understanding into a more 
explicit form.  
(c) As communication, assertion is letting other people see with us what we are 
pointing out, and letting them see it as explicitly restricted. It is a sharing of the 
more explicit interpretation of something in the world whose understanding is 
already shared as part of a shared situation.  
Because it is derived from interpretation, assertion has the three -fold 
preconditional structure. The pointing out requires a preposse ssion of what gets 
pointed out. The predication that narrows the view is a development of the preview, 
      Tacit and Explicit U nderstanding in Computer Support                                       141 
  that had already narrowed the view in that direction. The communication takes 
place within a language that inconspicuously implies a preconception, becau se 
language already hides in itself a developed conceptualization.  
However, assertion (that rationalist philosophy focuses on as the basic form of 
objective knowledge) may also entail an essential transformation from primary 
interpretation, from which it is derived. The hermeneutic -as can become 
transformed into the apophantic -as of discourse, and ultimately into the copula 
(“is”) of propositional assertions. This happens through a process of 
decontextualization; the artifact that is the subject of the ass ertion losses its 
embedding in the situation. The prepossession no longer has the situation with its 
nexus of references that determine the artifact’s significance (the basis of the 
hermeneutic -as). Now the thing is simply present as an isolated object, wh ich can 
have attributes. The assertion still points out the thing in a definite way, but now 
the definiteness is associated with an attribute, rather than with an aspect of the 
situation. The binding of the object to its attribute can be further formalized  into a 
calculus of relations. In this way, situated understanding can eventually develop 
through interpretation into theoretical knowledge, which can be represented in 
formalisms. As the interpretation draws further and further from its original 
concrete embedding in the situation, it becomes increasingly abstract.14 
Despite the importance of language in Heidegger’s philosophy of interpretation, 
he is very sketchy in his discussion of the various layers of abstraction through 
which understanding can be tra nsformed (Table 4 -3) and the way each successive 
level in grounded in previous levels (Table 4 -2). The transformations of tacit 
preunderstanding into increasingly explicit and formalized knowledge will have to 
be further worked out in Chapter 5 in order to  provide a basis for the theory of 
computer support of interpretation in Chapter 6. Thereby, the entries in Table 4 -3 
will be clarified in Part II.  
 
14 The term abstract comes from the Latin abstrahere , to draw away.  
      Tacit and Explicit U nderstanding in Computer Support                                       142 
  Table 4-3. Increasing abstraction of the preconditions of understanding.  
preunderstanding  prepossession  preview preconception  implicit as  
interpretation  situated perspectival  linguistic hermeneutic as  
discourse  identify filter associate the word “as”  
assertion name clause adjective apophantic as  
predication  object modifier attribute the copula “is”  
logical calculus  variable conditional  operator relation 
 
Like all interpretation, assertion has its dangers. Assertions can become abstracted 
from their basis in the preunderstanding of discourse. Communication in the public 
realm can degenerate to hearsay, where the grasp on the original phenomena 
becomes veile d. As assertions are passed on in re -telling, there is a widening of the 
range of shared interpretations, as Plato (348 BC) had already remarked in his 
famous seventh letter where he discusses the potential dangers of written language. 
Whenever something i s uncovered in a process of explication, there is the 
possibility or even likelihood of its becoming covered up again in various ways. 
Such is the dialectic of tacit and explicit. This need not be considered a problem in 
every case. It is often necessary t hat our explicit interpretations re -submerge into 
tacit understanding in order to function effectively. Heidegger (1951) provides a 
good example of this in his later writings on poetry interpretation. Literary 
interpretation is a process of explication who se goal is to be absorbed into a deeper, 
but tacit understanding of the work:  
Whatever else a commentary may or may not accomplish, the following is 
always true of it: in order to make what has been composed in the poem 
somewhat clearer, the commentary mus t always shatter itself and what it 
is trying to do. For the sake of what was composed, the commentary to the 
poem must strive to make itself superfluous. The final, but also the most 
difficult step of every interpretation consists in disappearing along wi th its 
commentary in favor of the pure presence of the poem. The poem, that 
then stands under its own law, itself directly shines a light on the other 
poems. Then, during repeated readings we believe we had always already 
understood the poems that way. It is good that we think that. (S.7 f)  
Heidegger’s point here is simply to show that the basis of all knowledge is in 
situated understanding and in its explication via hermeneutic interpretation. He 
notes that many intermediate gradations are possible between  the primary form of 
engaged understanding that is absorbed in the situation and propositional 
      Tacit and Explicit U nderstanding in Computer Support                                       143 
  assertions about objects of theoretical study that have distanced themselves from 
their situatedness. There are, for instance, assertions about what is happening  
within the situation, accounts concerning artifacts being used, reports on things 
discovered in the world, the recording and fixing of “facts ,” descriptions of states 
of affairs, or narrations of events that have transpired. Such assertions have their 
basis in our understanding of the world; to take them as propositions whose 
meaning is traced back to theoretical observations would be to pervert their origin 
and misconstrue their derived status.  
An interpretation or assertion can be articulated as discours e, which is expressed 
in language. The existential foundation of language is discourse  and hearing: our 
ability to talk and to listen form the basis of our ability to use language to articulate 
the meaning of our understanding or interpretations. For insta nce, the articulation 
of the interpersonal shared world gets constituted in speech acts like assenting, 
refusing, demanding, warning, and so on. Discourse and hearing make it possible 
to communicate a shared world, and thereby to grasp it as truly shared. They also 
make it possible (e.g., through intonation) to communicate one's personal mood. 
So discourse and listening are the way in which we are open to other people and 
to our shared being together.  
Once more, Heidegger (1927) reverses the priority of phe nomena from the 
scientific view. When we hear sounds, we do not first hear tones and then 
subsequently interpret them as signifying something —as though we apprehended 
the tone as a neutral object and then associated an attribute with it. Rather, we first 
hear meaningful, understood artifacts, that we can later abstract to pure sounds and 
facts: “What we ‘first’ hear is never noises or complexes of sounds, but the 
creaking wagon, the motor -cycle. We hear the column on the march, the north 
wind, the woodpecke r tapping, the fire crackling” (S.163).  
When Desi and Archie look at the sketch reproduced in Figure 3 -2 of Section 3.2, 
with the rectangle labeled “toilet” near the rectangle labeled “ward room table”, 
they do not observe a series of lines forming rectan gles, etc. Rather they directly 
perceive a public meeting and eating area with a bathroom opening onto it. Desi 
immediately starts to talk about this (sketched) situation as being like the (real) 
arrangement at his office, where the bathroom faces the rece ption area. Archie also 
points to the situation as being problematic. He perceives  the habitat as consisting 
of meaningful areas interacting, he does not have to deduce this fact from an 
analysis of coordinates of points and distances between lines —the way a computer 
would have to. Furthermore, the language for talking about his understanding and 
sharing it with other people is immediately available as part of his linguistic 
traditions.  
When Archie tries to rethink the concept of bathroom and to suggest to Desi that 
other definitions might be worth exploring for the sake of the design, he does all 
      Tacit and Explicit U nderstanding in Computer Support                                       144 
  this in language. It is clear from the videotape that his chain of ideas follows 
haltingly, as one link after the other is brought out as a follow up to what came 
before. It is not that Archie had an argument all logically thought out in his mind 
that he then telegraphed to Desi. Rather, he thought out the relationships of the 
different national models of bathrooms by linguistically pointing out different 
aspects. D esi followed the discussion, not by translating sounds into symbols and 
deducing consequences for some representation of bathrooms in his head, but by 
seeing their shared notion of bathroom develop as its various aspects were unveiled 
through discourse.  
Language is the medium in which our understanding of our world is interpretively 
explicated. Whereas animals exist in the wilderness of environments that are 
simply understood in unmediated, instinctual ways, people dwell in richly 
interpreted, socially -mediated worlds thanks to language. As Heidegger (1947) 
puts it, “Language is the house of being” (S.188). Gadamer (1960) attributes an 
even more universal role to language, simultaneously stressing that it is a medium 
of discovery as well as of projection: “B eing that can be understood is language” 
(p.xxiii). For Heidegger and Gadamer language is not an arbitrary system of 
symbols for representing things (the way a programming “language” is), but the 
embodiment of historical tradition, the constantly evolving encapsulation of 
mankind’s understanding of the being of the world, artifacts, and people. In this 
sense, “being is not experienced where something can be constructed by us and is 
to that extent conceived, but it is experienced where what is happening can merely 
be understood” (ibid.). Thanks to our dwelling in language, we can understand, 
discover, interpret, and share whatever can be that can be understood .  
 
Part II. The Problem of Tacit and 
Explicit Understanding  
 
 
 
 
 “The predicate calculus is often treated by philosophers  
 as if it were the universal language; but to put beliefs  
 expressed in a natural language into the predicate calculus  
 format, one must first interpret them—that is, one must  
 deal with the very  problem we wish to solve.”  
    Hilary Putnam  
    Representation and Reality  
    (1988, p.88)  
 
